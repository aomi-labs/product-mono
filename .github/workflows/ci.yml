name: Unit Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  rust-tests:
    name: Rust Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        run: cargo fmt --all -- --check
        working-directory: ./chatbot

      - name: Run Clippy
        run: cargo clippy --all-targets -- -D warnings
        working-directory: ./chatbot

      - name: Clean fastembed cache
        run: rm -rf .fastembed_cache
        working-directory: ./chatbot

      - name: Run tests
        run: cargo test --all-features --verbose
        working-directory: ./chatbot

      - name: Build release
        run: cargo build --release --verbose
        working-directory: ./chatbot

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run linter
        run: npm run lint
        working-directory: ./frontend
        continue-on-error: true

      - name: Run type check
        run: npm run type-check || npx tsc --noEmit
        working-directory: ./frontend
        continue-on-error: true

      - name: Run tests
        run: npm test -- --passWithNoTests
        working-directory: ./frontend
        continue-on-error: true

      - name: Build production bundle
        run: npm run build
        working-directory: ./frontend
        env:
          NEXT_PUBLIC_BACKEND_URL: http://localhost:4000
          NEXT_PUBLIC_ANVIL_URL: http://localhost:8545

  all-checks-passed:
    name: All CI Checks Passed
    runs-on: ubuntu-latest
    needs: [rust-tests, frontend-build]
    steps:
      - name: Success
        run: |
          echo "✅ All CI checks have passed successfully!"
          echo "- Rust tests: ✓"
          echo "- Frontend build: ✓"
