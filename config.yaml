# Configuration for forge-mcp project
# Single source of truth for all service configurations

# Development Environment
development:
  services:
    mcp_server:
      host: "127.0.0.1"
      port: 5000
    backend:
      host: "0.0.0.0"
      port: 8080
    frontend:
      host: "localhost"
      port: 3000
    anvil:
      host: "127.0.0.1"
      port: 8545
  
  # Support this in our python config loader, let it output a string of json like this:
  # {
  #   "testnet": "http://127.0.0.1:8545",
  #   "mainnet": "{$ETH_RPC_URL}",
  #   "base": "{$BASE_RPC_URL}"
  # }
  networks:
    testnet:
      url: "http://127.0.0.1:8545"
    mainnet:
      url: "https://eth-mainnet.g.alchemy.com/v2/{$ALCHEMY_API_KEY}"
    base:
      url: "https://base-mainnet.g.alchemy.com/v2/{$ALCHEMY_API_KEY}"
    arbitrum:
      url: "https://arb-mainnet.g.alchemy.com/v2/{$ALCHEMY_API_KEY}"

  settings:
    auto_reload: true
    debug_mode: true
    log_level: "info"
    rust_log: "info"
    rust_backtrace: "1"
    node_env: "development"

# Production Environment  
production:
  # Services are configured in docker-compose.yml
  # Support this in our python config loader
  networks:
    testnet:
      url: "http://anvil:8545"
    mainnet:
      url: "https://eth-mainnet.g.alchemy.com/v2/{$ALCHEMY_API_KEY}"
    base:
      url: "https://base-mainnet.g.alchemy.com/v2/{$ALCHEMY_API_KEY}"
    arbitrum:
      url: "https://arb-mainnet.g.alchemy.com/v2/{$ALCHEMY_API_KEY}"
      
  settings:
    auto_reload: false
    debug_mode: false
    log_level: "warn"
    rust_log: "warn"
    node_env: "production"

# Connection settings (shared across environments)
connection:
  max_reconnect_attempts: 5
  reconnect_delay_ms: 3000
  sse_interval_ms: 500
  keep_alive_interval_s: 1
  health_check_timeout_s: 30
  mcp_connection_timeout_s: 20

# Chat settings (shared across environments)
chat:
  max_message_length: 2000
  scroll_threshold: 50
