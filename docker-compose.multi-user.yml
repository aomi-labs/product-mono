version: '3.8'

services:
  # Anvil - Local Ethereum testnet
  anvil:
    image: ghcr.io/foundry-rs/foundry:latest
    command: ["anvil", "--host", "0.0.0.0", "--fork-url", "https://eth-mainnet.public.blastapi.io@22419684"]
    ports:
      - "8545:8545"
    networks:
      - forge-mcp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8545"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Multi-user forge-mcp application
  # Includes: session-aware backend + 6 network-specific MCP servers + frontend
  forge-mcp:
    build:
      context: .
      dockerfile: Dockerfile.multi-user
    environment:
      - FORGE_ENV=production
      - RUST_LOG=warn
      - NODE_ENV=production
    env_file:
      - .env.prod
    ports:
      # Backend
      - "8080:8080"
      # Frontend
      - "3000:3000"
      # MCP Servers (one per network)
      - "5000:5000"  # testnet
      - "5001:5001"  # mainnet
      - "5002:5002"  # polygon
      - "5003:5003"  # base
      - "5004:5004"  # arbitrum
      - "5005:5005"  # linea
    depends_on:
      anvil:
        condition: service_healthy
    networks:
      - forge-mcp
    volumes:
      # Mount documents if they exist
      - ./documents:/home/forge-mcp/documents:ro
      # Mount logs for debugging
      - forge-logs:/var/log
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl:ro
    depends_on:
      forge-mcp:
        condition: service_healthy
    networks:
      - forge-mcp
    restart: unless-stopped
    profiles:
      - production

  # Optional: Redis for session persistence (future enhancement)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - forge-mcp
    restart: unless-stopped
    profiles:
      - with-redis

  # Optional: Database for user sessions and history
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: forge_mcp
      POSTGRES_USER: forge_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-forge_secure_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - forge-mcp
    restart: unless-stopped
    profiles:
      - with-database

networks:
  forge-mcp:
    driver: bridge

volumes:
  forge-logs:
    driver: local
  redis-data:
    driver: local
  postgres-data:
    driver: local