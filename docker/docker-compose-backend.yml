services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf.template
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    environment:
      - DOMAIN_NAME=${AOMI_API_DOMAIN}
    command: /bin/sh -c "envsubst '$$DOMAIN_NAME' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - backend
      - mcp
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

  backend:
    image: ghcr.io/aomi-labs/product-mono/backend:${IMAGE_TAG:-latest}
    env_file:
      - ../.env.prod
    environment:
      MCP_SERVER_HOST: mcp
      MCP_SERVER_PORT: 5001
      BACKEND_HOST: 0.0.0.0
      BACKEND_PORT: 8081
      BACKEND_SKIP_DOCS: false
      RUST_LOG: info
    expose:
      - "8081"
    depends_on:
      - mcp
    restart: unless-stopped

  mcp:
    image: ghcr.io/aomi-labs/product-mono/mcp:${IMAGE_TAG:-latest}
    env_file:
      - ../.env.prod
    environment:
      MCP_SERVER_HOST: 0.0.0.0
      MCP_SERVER_PORT: 5001
      RUST_LOG: info
    expose:
      - "5001"
    depends_on:
      - anvil
    restart: unless-stopped

  anvil:
    image: ghcr.io/foundry-rs/foundry:latest
    entrypoint: []
    command:
      - anvil
      - --host
      - 0.0.0.0
      - --fork-url
      - https://eth-mainnet.public.blastapi.io
    ports:
      - "8545:8545"
    restart: unless-stopped