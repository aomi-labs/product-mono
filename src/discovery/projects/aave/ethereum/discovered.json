{
  "name": "aave",
  "chain": "ethereum",
  "blockNumber": 22834381,
  "configHash": "0x039489a6bb6b40e0005c99a315dd5c98915420a3a0a661e663a49adf3e057898",
  "entries": [
    {
      "name": "GhoAToken",
      "address": "0x00907f9921424583e7ffBfEdf84F92B7B2Be4977",
      "type": "Contract",
      "sourceHashes": [
        "0x1bb1eebf940ae6126d47aeb6ef0c3dfd89b3db8892ef36f1e46d456851469561",
        "0x099c80eaa54e64204b36547a2a118252c857a2313441e083b56522ad88b956e3"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1689429779,
      "sinceBlock": 17699249,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x2f32A274e02FA356423CE5e97a8e3155c1Ac396b",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "ATOKEN_REVISION": 1,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x4d9e7124bf12b213460312c83337d694edfe76ce036e0b41ba823a97ace96b32",
        "EIP712_REVISION": "0x31",
        "getGhoTreasury": "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c",
        "getIncentivesController": "0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb",
        "getVariableDebtToken": "0x786dBff3f1292ae8F92ea68Cf93c30b34B1ed04B",
        "name": "Aave Ethereum GHO",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "POOL": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
        "RESERVE_TREASURY_ADDRESS": "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c",
        "scaledTotalSupply": 0,
        "symbol": "aEthGHO",
        "totalSupply": 0,
        "UNDERLYING_ASSET_ADDRESS": "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f"
      },
      "implementationNames": {
        "0x00907f9921424583e7ffBfEdf84F92B7B2Be4977": "InitializableImmutableAdminUpgradeabilityProxy",
        "0x2f32A274e02FA356423CE5e97a8e3155c1Ac396b": "GhoAToken"
      }
    },
    {
      "name": "MasterMinter",
      "address": "0x02398771Fd1db790Ef2b656ca3BcB3075f27A72c",
      "type": "Contract",
      "template": "tokens/circle/MasterMinter",
      "sourceHashes": [
        "0xf49a07669c94c3b5ba913378cfa842a379d9d3f4456a1070979d52d7f9d69c87"
      ],
      "proxyType": "immutable",
      "description": "Manager contract for minter management [sic].",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c",
          "description": "manage minter addresses."
        }
      ],
      "sinceTimestamp": 1652995457,
      "sinceBlock": 14807229,
      "values": {
        "$immutable": true,
        "getMinterManager": "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c",
        "owner": "0xa1A083189C5425af0bC59A58b2f1649d5236871b"
      },
      "implementationNames": {
        "0x02398771Fd1db790Ef2b656ca3BcB3075f27A72c": "MasterMinter"
      }
    },
    {
      "name": "LombardTimeLock",
      "address": "0x055E84e7FE8955E2781010B866f10Ef6E1E77e59",
      "type": "Contract",
      "sourceHashes": [
        "0x47b07da8e38defd363cbe1e56ddeb060ba5a8bc7b632e01ec71a98ab4cf69567"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x8236a87084f8B84306f72007F36F2618A5634494",
          "via": [{ "address": "0xbae061C73876952aa2C5e483B74DfA785425f879" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0xbae061C73876952aa2C5e483B74DfA785425f879"
        }
      ],
      "sinceTimestamp": 1716965183,
      "sinceBlock": 19973818,
      "values": {
        "$immutable": true,
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 86400,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1"
      },
      "implementationNames": {
        "0x055E84e7FE8955E2781010B866f10Ef6E1E77e59": "LombardTimeLock"
      }
    },
    {
      "name": "SimpleMultiSig",
      "address": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
      "type": "Contract",
      "sourceHashes": [
        "0x6bc7d8216e748e0328df7fb13aaa1da4a5ea3a89b0918b80569c91386c4afe14"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1619019362,
      "sinceBlock": 12284400,
      "values": {
        "$immutable": true,
        "nonce": 829,
        "owners": [
          "0x01781c80785a679337De8c3df691cd5D15D36A6b",
          "0x2a7B42C764F31Ae54a3453e9aa6C2D1c67E9Ef9d",
          "0x3bA2a97E12Cf715F60C9dBBED5105733B3A8Cf27",
          "0x3Ec49d8Bef9746d7cf10D26c91526E9C1e9341D9",
          "0x3eDD0d6562e9321Fb4a95e52576eE7f0b5Aa017e",
          "0x44375aaE18B34bdF5c2C485DbAc932aB4D7D454f",
          "0x4A49e050156d76590Ed9f12B06673E8C431754d1",
          "0x5bcc4b324bFD0F5D7F0e9167beBe0456BE342686",
          "0x5d21C8C9dD0692bdEb7AC1A3fB24DFC3500E4c3e",
          "0x61efB23a6868a74A8DFE32651361a6165F6f173E",
          "0x68B807482ffe50050a444f6610dE2F009e7CF760",
          "0x795bF46361495271F39fdBb0AbCC263C8e5fB538",
          "0x8CACd1De50937b16d11B5ba11A6efeEd7e561336",
          "0x8D0f7E545B4545c7Fe06B489D93E4DA1B96dF296",
          "0x99E55F86526e2aA2Abf63A7A562a46cE3bd3F8c3",
          "0x9fCE35e475Fdd84DB06eEc4cbE65028d6F9C9d01",
          "0xAad13BdEeC1F6e787b95F322eBb063bae5F1641a",
          "0xb08B382f09029AB7cE3CD486540aed0ed62680E3",
          "0xbbe25013fF925463aa6FAc0Cd90f5cf10fd4F442",
          "0xC271e7e7EB9dEb8831C1d6e728BB7677cd0e8009"
        ],
        "ownersArr": [
          "0x01781c80785a679337De8c3df691cd5D15D36A6b",
          "0x2a7B42C764F31Ae54a3453e9aa6C2D1c67E9Ef9d",
          "0x3bA2a97E12Cf715F60C9dBBED5105733B3A8Cf27",
          "0x3Ec49d8Bef9746d7cf10D26c91526E9C1e9341D9",
          "0x3eDD0d6562e9321Fb4a95e52576eE7f0b5Aa017e"
        ],
        "threshold": 3
      },
      "errors": { "ownersArr": "Processing error occurred." },
      "implementationNames": {
        "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33": "SimpleMultiSig"
      }
    },
    {
      "address": "0x0A06BE16275B95a7d2567fBdAE118b36C7DA78F9",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
          "description": "blacklist addresses, freezing any interactions with the USDC token for them."
        }
      ]
    },
    {
      "name": "StableDebtToken",
      "address": "0x102633152313C81cD80419b6EcF66d14Ad68949A",
      "type": "Contract",
      "sourceHashes": [
        "0x1bb1eebf940ae6126d47aeb6ef0c3dfd89b3db8892ef36f1e46d456851469561",
        "0x76cd6fb546f46c1f8917d0d3b03d3e76a5b72e5a94a69725b26d74c9afb158b3"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1674806111,
      "sinceBlock": 16496792,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x15C5620dfFaC7c7366EED66C20Ad222DDbB1eD57",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "DEBT_TOKEN_REVISION": 1,
        "decimals": 18,
        "DELEGATION_WITH_SIG_TYPEHASH": "0x323db0410fecc107e39e2af5908671f4c8d106123b35a51501bb805c5fa36aa0",
        "DOMAIN_SEPARATOR": "0xaa631788750acc2367bf903e276584181d04557d39571e09bc2658f8eb553c7b",
        "EIP712_REVISION": "0x31",
        "getAverageStableRate": 0,
        "getIncentivesController": "0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb",
        "getSupplyData": [0, 0, 0, 0],
        "getTotalSupplyAndAvgRate": [0, 0],
        "getTotalSupplyLastUpdated": 0,
        "name": "Aave Ethereum Stable Debt WETH",
        "POOL": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
        "symbol": "stableDebtEthWETH",
        "totalSupply": 0,
        "UNDERLYING_ASSET_ADDRESS": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "implementationNames": {
        "0x102633152313C81cD80419b6EcF66d14Ad68949A": "InitializableImmutableAdminUpgradeabilityProxy",
        "0x15C5620dfFaC7c7366EED66C20Ad222DDbB1eD57": "StableDebtToken"
      }
    },
    {
      "name": "OneInch",
      "address": "0x111111111117dC0aa78b770fA6A738034120C302",
      "type": "Contract",
      "sourceHashes": [
        "0xd55b2c95535005c6cad0d910ea9031b33d1d505d18edd2a93df49016881f7640"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1608747211,
      "sinceBlock": 11511393,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xa9e572d7c103a339987674ba85d3bf220c2d3b50e12faa30581b80b4cd573427",
        "name": "1INCH Token",
        "owner": "0x0000000000000000000000000000000000000000",
        "symbol": "1INCH",
        "totalSupply": "1499999999997000000000000000"
      },
      "implementationNames": {
        "0x111111111117dC0aa78b770fA6A738034120C302": "OneInch"
      }
    },
    {
      "address": "0x1302dFb1F806398f48650c75ab0fDA9a0186f47B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SimpleMultiSig",
      "address": "0x137Dcd97872dE27a4d3bf36A4643c5e18FA40713",
      "type": "Contract",
      "sourceHashes": [
        "0x6bc7d8216e748e0328df7fb13aaa1da4a5ea3a89b0918b80569c91386c4afe14"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x31d9bDEa6F104606C954f8FE6ba614F1BD347Ec3"
        },
        {
          "permission": "upgrade",
          "from": "0x6c3ea9036406852006290770BEdFcAbA0e23A0e8"
        }
      ],
      "sinceTimestamp": 1618595611,
      "sinceBlock": 12252587,
      "values": {
        "$immutable": true,
        "nonce": 21,
        "owners": [
          "0x05824ab74d7D39BeeE6785e23D51De7bFA8967D6",
          "0x0f16C1250f2AedA677e2Ca97EF167B45735Bf282",
          "0x1f14112c418fAAe416101E58CdFBa3aF67Ea70Eb",
          "0x3D7163C791951A55fEa279B6CA3e6c05f5e5F876",
          "0x44f802506dd40405f640eE30cE13304c1Ce6A2bD",
          "0x45b516231db24D03479a1fEBaA57Bcb58Cd79696",
          "0x472481219B0f19B3a9e6875094deAaE8f793070B",
          "0x505f07E9a14028dBd7c72904248a8d6506961921",
          "0x76da59EeB0A6258F82B26f78CDD73f6f8627a078",
          "0x9a396Cb5b589357C887549cbEaE54E445A7F8114",
          "0x9BC2b8BBFC50f5Ec19bCe90627b45b4f1Fe435BA",
          "0x9D39a8623e6093c074Dac0E9f2aF330D82E5645f",
          "0xaE9cf54119fE761A4d84d5D839b715F75ccf2786",
          "0xb04f132aDA70B39F6fBbA6f4Dd37E80Ce6058D83",
          "0xbEc5fd85dc949D9F38dCFF6D48613e0Fcf873A96",
          "0xD55F7d21e8057631a6A88A7FDdF82EeDB2C14e26",
          "0xdd8fee09281D42F26e537e208c81772cB7FE16AD",
          "0xDe27666796568984C40cD4A3630396B1570816B5",
          "0xE8F167Ad63F0Ca84C41afcf7E7C8BA7c7482cb95",
          "0xefB3Bed7dee14059C35c34CF289C46Ae0811654e"
        ],
        "ownersArr": [
          "0x05824ab74d7D39BeeE6785e23D51De7bFA8967D6",
          "0x0f16C1250f2AedA677e2Ca97EF167B45735Bf282",
          "0x1f14112c418fAAe416101E58CdFBa3aF67Ea70Eb",
          "0x3D7163C791951A55fEa279B6CA3e6c05f5e5F876",
          "0x44f802506dd40405f640eE30cE13304c1Ce6A2bD"
        ],
        "threshold": 3
      },
      "errors": { "ownersArr": "Processing error occurred." },
      "implementationNames": {
        "0x137Dcd97872dE27a4d3bf36A4643c5e18FA40713": "SimpleMultiSig"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x144a98cb1CdBb23610501fE6108858D9B7D24934",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xd5a33441170541b7df25812e0e3dff6562b2f09ab835a6b431cb9e7198a47605",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1611566899,
      "sinceBlock": 11724027,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xC46e791d4fB1207fAB8Cb0e44889127138539c69",
          "0x9cC9c3de8e710781983a65b90B7efEaaD2D3D7D8",
          "0x9Aa6Db877742aD8D8c7fE209F561fbd2bE19D5F4",
          "0x7E36F1fF26cffD6906c11Cd7Eca5f6E993Ba6CE3",
          "0x1C86117156Ba31b5d62f02eB56bE9aC5a06610d3",
          "0xc0c9707B552C6970f66Ab91D563Bf9b6048E9da6",
          "0x61B01a33Aea3e827B3941Ab097778bd3FA48a332"
        ],
        "$threshold": 4,
        "domainSeparator": "0x1ac01b8ce2ee13b45847de4da8aa3660fdc524145ee10d7d1b16f215e4a211b9",
        "getChainId": 1,
        "GnosisSafe_modules": ["0xB5cF5363c3e766e64B37b2fB9554bFE8D48ED1A0"],
        "multisigThreshold": "4 of 7 (57%)",
        "nonce": 85,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x144a98cb1CdBb23610501fE6108858D9B7D24934": "Proxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "PendlePrincipalToken",
      "address": "0x14Bdc3A3AE09f5518b923b69489CBcAfB238e617",
      "type": "Contract",
      "sourceHashes": [
        "0xe7599dbbd1b4d9d7a2cb1262cc8d0b2db2123ae858c45fa712d5afcdfd23d1eb"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1747115327,
      "sinceBlock": 22472324,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "expiry": 1755129600,
        "factory": "0x35A338522a435D46f77Be32C70E215B813D0e3aC",
        "isExpired": false,
        "name": "PT Ethereal eUSDE 14AUG2025",
        "SY": "0x7ac8ca87959b1d5EDfe2df5325A37c304DCea4D0",
        "symbol": "PT-eUSDE-14AUG2025",
        "totalSupply": "441165310787435504488627217",
        "YT": "0xe8eF806c8aaDc541408dcAd36107c7d26a391712"
      },
      "implementationNames": {
        "0x14Bdc3A3AE09f5518b923b69489CBcAfB238e617": "PendlePrincipalToken"
      }
    },
    {
      "name": "TBTC",
      "address": "0x18084fbA666a33d37592fA2633fD49a74DD93a88",
      "type": "Contract",
      "sourceHashes": [
        "0x4b09a9d7df2c4726bc3562e43f7ad5fa38f9fb46a9fb6182a853ca80860d3517"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1629198727,
      "sinceBlock": 13042356,
      "values": {
        "$immutable": true,
        "cachedChainId": 1,
        "cachedDomainSeparator": "0x85df006d8efff5040f4fdd173197325caa418545ff9f6fbab526b624756ff362",
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x85df006d8efff5040f4fdd173197325caa418545ff9f6fbab526b624756ff362",
        "name": "tBTC v2",
        "owner": "0x9C070027cdC9dc8F82416B2e5314E11DFb4FE3CD",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "symbol": "tBTC",
        "totalSupply": "5239849790650000000000"
      },
      "implementationNames": {
        "0x18084fbA666a33d37592fA2633fD49a74DD93a88": "TBTC"
      }
    },
    {
      "name": "SupplyLogic",
      "address": "0x185477906B46D9b8DE0DEB73A1bBfb87b5b51BC3",
      "type": "Contract",
      "sourceHashes": [
        "0xe7b91a91a2c4766fed511c7ae7e6f09c2e80ddb290b77d624e3a77c12c006258"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1738757831,
      "sinceBlock": 21780237,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x185477906B46D9b8DE0DEB73A1bBfb87b5b51BC3": "SupplyLogic"
      }
    },
    {
      "name": "Pool_USDC",
      "address": "0x1864Ca3d47AaB98Ee78D11fc9DCC5E7bADdA1c0d",
      "type": "Contract",
      "sourceHashes": [
        "0x7f25744b8fffac834e069435ee93fa9f5a16b20e5a7c401256d7f4b516a695e1"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1608955287,
      "sinceBlock": 11526975,
      "values": {
        "$immutable": true,
        "availableExcessCollatDV": "229665574337597503339508200",
        "bonus_rate": 0,
        "buyback_fee": 6500,
        "buyBackPaused": true,
        "collat_eth_oracle_address": "0x69B9E922ecA72Cda644a8e32B8427000059388c6",
        "collatDollarBalance": "500045661000000000000",
        "collateralPricePaused": true,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getCollateralPrice": 1000000,
        "minting_fee": 3000,
        "mintPaused": true,
        "pausedPrice": 1000000,
        "pool_ceiling": 38000000000000,
        "recollat_fee": 6500,
        "recollateralizePaused": true,
        "redeemPaused": true,
        "redemption_delay": 2,
        "redemption_fee": 5500,
        "unclaimedPoolCollateral": 880811,
        "unclaimedPoolFXS": "16248125515849308",
        "USDC_address": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
      },
      "implementationNames": {
        "0x1864Ca3d47AaB98Ee78D11fc9DCC5E7bADdA1c0d": "Pool_USDC"
      }
    },
    {
      "name": "Pot",
      "address": "0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7",
      "type": "Contract",
      "sourceHashes": [
        "0x1f7ec5b58e95d96751b68b20f527eecb8082509a2bb2c9ff15ee434abd56589c"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1573672721,
      "sinceBlock": 8928160,
      "values": {
        "$immutable": true,
        "chi": "1161209618619855876338007091",
        "dsr": "1000000000627937192491029810",
        "live": 1,
        "Pie": "588884180760760975258599628",
        "rho": 1751490215,
        "vat": "0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B",
        "vow": "0xA950524441892A31ebddF91d3cEEFa04Bf454466"
      },
      "implementationNames": {
        "0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7": "Pot"
      }
    },
    {
      "address": "0x19a932fC5A8320939c3575302a8705147a7f27D8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Timelock",
      "address": "0x1a9C8182C09F50C8318d769245beA52c32BE35BC",
      "type": "Contract",
      "sourceHashes": [
        "0xc3a519884c2c5eb5c8fa33e1f7c27bf1576088eddc2d9dd478bd1889a4f7c649"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1600107105,
      "sinceBlock": 10861678,
      "values": {
        "$immutable": true,
        "admin": "0x408ED6354d4973f66138C91495F2f2FCbd8724C3",
        "delay": 172800,
        "GRACE_PERIOD": 1209600,
        "MAXIMUM_DELAY": 2592000,
        "MINIMUM_DELAY": 172800,
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0x1a9C8182C09F50C8318d769245beA52c32BE35BC": "Timelock"
      }
    },
    {
      "name": "USDC",
      "address": "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c",
      "type": "Contract",
      "template": "tokens/circle/USDC",
      "sourceHashes": [
        "0x3e6aa5a9e907eadff9fe4df338a8f629966b60307fbbe5956fb9886d74822fd1",
        "0xacd76117eb21f736961ade180c25f63d796bc2e83f43b82ee3ff585bb34ce6ed"
      ],
      "proxyType": "ZeppelinOS proxy",
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1652995438,
      "sinceBlock": 14807227,
      "values": {
        "$admin": "0x9Ed85723C5c55b746Eb2C4B7e2A359B2091B8fE7",
        "$immutable": false,
        "$implementation": "0x43506849D7C04F9138D1A2050bbF3A0c054402dd",
        "$pastUpgrades": [
          [
            "2022-06-10T14:11:38.000Z",
            "0x24fab5b4bf89d30ddecda96ab8cfb830bd5d62f6379e372da4a20b83aaedaa8a",
            ["0x5E620D573cDaF414d70Fc85B116dD8F1E7e79Ce2"]
          ],
          [
            "2022-06-10T14:11:38.000Z",
            "0x24fab5b4bf89d30ddecda96ab8cfb830bd5d62f6379e372da4a20b83aaedaa8a",
            ["0xa2327a938Febf5FEC13baCFb16Ae10EcBc4cbDCF"]
          ],
          [
            "2024-01-11T19:10:47.000Z",
            "0xb621c3e6112d845cdc7603afbdbd1970caab936783c155a232edbd5a2d6a1a39",
            ["0x43506849D7C04F9138D1A2050bbF3A0c054402dd"]
          ]
        ],
        "$upgradeCount": 3,
        "admin": "0x9Ed85723C5c55b746Eb2C4B7e2A359B2091B8fE7",
        "blacklister": "0x601c97ed567253bf09A51998D53C5AA73290bd73",
        "CANCEL_AUTHORIZATION_TYPEHASH": "0x158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a1597429",
        "currency": "EUR",
        "decimals": 6,
        "DOMAIN_SEPARATOR": "0x99f188f447f0c6eaf68589359cd2ead8c2faaaaee984ab926fdb734d0040073b",
        "implementation": "0x43506849D7C04F9138D1A2050bbF3A0c054402dd",
        "masterMinter": "0x02398771Fd1db790Ef2b656ca3BcB3075f27A72c",
        "minters": [
          "0x716D4D9EfC15Bbe2dd81D2DA31DCcC4e2c69cCBB",
          "0x5A459C7E4962c2f32eB5e6a8C91b6EEB5a72a439",
          "0x8967a7cE20043F876e42F8aD696b06bb632f0ca7",
          "0x3005A4C0EFE7E66F3f60eF8704983247A5c6ca61",
          "0x2322E81DB282F22849c2Eb0b749C688Ea3611946",
          "0x911cb2323c6fB580e39F92a6f58D1cb019E940Cd"
        ],
        "name": "Euro Coin",
        "owner": "0x3101386A38bEf8b79e49f12dEA12938a30E8af96",
        "paused": false,
        "pauser": "0x2C576CFC9612541eb827b5c52479F364DdfaFEB7",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "RECEIVE_WITH_AUTHORIZATION_TYPEHASH": "0xd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de8",
        "rescuer": "0x0000000000000000000000000000000000000000",
        "symbol": "EURC",
        "totalSupply": 94280744290000,
        "TRANSFER_WITH_AUTHORIZATION_TYPEHASH": "0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267",
        "version": "2"
      },
      "fieldMeta": {
        "minters": {
          "description": "All minters, ignoring their 'allowed amount'"
        }
      },
      "implementationNames": {
        "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c": "FiatTokenProxy",
        "0x43506849D7C04F9138D1A2050bbF3A0c054402dd": "FiatTokenV2_2"
      }
    },
    {
      "address": "0x1ac78dfcAE082E9fe286D1ccb12C17a3e906B906",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Uni",
      "address": "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",
      "type": "Contract",
      "sourceHashes": [
        "0x005d41450e7da29f6913ff9dc83738d960ae222989af4adec6bf24ccdb87aaad"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1600107086,
      "sinceBlock": 10861674,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DELEGATION_TYPEHASH": "0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "minimumTimeBetweenMints": 31536000,
        "mintCap": 2,
        "minter": "0x1a9C8182C09F50C8318d769245beA52c32BE35BC",
        "mintingAllowedAfter": 1704067200,
        "name": "Uniswap",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "symbol": "UNI",
        "totalSupply": "1000000000000000000000000000"
      },
      "implementationNames": {
        "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984": "Uni"
      }
    },
    {
      "name": "WBTC",
      "address": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",
      "type": "Contract",
      "sourceHashes": [
        "0xb7c329cce2ca65d263e3a674f3cbb871505726440a851f67d2520306b5eab0f4"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1543095952,
      "sinceBlock": 6766284,
      "values": {
        "$immutable": true,
        "decimals": 8,
        "mintingFinished": false,
        "name": "Wrapped BTC",
        "owner": "0xCA06411bd7a7296d7dbdd0050DFc846E95fEBEB7",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "symbol": "WBTC",
        "totalSupply": 12885089873878
      },
      "implementationNames": {
        "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599": "WBTC"
      }
    },
    {
      "address": "0x2322E81DB282F22849c2Eb0b749C688Ea3611946",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x234D953a9404Bf9DbC3b526271d440cD2870bCd2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BorrowerOperations",
      "address": "0x24179CD81c9e782A4096035f7eC97fB8B783e007",
      "type": "Contract",
      "sourceHashes": [
        "0x3c68132ab520759c42c3104d7483ac017b19b1191517436816f51ce4108910d2"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1617611189,
      "sinceBlock": 12178582,
      "values": {
        "_100pct": "1000000000000000000",
        "$immutable": true,
        "activePool": "0xDf9Eb223bAFBE5c5271415C75aeCD68C21fE3D7F",
        "BORROWING_FEE_FLOOR": 5000000000000000,
        "CCR": "1500000000000000000",
        "DECIMAL_PRECISION": "1000000000000000000",
        "defaultPool": "0x896a3F03176f05CFbb4f006BfCd8723F2B0D741C",
        "getCompositeDebt": [
          "200000000000000000000",
          "200000000000000000001",
          "200000000000000000002",
          "200000000000000000003",
          "200000000000000000004"
        ],
        "getEntireSystemColl": "96822224366801730028086",
        "getEntireSystemDebt": "41036045178918266196861589",
        "isOwner": false,
        "lqtyStaking": "0x4f9Fbb3f1E99B56e0Fe2892e623Ed36A76Fc605d",
        "lqtyStakingAddress": "0x4f9Fbb3f1E99B56e0Fe2892e623Ed36A76Fc605d",
        "LUSD_GAS_COMPENSATION": "200000000000000000000",
        "lusdToken": "0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",
        "MCR": "1100000000000000000",
        "MIN_NET_DEBT": "1800000000000000000000",
        "NAME": "BorrowerOperations",
        "owner": "0x0000000000000000000000000000000000000000",
        "PERCENT_DIVISOR": 200,
        "priceFeed": "0x4c517D4e2C851CA76d7eC94B805269Df0f2201De",
        "sortedTroves": "0x8FdD3fbFEb32b28fb73555518f8b361bCeA741A6",
        "troveManager": "0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2"
      },
      "errors": { "getCompositeDebt": "Processing error occurred." },
      "implementationNames": {
        "0x24179CD81c9e782A4096035f7eC97fB8B783e007": "BorrowerOperations"
      }
    },
    {
      "address": "0x24BDd8771b08C2EA6FE0e898126e65BD49021BE3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x251a604E8E8f6906d60f8dedC5aAeb8CD38F4892",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1715933387,
      "sinceBlock": 19888410,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xd7B78BF124eB327F23f75F5C49De0c3fa5d2265A",
          "0x116744098070508c080B120A555B5453422b66eF",
          "0x70B9b04b19D9015EfBe1db37BBe30Dd304737950",
          "0xd775959eb15f6DfF24A267f988F6c2E2f769DeDa",
          "0xaD583E2B60810bC8d964d26ce3647e2CAC87D95F"
        ],
        "$threshold": 3,
        "domainSeparator": "0xf12cd1f7d24e7e78d6b2f71f574870168ff3ea91f9fee03084b1e6eae3a592de",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 66,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x251a604E8E8f6906d60f8dedC5aAeb8CD38F4892": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "FRAXOracleWrapper",
      "address": "0x2A6ddD9401B14d0443d0738B8a78fd5B99829A80",
      "type": "Contract",
      "sourceHashes": [
        "0x1aa071c8e564a8e635e70241fa4dc465c594a0c4705479e0d0641862c681e350"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1628896480,
      "sinceBlock": 13019746,
      "values": {
        "$immutable": true,
        "chainlink_frax_eth_decimals": 18,
        "EXTRA_PRECISION": 1000000,
        "getFRAXPrice": { "raw_price": 390, "precise_price": 390951555 },
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "owner": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "PRICE_PRECISION": 1000000,
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA"
      },
      "implementationNames": {
        "0x2A6ddD9401B14d0443d0738B8a78fd5B99829A80": "FRAXOracleWrapper"
      }
    },
    {
      "address": "0x2b52e60C844d7946b6d910D3296940dC889CC785",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x2C576CFC9612541eb827b5c52479F364DdfaFEB7",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c",
          "description": "pause the USDC token (no transfers, mints, burns)."
        }
      ]
    },
    {
      "name": "GhoDirectMinter",
      "address": "0x2cE01c87Fec1b71A9041c52CaED46Fc5f4807285",
      "type": "Contract",
      "sourceHashes": [
        "0xa3fc10021991280752f82d08d05b42e9e586370340af6f3a9942e88014c5127d",
        "0x4fce31ea0dd99f8ee639ced4ee7c723708444623fade1365eca3056944b1e873"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1735575551,
      "sinceBlock": 21516440,
      "values": {
        "$admin": "0xD3cF979e676265e4f6379749DECe4708B9A22476",
        "$implementation": "0xc718786A7E45353835De634897385b3371A749f0",
        "$pastUpgrades": [
          [
            "2024-12-30T16:19:11.000Z",
            "0xfe523145c2898c1feca3710cab60f06d40af5948fc6c71f38edbe5910d00217c",
            ["0xc718786A7E45353835De634897385b3371A749f0"]
          ]
        ],
        "$upgradeCount": 1,
        "COLLECTOR": "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c",
        "GHO": "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f",
        "GHO_A_TOKEN": "0x18eFE565A5373f430e2F809b97De30335B3ad96A",
        "guardian": "0x8513e6F37dBc52De87b166980Fa3F50639694B60",
        "owner": "0x5300A1a15135EA4dc7aD5a167152C01EFc9b192A",
        "POOL": "0x4e033931ad43597d96D6bcc25c280717730B58B1",
        "POOL_CONFIGURATOR": "0x342631c6CeFC9cfbf97b2fe4aa242a236e1fd517"
      },
      "implementationNames": {
        "0x2cE01c87Fec1b71A9041c52CaED46Fc5f4807285": "TransparentUpgradeableProxy",
        "0xc718786A7E45353835De634897385b3371A749f0": "GhoDirectMinter"
      }
    },
    {
      "name": "PoolAddressesProvider",
      "address": "0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e",
      "type": "Contract",
      "sourceHashes": [
        "0xd1312534447cacee036b30457a27afd8e357c12b424c6d8e51def2a584e4c3e7"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1672324811,
      "sinceBlock": 16291071,
      "values": {
        "$immutable": true,
        "getACLAdmin": "0x5300A1a15135EA4dc7aD5a167152C01EFc9b192A",
        "getACLManager": "0xc2aaCf6553D20d1e9d78E365AAba8032af9c85b0",
        "getMarketId": "Aave Ethereum Market",
        "getPool": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
        "getPoolConfigurator": "0x64b761D848206f447Fe2dd461b0c635Ec39EbB27",
        "getPoolDataProvider": "0x497a1994c46d4f6C864904A9f1fac6328Cb7C8a6",
        "getPriceOracle": "0x54586bE62E3c3580375aE3723C145253060Ca0C2",
        "getPriceOracleSentinel": "0x0000000000000000000000000000000000000000",
        "owner": "0x5300A1a15135EA4dc7aD5a167152C01EFc9b192A"
      },
      "implementationNames": {
        "0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e": "PoolAddressesProvider"
      }
    },
    {
      "address": "0x3005A4C0EFE7E66F3f60eF8704983247A5c6ca61",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LiquidityPool",
      "address": "0x308861A430be4cce5502d0A12724771Fc6DaF216",
      "type": "Contract",
      "sourceHashes": [
        "0xc7d4ded9ae90035f03bfae2562d8f70dc9e940557a004fefa9bbe8c6473e092c",
        "0x01f5f871f848e25690e8627562d31aa171a2936266a8e4d6e6ff1cffa975954b"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1689004931,
      "sinceBlock": 17664317,
      "values": {
        "$admin": "0x9f26d4C958fD811A1F59B01B86Be7dFFc9d20761",
        "$implementation": "0xA6099d83A67a2c653feB5e4e48ec24C5aeE1C515",
        "$pastUpgrades": [
          [
            "2023-07-10T16:02:11.000Z",
            "0x491b823bc15ced4c54f0ed5a235d39e478f8aae3ad02eb553924b40ad9859e10",
            ["0xe869222529075639CbBC7b637001054195A5Eb79"]
          ],
          [
            "2023-07-20T00:22:35.000Z",
            "0x1382dd9cce1b0ffb4e6489dd1b20f21e3ce2cf450d5d4be0d4e356f8ff637120",
            ["0xCEf4286E4274433f167320dB9AE81073AccfC474"]
          ],
          [
            "2023-11-09T22:40:35.000Z",
            "0x326cb1804e8cf14873823c55f1a2c6114da5bb472c23d9f4e84b8dc74d3d6bc3",
            ["0x4D784Aa9eacc108ea5A326747870897f88d93860"]
          ],
          [
            "2023-12-07T23:01:11.000Z",
            "0xf6ec6eb3c9d8bc0f1db17fefef0dabe33f26e689c0374176af350f1bb521f980",
            ["0x72481fB01EedE2093Af919f2Fe29334527B97f4A"]
          ],
          [
            "2024-01-18T23:49:59.000Z",
            "0x91867318df51701729eeb1085d5228b8c13b30d6fa10d6aeab4b7549080b3a2c",
            ["0x833514B6D9BaFDdA9B45669C1f15Dc0Cd33cc0B8"]
          ],
          [
            "2024-02-06T01:02:11.000Z",
            "0x072e16fd0ed21041860f110d64b6aab783044899a4bfd83f6dd6e53545114153",
            ["0x11858bCaC85832aCDda0BDe9B867830f7D21cF63"]
          ],
          [
            "2024-02-21T13:55:23.000Z",
            "0x734ddfc3a9568d718f7ea10475a20d9cad3decd3849121e520ac56a3485b1517",
            ["0x403ba4cd327293A4d23beE172982509d37310cEF"]
          ],
          [
            "2024-03-25T00:18:47.000Z",
            "0xf32d13d78ca8250c622ee5c7135b50e4a41144c39aa0161a390f95ac818b33dc",
            ["0x605F17E88027e25E18C95be0d8011aC969426399"]
          ],
          [
            "2024-07-02T22:04:47.000Z",
            "0x1c3a292123bc0fc8ba38c673912c09481b0952d2dbed0c989d57bf97ed497b5a",
            ["0x02656fe285FAC5d5c756C2F03C17277Df9BAc65B"]
          ],
          [
            "2024-10-07T23:19:59.000Z",
            "0xc271ccc7b8f101d0cf2f728b81476181432a14bae2772b2ef7cdb045643f1482",
            ["0xa8A8Be862BA6301E5949ABDE93b1D892C14FfB1F"]
          ],
          [
            "2025-03-26T13:28:59.000Z",
            "0x3bd34099cfa575d25c80264e55e46c47aeec28ba3088bdcdae76075b41015389",
            ["0xA6099d83A67a2c653feB5e4e48ec24C5aeE1C515"]
          ]
        ],
        "$upgradeCount": 11,
        "amountForShare": [0, 1, 2, 3, 4],
        "auctionManager": "0x00C452aFFee3a17d9Cecc1Bcd2B8d5C7635C4CB9",
        "depositDataRootForApprovalDeposits": [
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "DEPRECATED_bnftHolders": [
          "0x5836152812568244760ba356B5f3838Aa5B672e0",
          "0x977c26Ce24036FA66EE2bFAeAd9556BC2b8A9AeA",
          "0xdC8Ddd3416d101304072b5a6CedecA8fBedb6EF5"
        ],
        "DEPRECATED_bNftTreasury": "0xcD12F7F1747Aaca69C61b7Af23FB5D5691191562",
        "DEPRECATED_eEthliquidStakingOpened": false,
        "DEPRECATED_holdersUpdate": {
          "timestamp": 1700688299,
          "startOfSlotNumOwners": 1
        },
        "DEPRECATED_maxValidatorsPerOwner": 40,
        "DEPRECATED_regulationsManager": "0xBd23fF26197Eda06a930641Ac13ED5F3dB35f4DE",
        "DEPRECATED_schedulingPeriodInSeconds": 60,
        "DEPRECATED_whitelistEnabled": false,
        "eETH": "0x35fA164735182de50811E8e2E824cFb9B6118ac2",
        "ethAmountLockedForWithdrawal": "22368884047845498210672",
        "etherFiAdminContract": "0x0EF8fa4760Db8f5Cd4d993f3e3416f30f942D705",
        "etherFiRedemptionManager": "0xDadEf1fFBFeaAB4f68A9fD181395F68b4e4E7Ae0",
        "feeRecipient": "0x0c83EAe1FE72c390A02E426572854931EefF93BA",
        "getImplementation": "0xA6099d83A67a2c653feB5e4e48ec24C5aeE1C515",
        "getTotalPooledEther": "2746939450006579598762604",
        "LIQUIDITY_POOL_ADMIN_ROLE": "0x0e8d94121b3383f03d9ae60b39295aa793469d7230d51a3f62cbf47cd45481d9",
        "liquifier": "0x9FFDF407cDe9a93c47611799DA23924Af3EF764F",
        "membershipManager": "0x3d320286E014C3e1ce99Af6d6B00f0C1D63E3000",
        "nodesManager": "0x8B71140AD2e5d1E7018d2a7f8a288BD3CD38916F",
        "numPendingDeposits": 0,
        "owner": "0x9f26d4C958fD811A1F59B01B86Be7dFFc9d20761",
        "paused": false,
        "restakeBnftDeposits": true,
        "roleRegistry": "0x62247D29B4B9BECf4BB73E0c722cf6445cfC7cE9",
        "sharesForAmount": [0, 0, 1, 2, 3],
        "sharesForWithdrawalAmount": [0, 1, 2, 3, 4],
        "stakingManager": "0x25e821b7197B146F7713C3b89B6A4D83516B912d",
        "tNft": "0x7B5ae07E2AF1C861BcC4736D23f5f66A61E0cA5e",
        "totalValueInLp": "46287672749420356888785",
        "totalValueOutOfLp": "2700651777257159241873819",
        "withdrawRequestNFT": "0x7d5706f6ef3F89B3951E23e557CDFBC3239D4E2c"
      },
      "errors": {
        "amountForShare": "Processing error occurred.",
        "depositDataRootForApprovalDeposits": "Processing error occurred.",
        "proxiableUUID": "Processing error occurred.",
        "sharesForAmount": "Processing error occurred.",
        "sharesForWithdrawalAmount": "Processing error occurred."
      },
      "implementationNames": {
        "0x308861A430be4cce5502d0A12724771Fc6DaF216": "UUPSProxy",
        "0xA6099d83A67a2c653feB5e4e48ec24C5aeE1C515": "LiquidityPool"
      }
    },
    {
      "address": "0x3101386A38bEf8b79e49f12dEA12938a30E8af96",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c",
          "description": "manage all critical roles like pausers, blacklisters, minters, rescuer."
        }
      ]
    },
    {
      "name": "SupplyControl",
      "address": "0x31d9bDEa6F104606C954f8FE6ba614F1BD347Ec3",
      "type": "Contract",
      "sourceHashes": [
        "0x1b700e4f2cb900deab1fc07dc6cc38305b72bc7c6703d5313def15c56e809288",
        "0x4830399082df0fd5d75a690f4940b0d89d951a372226e75a28cf6fe14208c2a5"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1730746247,
      "sinceBlock": 21116188,
      "values": {
        "$admin": "0x137Dcd97872dE27a4d3bf36A4643c5e18FA40713",
        "$implementation": "0xFaB5891ED867a1195303251912013b92c4fc3a1D",
        "$pastUpgrades": [
          [
            "2024-11-04T18:50:47.000Z",
            "0x9c35515e1f52fc806a536ea9c2e31fb392c3225b515a21e73fc6eabcdd624b42",
            ["0xFaB5891ED867a1195303251912013b92c4fc3a1D"]
          ]
        ],
        "$upgradeCount": 1,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdmin": "0x137Dcd97872dE27a4d3bf36A4643c5e18FA40713",
        "defaultAdminDelay": 10800,
        "defaultAdminDelayIncreaseWait": 432000,
        "getAllSupplyControllerAddresses": [
          "0xa2C323fE5A74aDffAd2bf3E007E36bb029606444",
          "0x2fb074FA59c9294c71246825C1c9A0c7782d41a4",
          "0xf845a0A05Cbd91Ac15C3E59D126DE5dFbC2aAbb7"
        ],
        "owner": "0x137Dcd97872dE27a4d3bf36A4643c5e18FA40713",
        "pendingDefaultAdmin": {
          "newAdmin": "0x0000000000000000000000000000000000000000",
          "schedule": 0
        },
        "pendingDefaultAdminDelay": { "newDelay": 0, "schedule": 0 },
        "SUPPLY_CONTROLLER_MANAGER_ROLE": "0x5d3e9f1ecbcdad7b0da30e7d29c9eddaef83a4502dafe3d2dd85cfdb12e4af10",
        "SUPPLY_CONTROLLER_ROLE": "0x9c00d6f280439b1dfa4da90321e0a3f3c2e87280f4d07fea9fa43ff2cf02df2b",
        "TOKEN_CONTRACT_ROLE": "0xd32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a3"
      },
      "errors": { "proxiableUUID": "Processing error occurred." },
      "implementationNames": {
        "0x31d9bDEa6F104606C954f8FE6ba614F1BD347Ec3": "ERC1967Proxy",
        "0xFaB5891ED867a1195303251912013b92c4fc3a1D": "SupplyControl"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x32B8AE4eE1401E726aF0BC154D2165D0592584c4",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1724091647,
      "sinceBlock": 20564423,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xaD583E2B60810bC8d964d26ce3647e2CAC87D95F",
          "0x70B9b04b19D9015EfBe1db37BBe30Dd304737950",
          "0x7c2927e498D4752cf4c7eD2c87616ca14e8aDBdb",
          "0x480d05eB7acd0D302C3b8a585519C2b41C5c102A",
          "0x12096266d71C94A8C43cE82ADE3b1c3533CFC127",
          "0x98E5B768474F3ADdEC9849F6fdAB86f58c15A548",
          "0x116744098070508c080B120A555B5453422b66eF",
          "0x564974801D2ffBE736Ed59C9bE39F6c0A4274aE6"
        ],
        "$threshold": 2,
        "domainSeparator": "0x1f99972b177d9ed2343fb8d0b5390f96785e01d3194cc0ec7d2aac066ba62fca",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 8 (25%)",
        "nonce": 1,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x32B8AE4eE1401E726aF0BC154D2165D0592584c4": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "FlashLoanLogic",
      "address": "0x34039100cc9584Ae5D741d322e16d0d18CEE8770",
      "type": "Contract",
      "sourceHashes": [
        "0x6b0bab61b64698ff1f8f51cee2ae56bfd455458431603a52430d28cd6bf77de9"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1738757831,
      "sinceBlock": 21780237,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x34039100cc9584Ae5D741d322e16d0d18CEE8770": "FlashLoanLogic"
      }
    },
    {
      "name": "FRAXShares",
      "address": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0",
      "type": "Contract",
      "sourceHashes": [
        "0x46418240c78eee35508e54bfa7570ca98727fdec1af5b37ff5dd635233a0fb66"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1608140560,
      "sinceBlock": 11465584,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "FRAXStablecoinAdd": "0x0000000000000000000000000000000000000000",
        "FXS_DAO_min": 0,
        "genesis_supply": "100000000000000000000000000",
        "name": "Frax Share",
        "oracle_address": "0xDf81c82A3e02330Bb03C9b31015f32e2dac470dE",
        "owner_address": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "symbol": "FXS",
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
        "totalSupply": "99681495591133609740710857",
        "trackingVotes": true
      },
      "implementationNames": {
        "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0": "FRAXShares"
      }
    },
    {
      "name": "PendleYieldContractFactory",
      "address": "0x35A338522a435D46f77Be32C70E215B813D0e3aC",
      "type": "Contract",
      "sourceHashes": [
        "0x907b1fdb59cc8470e0127c4b2d449d7bf99da9ed24531890943c77a9cd0d54ff"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1723462559,
      "sinceBlock": 20512273,
      "values": {
        "$immutable": true,
        "expiryDivisor": 86400,
        "interestFeeRate": "50000000000000000",
        "maxInterestFeeRate": "200000000000000000",
        "maxRewardFeeRate": "200000000000000000",
        "owner": "0x8119EC16F0573B7dAc7C0CB94EB504FB32456ee1",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "rewardFeeRate": "50000000000000000",
        "treasury": "0x8270400d528c34e1596EF367eeDEc99080A1b592",
        "ytCreationCodeContractA": "0x6d2d43025104031b098e6c1EBC70b451377Ff700",
        "ytCreationCodeContractB": "0x64c7F2aE32eC6239b460818Bd10703D7aBA09534",
        "ytCreationCodeSizeA": 10438,
        "ytCreationCodeSizeB": 10438
      },
      "implementationNames": {
        "0x35A338522a435D46f77Be32C70E215B813D0e3aC": "PendleYieldContractFactory"
      }
    },
    {
      "name": "Vat",
      "address": "0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B",
      "type": "Contract",
      "sourceHashes": [
        "0x9b8ce62567b688087bbdf9f3d73335cea74a370eed8f6bf13649dc0a5a66616d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1573672592,
      "sinceBlock": 8928152,
      "values": {
        "$immutable": true,
        "debt": "8776905326462756896239690347122192261796439099127330693",
        "Line": "11582127404729619900740022933350207653941779699408084842",
        "live": 1,
        "vice": "161171691128813111090819620104553699305617825918876304"
      },
      "implementationNames": {
        "0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B": "Vat"
      }
    },
    {
      "name": "EETH",
      "address": "0x35fA164735182de50811E8e2E824cFb9B6118ac2",
      "type": "Contract",
      "sourceHashes": [
        "0xc7d4ded9ae90035f03bfae2562d8f70dc9e940557a004fefa9bbe8c6473e092c",
        "0xef94024d6394333bff235480fc99d4930fc1c474d35d6073c0b2a86330ee4ed6"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1689005015,
      "sinceBlock": 17664324,
      "values": {
        "$admin": "0x9f26d4C958fD811A1F59B01B86Be7dFFc9d20761",
        "$implementation": "0x46c51d2E6d5FEF0400d26320bC96995176c369DD",
        "$pastUpgrades": [
          [
            "2023-07-10T16:03:35.000Z",
            "0xf6763c707b90b260bba114fce9a141aa4a923327539ded9d4d4ae4395b2200ff",
            ["0x5e9035F3f4b5Ce6BCcb45010B4aeCCeB639E5242"]
          ],
          [
            "2023-11-09T22:40:35.000Z",
            "0x326cb1804e8cf14873823c55f1a2c6114da5bb472c23d9f4e84b8dc74d3d6bc3",
            ["0xe8e55a0734F81fd8cfFCB14447Bf52054722E3E6"]
          ],
          [
            "2023-11-11T16:29:35.000Z",
            "0x948619778c0518e9348d3d68e7e87686935d6d64e0b2bb4695bf11369f4f637d",
            ["0x1B47A665364bC15C28B05f449B53354d0CefF72f"]
          ],
          [
            "2025-01-20T15:54:59.000Z",
            "0xcd3df37e52936ec0b941cf99217f4ace487c7e3335c14a6bcb384b0c3c9e981a",
            ["0x46c51d2E6d5FEF0400d26320bC96995176c369DD"]
          ]
        ],
        "$upgradeCount": 4,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x991790ed4e35196386e9ac6dcfec6747d093a40cbc6e5711b8279a207080e728",
        "getImplementation": "0x46c51d2E6d5FEF0400d26320bC96995176c369DD",
        "liquidityPool": "0x308861A430be4cce5502d0A12724771Fc6DaF216",
        "name": "ether.fi ETH",
        "owner": "0x9f26d4C958fD811A1F59B01B86Be7dFFc9d20761",
        "symbol": "eETH",
        "totalShares": "2564318188349591496443929",
        "totalSupply": "2746939450006579598762604"
      },
      "errors": { "proxiableUUID": "Processing error occurred." },
      "implementationNames": {
        "0x35fA164735182de50811E8e2E824cFb9B6118ac2": "UUPSProxy",
        "0x46c51d2E6d5FEF0400d26320bC96995176c369DD": "EETH"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x3B0AAf6e6fCd4a7cEEf8c92C32DFeA9E64dC1862",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1695899615,
      "sinceBlock": 18233861,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x18d32B1AB042b5E9a3430e77fDE8B4783A019234",
          "0xb93C042c688F1Cf038bab03C4F832F2630Bb7d8F",
          "0x66892C66711B2640360C3123E6C23C0cFa50550F",
          "0xE3F95F2e1aDEC092337FB5D93C1fE87558658b11",
          "0x99682F56F4ccCF61BD7e449924f2f62D395e1E45",
          "0x60ae15b70d10e6F7f27d846E93222Cdd5a2E475E",
          "0x643Dbbc80Bb5432f646fEDFa4091a9b205E87Ae4",
          "0x54D0D64f7326b128959bf37Ed7B5f2510656a471",
          "0xFBE49A82CB2BFF6Fa4C2B1F0d165A5E1175Aac83",
          "0xE987E14b2E204fdf5827a3cFCa7D476E8Df6a99E",
          "0xe5cA87dA3A209aD85FdcbB515e1bD92644e9E1A6"
        ],
        "$threshold": 5,
        "domainSeparator": "0xb69d363c8933ad254caa2ac2249c3901757493ca36cd4c3425603a7b9d972b88",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "5 of 11 (45%)",
        "nonce": 387,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x3B0AAf6e6fCd4a7cEEf8c92C32DFeA9E64dC1862": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "UniswapPairOracle_USDT_WETH",
      "address": "0x3B11DA52030420c663d263Ad4415a8A02E5f8cf8",
      "type": "Contract",
      "sourceHashes": [
        "0xb6960ac3721eb5164b07f6a0c427c91d6418f93381cd5c1d7f3d38a81d1c7606"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1609124846,
      "sinceBlock": 11539831,
      "values": {
        "$immutable": true,
        "ALLOW_STALE_CONSULTS": false,
        "blockTimestampLast": 1653530471,
        "canUpdate": true,
        "CONSULT_LENIENCY": 120,
        "pair": "0xecBa967D84fCF0405F6b32Bc45F4d36BfDBB2E81",
        "PERIOD": 600,
        "price0Average": "19720194560496472240398626341041",
        "price0CumulativeLast": "1144207123367880923784665105255313096743",
        "price1Average": "1367123766677071810559390360483767193",
        "price1CumulativeLast": "92496964234498302537502026618092531263121005",
        "token0": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0",
        "token1": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "implementationNames": {
        "0x3B11DA52030420c663d263Ad4415a8A02E5f8cf8": "UniswapPairOracle_USDT_WETH"
      }
    },
    {
      "name": "PendlePrincipalToken",
      "address": "0x3b3fB9C57858EF816833dC91565EFcd85D96f634",
      "type": "Contract",
      "sourceHashes": [
        "0xe7599dbbd1b4d9d7a2cb1262cc8d0b2db2123ae858c45fa712d5afcdfd23d1eb"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1742886059,
      "sinceBlock": 22122290,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "expiry": 1753920000,
        "factory": "0x35A338522a435D46f77Be32C70E215B813D0e3aC",
        "isExpired": false,
        "name": "PT Ethena sUSDE 31JUL2025",
        "SY": "0xF541AA4d6f29ec2423A0D306dBc677021A02DBC0",
        "symbol": "PT-sUSDE-31JUL2025",
        "totalSupply": "1970514046483407201129279855",
        "YT": "0xb7E51D15161C49C823f3951D579DEd61cD27272B"
      },
      "implementationNames": {
        "0x3b3fB9C57858EF816833dC91565EFcd85D96f634": "PendlePrincipalToken"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x3C405F68d5C6eCE868e5646cAC926679839aCd68",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x04a556db1ea1a651e1174247090ad4c7105b455feab1a9672d5c4cd113b9ff0b"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0xC139190F447e929f090Edeb554D95AbB8b18aC1C"
        }
      ],
      "sinceTimestamp": 1732809995,
      "sinceBlock": 21287282,
      "values": {
        "$immutable": true,
        "owner": "0xe897D8620D5EbA2C8ecAAF0aDa191a23230aB8Ec"
      },
      "implementationNames": {
        "0x3C405F68d5C6eCE868e5646cAC926679839aCd68": "ProxyAdmin"
      }
    },
    {
      "name": "MultiSigWalletWithDailyLimit",
      "address": "0x3EB01B3391EA15CE752d01Cf3D3F09deC596F650",
      "type": "Contract",
      "sourceHashes": [
        "0x559f6f57f4a9b13b599b44d981dd43ceda2ac33ae441861be5347ad3138e4342"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1503946707,
      "sinceBlock": 4213752,
      "values": {
        "$immutable": true,
        "calcMaxWithdraw": 0,
        "dailyLimit": 0,
        "getConfirmationCount": [1, 1, 1, 1, 1],
        "getConfirmations": [
          ["0x2175b09A8321b712220D1608388e270F4B5906f1"],
          ["0x2175b09A8321b712220D1608388e270F4B5906f1"],
          ["0x8180a5CA4E3B94045e05A9313777955f7518D757"],
          ["0x8180a5CA4E3B94045e05A9313777955f7518D757"],
          ["0x8180a5CA4E3B94045e05A9313777955f7518D757"]
        ],
        "getOwners": [
          "0x05b66A8A8C8a1207F2c941d553ea8F7b17315851",
          "0x581ab5C7c4ED1D1f87471778001014F2123273F0",
          "0x8180a5CA4E3B94045e05A9313777955f7518D757",
          "0x2175b09A8321b712220D1608388e270F4B5906f1",
          "0x3A9b02c14d967333cE68E353a64653E258da2BAa"
        ],
        "isConfirmed": [false, false, false, false, false],
        "lastDay": 1679552495,
        "MAX_OWNER_COUNT": 50,
        "owners": [
          "0x05b66A8A8C8a1207F2c941d553ea8F7b17315851",
          "0x581ab5C7c4ED1D1f87471778001014F2123273F0",
          "0x8180a5CA4E3B94045e05A9313777955f7518D757",
          "0x2175b09A8321b712220D1608388e270F4B5906f1",
          "0x3A9b02c14d967333cE68E353a64653E258da2BAa"
        ],
        "required": 3,
        "spentToday": 0,
        "transactionCount": 745,
        "transactions": [
          [
            "0xdd974D5C2e2928deA5F71b9825b8b646686BD200",
            0,
            "0xa9059cbb000000000000000000000000c8a1dab586dee8a30cb88c87b8a3614e0a391fc5000000000000000000000000000000000000000000000000000000000000000a",
            true
          ],
          ["0x62EC11a7Fb5E35bd9e243Eb7f867a303e0dFe08b", 12, "0x", true],
          [
            "0xdd974D5C2e2928deA5F71b9825b8b646686BD200",
            0,
            "0xa9059cbb000000000000000000000000eafbd0496447667a64c55b00584891c0f92650f30000000000000000000000000000000000000000000000000de0b6b3a7640000",
            true
          ],
          [
            "0xdd974D5C2e2928deA5F71b9825b8b646686BD200",
            0,
            "0xa9059cbb000000000000000000000000eafbd0496447667a64c55b00584891c0f92650f30000000000000000000000000000000000000000000045e148194a5d52dc0000",
            true
          ],
          [
            "0xdd974D5C2e2928deA5F71b9825b8b646686BD200",
            0,
            "0xa9059cbb000000000000000000000000e1a87de8a0685530983c6722f53336a8d74622960000000000000000000000000000000000000000000000000de0b6b3a7640000",
            true
          ]
        ]
      },
      "errors": {
        "getConfirmationCount": "Processing error occurred.",
        "getConfirmations": "Processing error occurred.",
        "isConfirmed": "Processing error occurred.",
        "owners": "Processing error occurred.",
        "transactions": "Processing error occurred."
      },
      "implementationNames": {
        "0x3EB01B3391EA15CE752d01Cf3D3F09deC596F650": "MultiSigWalletWithDailyLimit"
      }
    },
    {
      "name": "Agent",
      "address": "0x40907540d8a6C65c637785e8f8B742ae6b0b9968",
      "type": "Contract",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0xa2a0001d171ac04fee445851ab0e1c994c3b76a49ae877c1b3d2b563ae8b8178"
      ],
      "proxyType": "EIP897 proxy",
      "sinceTimestamp": 1597269805,
      "sinceBlock": 10647744,
      "values": {
        "$immutable": false,
        "$implementation": "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37",
        "ADD_PRESIGNED_HASH_ROLE": "0x0b29780bb523a130b3b01f231ef49ed2fa2781645591a0b0a44ca98f15a5994c",
        "ADD_PROTECTED_TOKEN_ROLE": "0x6eb2a499556bfa2872f5aa15812b956cc4a71b4d64eb3553f7073c7e41415aaa",
        "appId": "0x9ac98dc5f995bf0211ed589ef022719d1487e5cb2bab505676f0d084c07cf89a",
        "DESIGNATE_SIGNER_ROLE": "0x23ce341656c3f14df6692eebd4757791e33662b7dcf9970c8308303da5472b7c",
        "designatedSigner": "0x0000000000000000000000000000000000000000",
        "ERC1271_INTERFACE_ID": "0xfb855dc9",
        "ERC1271_RETURN_INVALID_SIGNATURE": "0x00000000",
        "ERC1271_RETURN_VALID_SIGNATURE": "0x20c13b0b",
        "EXECUTE_ROLE": "0xcebf517aa4440d1d125e0355aae64401211d0848a23c02cc5d29a14822580ba4",
        "getEVMScriptRegistry": "0x1b13e8E7b85b2F92CA4436F98F88CE169f63D567",
        "getInitializationBlock": 10647744,
        "getProtectedTokensLength": 0,
        "getRecoveryVault": "0x0000000000000000000000000000000000000000",
        "hasInitialized": true,
        "implementation": "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37",
        "isDepositable": true,
        "isForwarder": true,
        "isPetrified": false,
        "kernel": "0xad06868167BC5Ac5cFcbEf2CAFa82bc76961D72d",
        "PROTECTED_TOKENS_CAP": 10,
        "protectedTokens": [],
        "proxyType": 2,
        "REMOVE_PROTECTED_TOKEN_ROLE": "0x71eee93d500f6f065e38b27d242a756466a00a52a1dbcd6b4260f01a8640402a",
        "RUN_SCRIPT_ROLE": "0xb421f7ad7646747f3051c50c0b8e2377839296cd4973e27f63821d73e390338f",
        "SAFE_EXECUTE_ROLE": "0x0a1ad7b87f5846153c6d5a1f761d71c7d0cfd122384f56066cd33239b7933694",
        "TRANSFER_ROLE": "0x8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c"
      },
      "implementationNames": {
        "0x40907540d8a6C65c637785e8f8B742ae6b0b9968": "AppProxyUpgradeable",
        "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37": "Agent"
      }
    },
    {
      "name": "GhoToken",
      "address": "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f",
      "type": "Contract",
      "sourceHashes": [
        "0xcdec3e76f43ecec36e28a79091b5b80289a16d8c93cf7d4e4d0159891e81e2cc"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1689420227,
      "sinceBlock": 17698470,
      "values": {
        "$immutable": true,
        "BUCKET_MANAGER_ROLE": "0xc7f115822aabac0cd6b9d21b08c0c63819451a58157aecad689d1b5674fad408",
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0x932202c33312534427f5c189c578d873bad01df5a9634604e05b9270ba46bff5",
        "FACILITATOR_MANAGER_ROLE": "0x5e20732f79076148980e17b6ce9f22756f85058fe2765420ed48a504bef5a8bc",
        "getFacilitatorsList": [
          "0x00907f9921424583e7ffBfEdf84F92B7B2Be4977",
          "0xb639D208Bcf0589D54FaC24E655C79EC529762B8",
          "0x535b2f7C20B9C83d70e519cf9991578eF9816B7B",
          "0xFeeb6FE430B7523fEF2a38327241eE7153779535",
          "0x2cE01c87Fec1b71A9041c52CaED46Fc5f4807285"
        ],
        "name": "Gho Token",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "symbol": "GHO",
        "totalSupply": "226698177482680688377322170"
      },
      "implementationNames": {
        "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f": "GhoToken"
      }
    },
    {
      "name": "CollectorWithCustomImpl",
      "address": "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c",
      "type": "Contract",
      "sourceHashes": [
        "0x53c825cd4ad42561c5de201c4c2553b60f1c7bb1d367bb2acfefc9380abe7394",
        "0xb9b7f2861f880a2c7f66a00643f10d9fc6399e3a641adb1366598941bd47e421"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1605608004,
      "sinceBlock": 11274810,
      "values": {
        "$admin": "0xD3cF979e676265e4f6379749DECe4708B9A22476",
        "$implementation": "0x83b7Ce402A0E756E901C4A9d1cAfa27cA9572afC",
        "$pastUpgrades": [
          [
            "2022-02-26T13:05:27.000Z",
            "0xc7cc985c7a6277492f5e7720eee392394d32b62ac5cfe6408757a7c75d1b6e08",
            ["0xa335E2443b59d11337E9005c9AF5bC31F8000714"]
          ],
          [
            "2022-05-07T18:04:54.000Z",
            "0xfd0b0958d08428e69e7d30ad77999012bb71b2aa3263567f23149252d7c3142f",
            ["0x1aa435ed226014407Fa6b889e9d06c02B1a12AF3"]
          ],
          [
            "2023-04-22T01:45:11.000Z",
            "0xff6e0f80e4938a540f55df98430b029857e62b3af0334c9079b1988061d4cbe7",
            ["0x80f2c02224a2E548FC67c0bF705eBFA825dd5439"]
          ],
          [
            "2025-02-10T12:26:59.000Z",
            "0x182ef872c43cc8a66d95699ae530538567dc5543d6588409db760a80d87c62e2",
            ["0x83b7Ce402A0E756E901C4A9d1cAfa27cA9572afC"]
          ]
        ],
        "$upgradeCount": 4,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "deltaOf": [],
        "ETH_MOCK_ADDRESS": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",
        "FUNDS_ADMIN_ROLE": "0x46554e44535f41444d494e000000000000000000000000000000000000000000",
        "getNextStreamId": 100065,
        "getStream": []
      },
      "implementationNames": {
        "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c": "InitializableAdminUpgradeabilityProxy",
        "0x83b7Ce402A0E756E901C4A9d1cAfa27cA9572afC": "CollectorWithCustomImpl"
      }
    },
    {
      "address": "0x46574f57f3F5DFCCd296F80407b3f4778414f8f5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LiquidationLogic",
      "address": "0x4731bF01583F991278692E8727d0700a00A1fBBf",
      "type": "Contract",
      "sourceHashes": [
        "0x9c6fddf6e08193b5649871e2968498ddffb16b7b195dd8022fc8621f3e03e8eb"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1738757831,
      "sinceBlock": 21780237,
      "values": {
        "$immutable": true,
        "CLOSE_FACTOR_HF_THRESHOLD": "950000000000000000",
        "MIN_BASE_MAX_CLOSE_FACTOR_THRESHOLD": 200000000000,
        "MIN_LEFTOVER_BASE": 100000000000
      },
      "implementationNames": {
        "0x4731bF01583F991278692E8727d0700a00A1fBBf": "LiquidationLogic"
      }
    },
    {
      "address": "0x4914f61d25e5C567143774B76EdbF4D5109a8566",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
          "description": "pause the USDC token (no transfers, mints, burns)."
        }
      ]
    },
    {
      "name": "AaveProtocolDataProvider",
      "address": "0x497a1994c46d4f6C864904A9f1fac6328Cb7C8a6",
      "type": "Contract",
      "sourceHashes": [
        "0xaf0f5912f85d7a6dc9b164a3d4df8433870a2b16706b42948e5c0353b9d20bb9"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1738762439,
      "sinceBlock": 21780617,
      "values": {
        "$immutable": true,
        "ADDRESSES_PROVIDER": "0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e",
        "getAllATokens": [
          {
            "symbol": "aEthWETH",
            "tokenAddress": "0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8"
          },
          {
            "symbol": "aEthwstETH",
            "tokenAddress": "0x0B925eD163218f6662a35e0f0371Ac234f9E9371"
          },
          {
            "symbol": "aEthWBTC",
            "tokenAddress": "0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8"
          },
          {
            "symbol": "aEthUSDC",
            "tokenAddress": "0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c"
          },
          {
            "symbol": "aEthDAI",
            "tokenAddress": "0x018008bfb33d285247A21d44E50697654f754e63"
          },
          {
            "symbol": "aEthLINK",
            "tokenAddress": "0x5E8C8A7243651DB1384C0dDfDbE39761E8e7E51a"
          },
          {
            "symbol": "aEthAAVE",
            "tokenAddress": "0xA700b4eB416Be35b2911fd5Dee80678ff64fF6C9"
          },
          {
            "symbol": "aEthcbETH",
            "tokenAddress": "0x977b6fc5dE62598B08C85AC8Cf2b745874E8b78c"
          },
          {
            "symbol": "aEthUSDT",
            "tokenAddress": "0x23878914EFE38d27C4D67Ab83ed1b93A74D4086a"
          },
          {
            "symbol": "aEthrETH",
            "tokenAddress": "0xCc9EE9483f662091a1de4795249E24aC0aC2630f"
          },
          {
            "symbol": "aEthLUSD",
            "tokenAddress": "0x3Fe6a295459FAe07DF8A0ceCC36F37160FE86AA9"
          },
          {
            "symbol": "aEthCRV",
            "tokenAddress": "0x7B95Ec873268a6BFC6427e7a28e396Db9D0ebc65"
          },
          {
            "symbol": "aEthMKR",
            "tokenAddress": "0x8A458A9dc9048e005d22849F470891b840296619"
          },
          {
            "symbol": "aEthSNX",
            "tokenAddress": "0xC7B4c17861357B8ABB91F25581E7263E08DCB59c"
          },
          {
            "symbol": "aEthBAL",
            "tokenAddress": "0x2516E7B3F76294e03C42AA4c5b5b4DCE9C436fB8"
          },
          {
            "symbol": "aEthUNI",
            "tokenAddress": "0xF6D2224916DDFbbab6e6bd0D1B7034f4Ae0CaB18"
          },
          {
            "symbol": "aEthLDO",
            "tokenAddress": "0x9A44fd41566876A39655f74971a3A6eA0a17a454"
          },
          {
            "symbol": "aEthENS",
            "tokenAddress": "0x545bD6c032eFdde65A377A6719DEF2796C8E0f2e"
          },
          {
            "symbol": "aEth1INCH",
            "tokenAddress": "0x71Aef7b30728b9BB371578f36c5A1f1502a5723e"
          },
          {
            "symbol": "aEthFRAX",
            "tokenAddress": "0xd4e245848d6E1220DBE62e155d89fa327E43CB06"
          },
          {
            "symbol": "aEthGHO",
            "tokenAddress": "0x00907f9921424583e7ffBfEdf84F92B7B2Be4977"
          },
          {
            "symbol": "aEthRPL",
            "tokenAddress": "0xB76CF92076adBF1D9C39294FA8e7A67579FDe357"
          },
          {
            "symbol": "aEthsDAI",
            "tokenAddress": "0x4C612E3B15b96Ff9A6faED838F8d07d479a8dD4c"
          },
          {
            "symbol": "aEthSTG",
            "tokenAddress": "0x1bA9843bD4327c6c77011406dE5fA8749F7E3479"
          },
          {
            "symbol": "aEthKNC",
            "tokenAddress": "0x5b502e3796385E1e9755d7043B9C945C3aCCeC9C"
          },
          {
            "symbol": "aEthFXS",
            "tokenAddress": "0x82F9c5ad306BBa1AD0De49bB5FA6F01bf61085ef"
          },
          {
            "symbol": "aEthcrvUSD",
            "tokenAddress": "0xb82fa9f31612989525992FCfBB09AB22Eff5c85A"
          },
          {
            "symbol": "aEthPYUSD",
            "tokenAddress": "0x0C0d01AbF3e6aDfcA0989eBbA9d6e85dD58EaB1E"
          },
          {
            "symbol": "aEthweETH",
            "tokenAddress": "0xBdfa7b7893081B35Fb54027489e2Bc7A38275129"
          },
          {
            "symbol": "aEthosETH",
            "tokenAddress": "0x927709711794F3De5DdBF1D176bEE2D55Ba13c21"
          },
          {
            "symbol": "aEthUSDe",
            "tokenAddress": "0x4F5923Fc5FD4a93352581b38B7cD26943012DECF"
          },
          {
            "symbol": "aEthETHx",
            "tokenAddress": "0x1c0E06a0b1A4c160c17545FF2A951bfcA57C0002"
          },
          {
            "symbol": "aEthsUSDe",
            "tokenAddress": "0x4579a27aF00A62C0EB156349f31B345c08386419"
          },
          {
            "symbol": "aEthtBTC",
            "tokenAddress": "0x10Ac93971cdb1F5c778144084242374473c350Da"
          },
          {
            "symbol": "aEthcbBTC",
            "tokenAddress": "0x5c647cE0Ae10658ec44FA4E11A51c96e94efd1Dd"
          },
          {
            "symbol": "aEthUSDS",
            "tokenAddress": "0x32a6268f9Ba3642Dda7892aDd74f1D34469A4259"
          },
          {
            "symbol": "aEthrsETH",
            "tokenAddress": "0x2D62109243b87C4bA3EE7bA1D91B0dD0A074d7b1"
          },
          {
            "symbol": "aEthLBTC",
            "tokenAddress": "0x65906988ADEe75306021C417a1A3458040239602"
          },
          {
            "symbol": "aEtheBTC",
            "tokenAddress": "0x5fefd7069a7D91d01f269DADE14526CCF3487810"
          },
          {
            "symbol": "aEthRLUSD",
            "tokenAddress": "0xFa82580c16A31D0c1bC632A36F82e83EfEF3Eec0"
          },
          {
            "symbol": "aEthPT_eUSDE_29MAY2025",
            "tokenAddress": "0x4B0821e768Ed9039a70eD1E80E15E76a5bE5Df5F"
          },
          {
            "symbol": "aEthPT_sUSDE_31JUL2025",
            "tokenAddress": "0xDE6eF6CB4aBd3A473ffC2942eEf5D84536F8E864"
          },
          {
            "symbol": "aEthUSDtb",
            "tokenAddress": "0xEc4ef66D4fCeEba34aBB4dE69dB391Bc5476ccc8"
          },
          {
            "symbol": "aEthPT_USDe_31JUL2025",
            "tokenAddress": "0x312ffC57778CEfa11989733e6E08143E7E229c1c"
          },
          {
            "symbol": "aEthPT_eUSDe_14AUG2025",
            "tokenAddress": "0x2eDff5AF94334fBd7C38ae318edf1c40e072b73B"
          },
          {
            "symbol": "aEtheUSDe",
            "tokenAddress": "0x5F9190496e0DFC831C3bd307978de4a245E2F5cD"
          },
          {
            "symbol": "aEthFBTC",
            "tokenAddress": "0xcCA43ceF272c30415866914351fdfc3E881bb7c2"
          },
          {
            "symbol": "aEthEURC",
            "tokenAddress": "0xAA6e91C82942aeAE040303Bf96c15a6dBcB82CA0"
          }
        ],
        "getAllReservesTokens": [
          {
            "symbol": "WETH",
            "tokenAddress": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
          },
          {
            "symbol": "wstETH",
            "tokenAddress": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
          },
          {
            "symbol": "WBTC",
            "tokenAddress": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"
          },
          {
            "symbol": "USDC",
            "tokenAddress": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
          },
          {
            "symbol": "DAI",
            "tokenAddress": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
          },
          {
            "symbol": "LINK",
            "tokenAddress": "0x514910771AF9Ca656af840dff83E8264EcF986CA"
          },
          {
            "symbol": "AAVE",
            "tokenAddress": "0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9"
          },
          {
            "symbol": "cbETH",
            "tokenAddress": "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704"
          },
          {
            "symbol": "USDT",
            "tokenAddress": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
          },
          {
            "symbol": "rETH",
            "tokenAddress": "0xae78736Cd615f374D3085123A210448E74Fc6393"
          },
          {
            "symbol": "LUSD",
            "tokenAddress": "0x5f98805A4E8be255a32880FDeC7F6728C6568bA0"
          },
          {
            "symbol": "CRV",
            "tokenAddress": "0xD533a949740bb3306d119CC777fa900bA034cd52"
          },
          {
            "symbol": "MKR",
            "tokenAddress": "0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2"
          },
          {
            "symbol": "SNX",
            "tokenAddress": "0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F"
          },
          {
            "symbol": "BAL",
            "tokenAddress": "0xba100000625a3754423978a60c9317c58a424e3D"
          },
          {
            "symbol": "UNI",
            "tokenAddress": "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984"
          },
          {
            "symbol": "LDO",
            "tokenAddress": "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32"
          },
          {
            "symbol": "ENS",
            "tokenAddress": "0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72"
          },
          {
            "symbol": "1INCH",
            "tokenAddress": "0x111111111117dC0aa78b770fA6A738034120C302"
          },
          {
            "symbol": "FRAX",
            "tokenAddress": "0x853d955aCEf822Db058eb8505911ED77F175b99e"
          },
          {
            "symbol": "GHO",
            "tokenAddress": "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f"
          },
          {
            "symbol": "RPL",
            "tokenAddress": "0xD33526068D116cE69F19A9ee46F0bd304F21A51f"
          },
          {
            "symbol": "sDAI",
            "tokenAddress": "0x83F20F44975D03b1b09e64809B757c47f942BEeA"
          },
          {
            "symbol": "STG",
            "tokenAddress": "0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6"
          },
          {
            "symbol": "KNC",
            "tokenAddress": "0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202"
          },
          {
            "symbol": "FXS",
            "tokenAddress": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0"
          },
          {
            "symbol": "crvUSD",
            "tokenAddress": "0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E"
          },
          {
            "symbol": "PYUSD",
            "tokenAddress": "0x6c3ea9036406852006290770BEdFcAbA0e23A0e8"
          },
          {
            "symbol": "weETH",
            "tokenAddress": "0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee"
          },
          {
            "symbol": "osETH",
            "tokenAddress": "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38"
          },
          {
            "symbol": "USDe",
            "tokenAddress": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3"
          },
          {
            "symbol": "ETHx",
            "tokenAddress": "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b"
          },
          {
            "symbol": "sUSDe",
            "tokenAddress": "0x9D39A5DE30e57443BfF2A8307A4256c8797A3497"
          },
          {
            "symbol": "tBTC",
            "tokenAddress": "0x18084fbA666a33d37592fA2633fD49a74DD93a88"
          },
          {
            "symbol": "cbBTC",
            "tokenAddress": "0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf"
          },
          {
            "symbol": "USDS",
            "tokenAddress": "0xdC035D45d973E3EC169d2276DDab16f1e407384F"
          },
          {
            "symbol": "rsETH",
            "tokenAddress": "0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7"
          },
          {
            "symbol": "LBTC",
            "tokenAddress": "0x8236a87084f8B84306f72007F36F2618A5634494"
          },
          {
            "symbol": "eBTC",
            "tokenAddress": "0x657e8C867D8B37dCC18fA4Caead9C45EB088C642"
          },
          {
            "symbol": "RLUSD",
            "tokenAddress": "0x8292Bb45bf1Ee4d140127049757C2E0fF06317eD"
          },
          {
            "symbol": "PT-eUSDE-29MAY2025",
            "tokenAddress": "0x50D2C7992b802Eef16c04FeADAB310f31866a545"
          },
          {
            "symbol": "PT-sUSDE-31JUL2025",
            "tokenAddress": "0x3b3fB9C57858EF816833dC91565EFcd85D96f634"
          },
          {
            "symbol": "USDtb",
            "tokenAddress": "0xC139190F447e929f090Edeb554D95AbB8b18aC1C"
          },
          {
            "symbol": "PT-USDe-31JUL2025",
            "tokenAddress": "0x917459337CaAC939D41d7493B3999f571D20D667"
          },
          {
            "symbol": "PT-eUSDE-14AUG2025",
            "tokenAddress": "0x14Bdc3A3AE09f5518b923b69489CBcAfB238e617"
          },
          {
            "symbol": "eUSDe",
            "tokenAddress": "0x90D2af7d622ca3141efA4d8f1F24d86E5974Cc8F"
          },
          {
            "symbol": "FBTC",
            "tokenAddress": "0xC96dE26018A54D51c097160568752c4E3BD6C364"
          },
          {
            "symbol": "EURC",
            "tokenAddress": "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c"
          }
        ],
        "getDebtCeilingDecimals": 2
      },
      "implementationNames": {
        "0x497a1994c46d4f6C864904A9f1fac6328Cb7C8a6": "AaveProtocolDataProvider"
      }
    },
    {
      "name": "StaderConfig",
      "address": "0x4ABEF2263d5A5ED582FC9A9789a41D85b68d69DB",
      "type": "Contract",
      "sourceHashes": [
        "0x36a2777510f3b20063560bdcb7f657da283bcfdc484a19b0a0f77d18f6a8b5e1",
        "0xcfa565988cd50a871239f5b46266fbdc9b817eae4d21ffdd1baa4e7f9d122a94"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1685990291,
      "sinceBlock": 17416137,
      "values": {
        "$admin": "0x67B12264Ca3e0037Fc7E22F2457b42643a04C86e",
        "$implementation": "0x808e8783Ba7e315517952d195E20bC8eDBa7da23",
        "$pastUpgrades": [
          [
            "2023-06-05T18:38:11.000Z",
            "0x7813541f4238ef14f5e5ff1d8b67df074653fd3ead1419e1b7ecca55872f5fea",
            ["0x615BaC1593F20d853B0946D16B81200D9B9F96DC"]
          ],
          [
            "2023-06-23T05:30:23.000Z",
            "0x5c42f16092fed136218514b02de520f6e0503473392df3fb67ca31f544821f65",
            ["0x060A6A57f8ce8Fb99cbC8d4Fd6B73C36EEBD2C30"]
          ],
          [
            "2024-02-20T05:21:11.000Z",
            "0xaf2fdf9bb3f8340b317359d24ed0437bd11072b4d8a0322578e8383eeb135adf",
            ["0x2dBa235892dc72efa74e0b395294494B5B0B32B2"]
          ],
          [
            "2025-04-15T07:20:23.000Z",
            "0x8cd4ed7ea6f625c542067c4151c9bb78f422540f5f11bc4c25b37f905e98ae3e",
            ["0x808e8783Ba7e315517952d195E20bC8eDBa7da23"]
          ]
        ],
        "$upgradeCount": 4,
        "ADMIN": "0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
        "AUCTION_CONTRACT": "0x8e96355022bb9b9f4d9d4e01fe2b58f45e78549c982c401c96f75f33c5de457e",
        "DECIMALS": "0x08593985ae1bebfb02f6c30105edffb176a6d87c9fad54c434bf9b58f67e81b6",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "ETH_BALANCE_POR_FEED": "0x690795c57e13eaf2526f76202b6799e9afdb069afca1e572f693953d013569d8",
        "ETH_DEPOSIT_CONTRACT": "0x84b42b3d5e6851893d4418c6ebc9a4727e78afdf84e73674c8b9c1c2b1904e2d",
        "ETH_PER_NODE": "0xf822b1f0c3b886ce1cdf1c2a5317844145470db33b02c63cae4813f8c9b2dc17",
        "ETHx": "0x09dfa94a9be22222b511ecf509f49718fc08fbe3ada37a44d2022489eca3b44c",
        "ETHX_SUPPLY_POR_FEED": "0xb134afa3abad633a84ab2d33dd5171f2b371e38b0f7bca001383aaf08ed6d2d1",
        "FULL_DEPOSIT_SIZE": "0x876943525608da6d95be5925fe6c4fe80e8622c8a76e7414f80e8ba210e0711c",
        "getAdmin": "0x1112D5C55670Cb5144BF36114C20a122908068B9",
        "getAuctionContract": "0x85A22763f94D703d2ee39E9374616ae4C1612569",
        "getDecimals": "1000000000000000000",
        "getETHBalancePORFeedProxy": "0x0000000000000000000000000000000000000000",
        "getETHDepositContract": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "getETHXSupplyPORFeedProxy": "0x0000000000000000000000000000000000000000",
        "getETHxToken": "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
        "getFullDepositSize": "31000000000000000000",
        "getMaxDepositAmount": "10000000000000000000000",
        "getMaxWithdrawAmount": "10000000000000000000000",
        "getMinBlockDelayToFinalizeWithdrawRequest": 7200,
        "getMinDepositAmount": 100000000000000,
        "getMinWithdrawAmount": 100000000000000,
        "getNodeELRewardVaultImplementation": "0x97c92752DD8a8947cE453d3e35D2cad5857367af",
        "getOperatorMaxNameLength": 255,
        "getOperatorRewardsCollector": "0x84ffDC9De310144D889540A49052F6d1AdB2C335",
        "getPenaltyContract": "0x84645f1B80475992Df2C65c28bE6688d15dc6ED6",
        "getPermissionedNodeRegistry": "0xaf42d795A6D279e9DCc19DC0eE1cE3ecd4ecf5dD",
        "getPermissionedPool": "0x09134C643A6B95D342BdAf081Fa473338F066572",
        "getPermissionedSocializingPool": "0x9d4C3166c59412CEdBe7d901f5fDe41903a1d6Fc",
        "getPermissionlessNodeRegistry": "0x4f4Bfa0861F62309934a5551E0B2541Ee82fdcF1",
        "getPermissionlessPool": "0xd1a72Bd052e0d65B7c26D3dd97A98B74AcbBb6c5",
        "getPermissionlessSocializingPool": "0x1DE458031bFbe5689deD5A8b9ed57e1E79EaB2A4",
        "getPoolSelector": "0x62e0b431990Ea128fe685E764FB04e7d604603B0",
        "getPoolUtils": "0xeDA89ed8F89D786D816F8E14CF8d2F90c6BF763f",
        "getPreDepositSize": "1000000000000000000",
        "getRewardsThreshold": "8000000000000000000",
        "getSDCollateral": "0x7Af4730cc8EbAd1a050dcad5c03c33D2793EE91f",
        "getSDIncentiveController": "0xe225825bcf20F39E2F2e2170412a3247D83492D0",
        "getSDUtilityPool": "0xED6EE5049f643289ad52411E9aDeC698D04a9602",
        "getSocializingPoolCycleDuration": 201600,
        "getSocializingPoolOptInCoolingPeriod": 403200,
        "getStaderInsuranceFund": "0xbe3781CE437Cc3fC8c8167913B4d462347D11F20",
        "getStaderOracle": "0xF64bAe65f6f2a5277571143A24FaaFDFC0C2a737",
        "getStaderToken": "0x30D20208d987713f46DFD34EF128Bb16C404D10f",
        "getStaderTreasury": "0x01422247a1d15BB4FcF91F5A077Cf25BA6460130",
        "getStakedEthPerNode": "32000000000000000000",
        "getStakePoolManager": "0xcf5EA1b38380f6aF39068375516Daf40Ed70D299",
        "getTotalFee": 10000,
        "getUserWithdrawManager": "0x9F0491B32DBce587c50c4C43AB303b06478193A7",
        "getValidatorWithdrawalVaultImplementation": "0x3073cC90aD39E0C30bb0d4c70F981FbD00f3458f",
        "getVaultFactory": "0x03ABEEC03BF39ac5A5C8886cF3496326d8164E1E",
        "getWithdrawnKeyBatchSize": 50,
        "MANAGER": "0xaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c",
        "MAX_DEPOSIT_AMOUNT": "0x712c13b90acf399d7bc7625370ce37c64b5eba41011b0961a88c2ef1648870cf",
        "MAX_WITHDRAW_AMOUNT": "0x1c2fe98ddbbbffbcf7735c7446ffcddb5ccd2a4ec2ace0f7d90f73e9ff13fcc7",
        "MIN_BLOCK_DELAY_TO_FINALIZE_WITHDRAW_REQUEST": "0x2cf2377da51daa9c0d7e3f98c7532a67ee5e9398afad7b7db6e578b978a27094",
        "MIN_DEPOSIT_AMOUNT": "0xfa5a84fed05ba4c93fcc5ba1f4ad010e3bef3e6394b367aa10b3ec01997375cc",
        "MIN_WITHDRAW_AMOUNT": "0xb18278bb399a7088b8b0b26f4896d5ebaba4497c611bbe9d43abe92d9a1fe83d",
        "NODE_EL_REWARD_VAULT_IMPLEMENTATION": "0x3e4ded42f360c2e6b1251d584085ae1d9aa9cbed18687fac6b6aef8eed1c5ad3",
        "OPERATOR": "0x523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c",
        "OPERATOR_MAX_NAME_LENGTH": "0x59b5f464ec5829246a81f005456c8cb714ee224aea800742e2dae497263e4669",
        "OPERATOR_REWARD_COLLECTOR": "0x5be667ef1f4c6c279e2aa7e62595a1045043db6a43145cb438c6d36e7a3c3ed8",
        "PENALTY_CONTRACT": "0x29384ec8473b541e7a7850226a4d1906a700f14cc394266ee08800ba62dc3af9",
        "PERMISSIONED_NODE_REGISTRY": "0xa4083e7a78dd898def03c51ce199cb4286b8828be4f6f46e04aec61761967471",
        "PERMISSIONED_POOL": "0x602490b12960e59ddb584affd1da6cd5692f4455c1ba0cc4e865af81e111ebe2",
        "PERMISSIONED_SOCIALIZING_POOL": "0x4c9466ca1bf288a7334a7494f09a0acc38ee31628eaf8c68b574b9f0ec22a9c1",
        "PERMISSIONLESS_NODE_REGISTRY": "0x00665c1b06e0667c56a1ca1706b7573435d1b9162c6327b5d0ea1daeb491ad0d",
        "PERMISSIONLESS_POOL": "0x76d62e541b8d573110ca3eb9003e96426f530422a76712d1356f6c6ce50541ca",
        "PERMISSIONLESS_SOCIALIZING_POOL": "0xc5b1a6a0b843563e6a17ca90bc59d2315c523be427d0c9c2ba08d77ced4f46b1",
        "POOL_SELECTOR": "0xdb5d1c2a9350ca010dcdf3953da11a9e8f7c5e2918cdfa65500e84e7fd4fde7d",
        "POOL_UTILS": "0xd7e49a298cb2719de62e5df1024257eed316db6337361b3a30d56a7532404607",
        "PRE_DEPOSIT_SIZE": "0x9b1ae66636378b5626322a52e22518dd40bb04881cf0440ed16a20c0f902b242",
        "REWARD_THRESHOLD": "0x46b41285bb7b8513ce3a9d95cdf6916699fb00b47326e8d3850be1b6186e0349",
        "ROLE_SD_REWARD_APPROVER": "0x809e00a8bf6ea8bf642409acefd6e4645b7257863ada00c0b5b73a79b39ad35c",
        "ROLE_SD_REWARD_ENTRY": "0x0b773b68acd168e22dbb657b74525f5b987df813882933b2d4273dbf2ed848e1",
        "SD": "0x95bf18d68834a11aaae7b73ff6037326f163a81a7b5ea80cba96856ce2284fbd",
        "SD_COLLATERAL": "0x5c00ec259bace293b50174e499c413ca897b4bcb54ed468b7e6bade51c6a9f96",
        "SD_INCENTIVE_CONTROLLER": "0xf2b2ce40acf2de0c782cf3a34ddfe1f1f18b1f0871445156842424b1aab892ff",
        "SD_UTILITY_POOL": "0x26b94d9446e6775a4c9592fb825e2f9b26930b186faaaa3fd1a7a31878756020",
        "SOCIALIZING_POOL_CYCLE_DURATION": "0x3c6dcff840f36f9818a73b67d9d00197362f63687bd52e3c277bd0ffb30dde33",
        "SOCIALIZING_POOL_OPT_IN_COOLING_PERIOD": "0xc54a7590fe6738d7a81f393c1cf5ab3e577c91781037d93a5a9f5ce44f19eb51",
        "STADER_INSURANCE_FUND": "0xe5240448c78dfcff5bda4e4eed69ba9635df15d79da0e8a4cf889217106fa45b",
        "STADER_ORACLE": "0x9f919a2294d86593fbcec81ea71aa683cec51c78771c642f8894ba8f39497052",
        "STADER_TREASURY": "0x8567f5af844d68168987760a7ce1762804b9de703165fc50ce4fa85246016c91",
        "STAKE_POOL_MANAGER": "0x3d88d1233771c5c30791fb6805b7f91424dae1e5a68a57da846ca7ff83c64029",
        "TOTAL_FEE": "0x33271b56873d8abb908de4853f90a8a0ef8829548ec0bf6c298feed3917c50a2",
        "USER_WITHDRAW_MANAGER": "0xf935b8bf66b325637ad32ca875b588849cf4026791b79b4dc20623cd3dd36e20",
        "VALIDATOR_WITHDRAWAL_VAULT_IMPLEMENTATION": "0xbd34382cd421c5250595893a4ed6cdb2125e6be7d5e0a9dbc469de5d583adfcf",
        "VAULT_FACTORY": "0x8d4341681b282735dd0d55670ff8e0ad68a80cbfc2cee847065e9f771470f88f",
        "WITHDRAWN_KEYS_BATCH_SIZE": "0x6f8d0b773ad4970d3e7d47623dc9ce06a1b4fe833bf451d06a47e774f9acaa63"
      },
      "implementationNames": {
        "0x4ABEF2263d5A5ED582FC9A9789a41D85b68d69DB": "TransparentUpgradeableProxy",
        "0x808e8783Ba7e315517952d195E20bC8eDBa7da23": "StaderConfig"
      }
    },
    {
      "name": "USDe",
      "address": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
      "type": "Contract",
      "sourceHashes": [
        "0x4cc9f8f240849f00aef1f736dac783e2323e347f50f857b112d3ae9c407bfa43"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1699979555,
      "sinceBlock": 18571358,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x74fbd8ad78eb7732edc209f83d2dc23f7472a05cdbfd5dfc0f210dad2f967cb3",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "USDe",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "minter": "0xe3490297a08d6fC8Da46Edb7B6142E4F461b62D3",
        "name": "USDe",
        "owner": "0x3B0AAf6e6fCd4a7cEEf8c92C32DFeA9E64dC1862",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "symbol": "USDe",
        "totalSupply": "5304971344505954527790000000"
      },
      "implementationNames": {
        "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3": "USDe"
      }
    },
    {
      "name": "AToken",
      "address": "0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8",
      "type": "Contract",
      "sourceHashes": [
        "0x1bb1eebf940ae6126d47aeb6ef0c3dfd89b3db8892ef36f1e46d456851469561",
        "0x505142a466beaca8f667c084ab2a7c0c72214d9af68e17a49bc66561ce783ac1"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1674806111,
      "sinceBlock": 16496792,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x7EfFD7b47Bfd17e52fB7559d3f924201b9DbfF3d",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "ATOKEN_REVISION": 1,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x95dd139b8dfc106f18b6335b54dc46200ab6f6e03f30aa3fb445346667e89ddc",
        "EIP712_REVISION": "0x31",
        "getIncentivesController": "0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb",
        "name": "Aave Ethereum WETH",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "POOL": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
        "RESERVE_TREASURY_ADDRESS": "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c",
        "scaledTotalSupply": "2593415632985815764729063",
        "symbol": "aEthWETH",
        "totalSupply": "2717393843866892085804857",
        "UNDERLYING_ASSET_ADDRESS": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "implementationNames": {
        "0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8": "InitializableImmutableAdminUpgradeabilityProxy",
        "0x7EfFD7b47Bfd17e52fB7559d3f924201b9DbfF3d": "AToken"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x500180A94cB854e98770872AF4E4BB1dD67Af559",
      "type": "Contract",
      "sourceHashes": [
        "0xa767a51fb38cab5b503e15ab2ce3b7ba88c6a663bf7a79261571d813e3b2da5f"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202"
        }
      ],
      "sinceTimestamp": 1618218216,
      "sinceBlock": 12224337,
      "values": {
        "$immutable": true,
        "owner": "0x7d4d05B1a1E5775a9C6ca248ABBE629B52C1D9D9"
      },
      "implementationNames": {
        "0x500180A94cB854e98770872AF4E4BB1dD67Af559": "ProxyAdmin"
      }
    },
    {
      "name": "PendlePrincipalToken",
      "address": "0x50D2C7992b802Eef16c04FeADAB310f31866a545",
      "type": "Contract",
      "sourceHashes": [
        "0xe7599dbbd1b4d9d7a2cb1262cc8d0b2db2123ae858c45fa712d5afcdfd23d1eb"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1739971391,
      "sinceBlock": 21880685,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "expiry": 1748476800,
        "factory": "0x35A338522a435D46f77Be32C70E215B813D0e3aC",
        "isExpired": true,
        "name": "PT Ethereal eUSDE 29MAY2025",
        "SY": "0x7ac8ca87959b1d5EDfe2df5325A37c304DCea4D0",
        "symbol": "PT-eUSDE-29MAY2025",
        "totalSupply": "9211056969751969884475609",
        "YT": "0x708dD9B344dDc7842f44C7b90492CF0e1E3eb868"
      },
      "implementationNames": {
        "0x50D2C7992b802Eef16c04FeADAB310f31866a545": "PendlePrincipalToken"
      }
    },
    {
      "name": "LinkToken",
      "address": "0x514910771AF9Ca656af840dff83E8264EcF986CA",
      "type": "Contract",
      "sourceHashes": [
        "0xda2d44696c77410a167e5a09506d4676c9cdad2f923e01c8139c7a7814912af1"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1505597189,
      "sinceBlock": 4281611,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "name": "ChainLink Token",
        "symbol": "LINK",
        "totalSupply": "1000000000000000000000000000"
      },
      "implementationNames": {
        "0x514910771AF9Ca656af840dff83E8264EcF986CA": "LinkToken"
      }
    },
    {
      "name": "Executor",
      "address": "0x5300A1a15135EA4dc7aD5a167152C01EFc9b192A",
      "type": "Contract",
      "sourceHashes": [
        "0x855bbd6c58ca4afabd099cd0fa12926ca20fd1820716d5f52dda1ae30a56ae45"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1694513963,
      "sinceBlock": 18119610,
      "values": {
        "$immutable": true,
        "owner": "0xdAbad81aF85554E9ae636395611C58F7eC1aAEc5"
      },
      "implementationNames": {
        "0x5300A1a15135EA4dc7aD5a167152C01EFc9b192A": "Executor"
      }
    },
    {
      "name": "Gsm4626",
      "address": "0x535b2f7C20B9C83d70e519cf9991578eF9816B7B",
      "type": "Contract",
      "sourceHashes": [
        "0x525b22d02f8b39d3432dfaf0061e3d91caa10d282e86ec7abeb4ca11790f6762",
        "0x21b1ec508f1058636635a0e7543f6e04ffce3c846fefe6e16f12ec1586820812"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1738367843,
      "sinceBlock": 21747936,
      "values": {
        "$admin": "0x20004C21E23c44AdfdD118392C914a31A488f64d",
        "$implementation": "0x0a539750a534765ba960af863Cb5c31e34b4c846",
        "$pastUpgrades": [
          [
            "2025-01-31T23:57:23.000Z",
            "0xdad229a53df82e737fa35a8af885318760619edca3000944fcaac738bdbe53ea",
            ["0x0a539750a534765ba960af863Cb5c31e34b4c846"]
          ]
        ],
        "$upgradeCount": 1,
        "BUY_ASSET_WITH_SIG_TYPEHASH": "0xcfb9ac928a9a202b47d70fc2e62c0dade955274336ca821ed60aeb2142af92e6",
        "canSwap": true,
        "CONFIGURATOR_ROLE": "0x3b49a237fe2d18fa4d9642b8a0e065923cceb71b797783b619a030a61d848bf0",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0x4d8b93b7f10b3bbeb412411b755aef1ceaafe020a5225229d87455e5228a30fd",
        "getAccruedFees": 0,
        "getAssetAmountForBuyAsset": [
          [0, 0, 0, 0],
          [0, 0, 0, 0],
          [0, 0, 0, 0],
          [0, 0, 0, 0],
          [0, 0, 0, 0]
        ],
        "getAssetAmountForSellAsset": [
          [0, 0, 0, 0],
          [1, 1000000000000, 1000000000000, 0],
          [1, 1000000000000, 1000000000000, 0],
          [1, 1000000000000, 1000000000000, 0],
          [1, 1000000000000, 1000000000000, 0]
        ],
        "getAvailableLiquidity": 42813979,
        "getAvailableUnderlyingExposure": 24999957186021,
        "getCurrentBacking": ["20393000000000000", 0],
        "getExposureCap": 25000000000000,
        "getFeeStrategy": "0xF46C04B484c4168F7f4F2B4CA58EbBb302083608",
        "getGhoAmountForBuyAsset": [
          [0, 0, 0, 0],
          [1, 2004000000000, 2000000000000, 4000000000],
          [2, 3006000000000, 3000000000000, 6000000000],
          [3, 4008000000000, 4000000000000, 8000000000],
          [4, 5010000000000, 5000000000000, 10000000000]
        ],
        "getGhoAmountForSellAsset": [
          [0, 0, 0, 0],
          [1, 1000000000000, 1000000000000, 0],
          [2, 2000000000000, 2000000000000, 0],
          [3, 3000000000000, 3000000000000, 0],
          [4, 4000000000000, 4000000000000, 0]
        ],
        "getGhoTreasury": "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c",
        "getIsFrozen": false,
        "getIsSeized": false,
        "GHO_TOKEN": "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f",
        "GSM_REVISION": 1,
        "LIQUIDATOR_ROLE": "0x5e17fc5225d4a099df75359ce1f405503ca79498a8dc46a7d583235a0ee45c16",
        "PRICE_STRATEGY": "0x20Be7090711995336A13e24B9EA9e05ac2cdd8C0",
        "SELL_ASSET_WITH_SIG_TYPEHASH": "0xf570a3b94987b56be9e62084f59006353309fa95357dfbc6d3ea78cce6382d13",
        "SWAP_FREEZER_ROLE": "0x6dac4cc0544e34aa1a4ed2862f6de78290e3f18f00fe77179ee8ef34de9dfa24",
        "TOKEN_RESCUER_ROLE": "0xbf63066482b01a20567880b14a2934fecb21c925e6bcc0a0a091c59723fa9c06",
        "UNDERLYING_ASSET": "0x7Bc3485026Ac48b6cf9BaF0A377477Fff5703Af8"
      },
      "errors": {
        "getAssetAmountForBuyAsset": "Processing error occurred.",
        "getAssetAmountForSellAsset": "Processing error occurred.",
        "getGhoAmountForBuyAsset": "Processing error occurred.",
        "getGhoAmountForSellAsset": "Processing error occurred."
      },
      "implementationNames": {
        "0x535b2f7C20B9C83d70e519cf9991578eF9816B7B": "TransparentUpgradeableProxy",
        "0x0a539750a534765ba960af863Cb5c31e34b4c846": "Gsm4626"
      }
    },
    {
      "name": "AaveOracle",
      "address": "0x54586bE62E3c3580375aE3723C145253060Ca0C2",
      "type": "Contract",
      "sourceHashes": [
        "0x2b1df8f8319cc257fe99ade4e2e40a08d0ac81b86839c60846d3653c7512ed63"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1672325447,
      "sinceBlock": 16291123,
      "values": {
        "$immutable": true,
        "ADDRESSES_PROVIDER": "0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e",
        "BASE_CURRENCY": "0x0000000000000000000000000000000000000000",
        "BASE_CURRENCY_UNIT": 100000000,
        "getFallbackOracle": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0x54586bE62E3c3580375aE3723C145253060Ca0C2": "AaveOracle"
      }
    },
    {
      "address": "0x55FE002aefF02F77364de339a1292923A15844B8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x5A459C7E4962c2f32eB5e6a8C91b6EEB5a72a439",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "MiniMeToken",
      "address": "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32",
      "type": "Contract",
      "template": "tokens/Lido/MiniMeToken",
      "sourceHashes": [
        "0x1098670857010f37e15b128a92baa1ccb42e961bd5e02b478a0c69fd8d66eb46"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": true,
        "controller": "0xf73a1260d222f447210581DDf212D915c09a3249",
        "creationBlock": 11473216,
        "decimals": 18,
        "name": "Lido DAO Token",
        "parentSnapShotBlock": 0,
        "parentToken": "0x0000000000000000000000000000000000000000",
        "symbol": "LDO",
        "tokenFactory": "0x909d05F384D0663eD4BE59863815aB43b4f347Ec",
        "totalSupply": "1000000000000000000000000000",
        "transfersEnabled": true,
        "version": "MMT_0.1"
      },
      "implementationNames": {
        "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32": "MiniMeToken"
      }
    },
    {
      "address": "0x5B6122C109B78C6755486966148C1D70a50A47D7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x5e8114643966B7FD7d5CfdD8695FfC5c51fF32c0",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf"
        }
      ]
    },
    {
      "name": "LUSDToken",
      "address": "0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",
      "type": "Contract",
      "sourceHashes": [
        "0x661dca742b39fe8c4265e0ec96c7ee0d958dc3d341cd6f18552ed8a6940d9b4e"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1617611299,
      "sinceBlock": 12178594,
      "values": {
        "$immutable": true,
        "borrowerOperationsAddress": "0x24179CD81c9e782A4096035f7eC97fB8B783e007",
        "decimals": 18,
        "domainSeparator": "0xf85dbb1e9a5845cbb7605972678082c839c02db2df0e2e2eb4977e9744bbcd89",
        "name": "LUSD Stablecoin",
        "permitTypeHash": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "stabilityPoolAddress": "0x66017D22b0f8556afDd19FC67041899Eb65a21bb",
        "symbol": "LUSD",
        "totalSupply": "41036045178918266196861589",
        "troveManagerAddress": "0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2",
        "version": "1"
      },
      "implementationNames": {
        "0x5f98805A4E8be255a32880FDeC7F6728C6568bA0": "LUSDToken"
      }
    },
    {
      "address": "0x601c97ed567253bf09A51998D53C5AA73290bd73",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c",
          "description": "blacklist addresses, freezing any interactions with the USDC token for them."
        }
      ]
    },
    {
      "name": "BridgeLogic",
      "address": "0x621Ef86D8A5C693a06295BC288B95C12D4CE4994",
      "type": "Contract",
      "sourceHashes": [
        "0x358bc1d685effd1a7336cdb9b16d8cabbedcb210fcfa0dfc2203691f991608ec"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1738757723,
      "sinceBlock": 21780228,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x621Ef86D8A5C693a06295BC288B95C12D4CE4994": "BridgeLogic"
      }
    },
    {
      "name": "BorrowLogic",
      "address": "0x62325c94E1c49dcDb5937726aB5D8A4c37bCAd36",
      "type": "Contract",
      "sourceHashes": [
        "0x5eae869a82f9d5a39105bd6ea1b08bbbda2a6578a242fdb8c9c69b5ff9b23b73"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1738757723,
      "sinceBlock": 21780228,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x62325c94E1c49dcDb5937726aB5D8A4c37bCAd36": "BorrowLogic"
      }
    },
    {
      "name": "PoolConfiguratorInstance",
      "address": "0x64b761D848206f447Fe2dd461b0c635Ec39EbB27",
      "type": "Contract",
      "sourceHashes": [
        "0x1bb1eebf940ae6126d47aeb6ef0c3dfd89b3db8892ef36f1e46d456851469561",
        "0x22f94bd9cb08f20703d3c29edda8d8503bb333c8e20a353454b0710b4d911683"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1672325531,
      "sinceBlock": 16291130,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0xE5e48Ad1F9D1A894188b483DcF91f4FaD6AbA43b",
        "$pastUpgrades": [
          [
            "2024-07-27T15:06:35.000Z",
            "0x65b6eb75203176f6ee38823219f4e46c0d1c56230dfb82d98964c089fc3ef174",
            ["0x419226e0Ad27f3B2019123f7246a364622b018e5"]
          ],
          [
            "2024-10-08T12:52:23.000Z",
            "0xefcf3c57b91d919da3f2e7e8d6af041d9cb5c1a4b58e913ebc9aaeba238947eb",
            ["0x4816b2C2895f97fB918f1aE7Da403750a0eE372e"]
          ],
          [
            "2025-02-24T15:23:59.000Z",
            "0x8e51d324a562bf6ad767f10bff457e310d5b89f76482bc68c05e977ad4c5100b",
            ["0xE5e48Ad1F9D1A894188b483DcF91f4FaD6AbA43b"]
          ]
        ],
        "$upgradeCount": 3,
        "CONFIGURATOR_REVISION": 5,
        "getConfiguratorLogic": "0x09e88e877B39D883BAFd46b65E7B06CC56963041",
        "MAX_GRACE_PERIOD": 14400
      },
      "implementationNames": {
        "0x64b761D848206f447Fe2dd461b0c635Ec39EbB27": "InitializableImmutableAdminUpgradeabilityProxy",
        "0xE5e48Ad1F9D1A894188b483DcF91f4FaD6AbA43b": "PoolConfiguratorInstance"
      }
    },
    {
      "name": "BoringVault",
      "address": "0x657e8C867D8B37dCC18fA4Caead9C45EB088C642",
      "type": "Contract",
      "sourceHashes": [
        "0x2a286b779dc9dcc7de483c1818d6ccc1d36599b36069bb7984f6b6652447f8b0"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1723597307,
      "sinceBlock": 20523455,
      "values": {
        "$immutable": true,
        "authority": "0x6889E57BcA038C28520C0B047a75e567502ea5F6",
        "decimals": 8,
        "DOMAIN_SEPARATOR": "0xbb2ffa1c3da50ec3e68d793c2c1506162025e4f7eff6ed9aeaed96a117c7c908",
        "hook": "0x6Ee3aaCcf9f2321E49063C4F8da775DdBd407268",
        "name": "ether.fi BTC",
        "owner": "0x0000000000000000000000000000000000000000",
        "symbol": "eBTC",
        "totalSupply": 322708815458
      },
      "implementationNames": {
        "0x657e8C867D8B37dCC18fA4Caead9C45EB088C642": "BoringVault"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x65bb797c2B9830d891D87288F029ed8dACc19705",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1647498793,
      "sinceBlock": 14402408,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x2E1078e128e8AA6A70eC8d1B17A79Fc4B457d437",
          "0x565cFd7224bbc2a81a6e2a1464892ecB27efB070",
          "0x1D7C6783328C145393e84fb47a7f7C548f5Ee28d",
          "0x79e2b9C1F6C9ed1375C93AaF139e6C4537f48523",
          "0x7C8D1Db01130acEEc5fF892c99a18c4b4BAdC326",
          "0xf02CC4dc84aC59Bd6089BAddcEB9d4Ef3AEFb0f0"
        ],
        "$threshold": 3,
        "domainSeparator": "0x10cd04a3b7d65ccac18caff2fefc4c51c80b1d61ab414834e49fc8fbdd62f6be",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 6 (50%)",
        "nonce": 960,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x65bb797c2B9830d891D87288F029ed8dACc19705": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "StabilityPool",
      "address": "0x66017D22b0f8556afDd19FC67041899Eb65a21bb",
      "type": "Contract",
      "sourceHashes": [
        "0x98b8604de4b60664e38f64b0bcd7464a5097cfd06024016bd644a119d466a1c2"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1617611020,
      "sinceBlock": 12178565,
      "values": {
        "_100pct": "1000000000000000000",
        "$immutable": true,
        "activePool": "0xDf9Eb223bAFBE5c5271415C75aeCD68C21fE3D7F",
        "borrowerOperations": "0x24179CD81c9e782A4096035f7eC97fB8B783e007",
        "BORROWING_FEE_FLOOR": 5000000000000000,
        "CCR": "1500000000000000000",
        "communityIssuance": "0xD8c9D9071123a059C6E0A945cF0e0c82b508d816",
        "currentEpoch": 0,
        "currentScale": 0,
        "DECIMAL_PRECISION": "1000000000000000000",
        "defaultPool": "0x0000000000000000000000000000000000000000",
        "getETH": "895076003486606739280",
        "getTotalLUSDDeposits": "18725087904342223219567388",
        "isOwner": false,
        "lastETHError_Offset": "1539698802672450354563460",
        "lastLQTYError": "9685794758745427533630085",
        "lastLUSDLossError_Offset": "22110305068774313801222717",
        "LUSD_GAS_COMPENSATION": "200000000000000000000",
        "lusdToken": "0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",
        "MCR": "1100000000000000000",
        "MIN_NET_DEBT": "1800000000000000000000",
        "NAME": "StabilityPool",
        "owner": "0x0000000000000000000000000000000000000000",
        "P": "119046268093119377",
        "PERCENT_DIVISOR": 200,
        "priceFeed": "0x4c517D4e2C851CA76d7eC94B805269Df0f2201De",
        "SCALE_FACTOR": 1000000000,
        "sortedTroves": "0x8FdD3fbFEb32b28fb73555518f8b361bCeA741A6",
        "troveManager": "0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2"
      },
      "errors": {
        "getEntireSystemColl": "Processing error occurred.",
        "getEntireSystemDebt": "Processing error occurred."
      },
      "implementationNames": {
        "0x66017D22b0f8556afDd19FC67041899Eb65a21bb": "StabilityPool"
      }
    },
    {
      "name": "Endpoint",
      "address": "0x66A71Dcef29A0fFBDBE3c6a460a3B5BC225Cd675",
      "type": "Contract",
      "sourceHashes": [
        "0x945c3299d0cf62b9ea7a77d6328295d54327299d6a153e1e7b48d85fa9b77215"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1647316591,
      "sinceBlock": 14388880,
      "values": {
        "$immutable": true,
        "BLOCK_VERSION": 65535,
        "chainId": 1,
        "DEFAULT_VERSION": 0,
        "defaultReceiveLibraryAddress": "0x4D73AdB72bC3DD368966edD0f0b2148401A178E2",
        "defaultReceiveVersion": 2,
        "defaultSendLibrary": "0x4D73AdB72bC3DD368966edD0f0b2148401A178E2",
        "defaultSendVersion": 2,
        "getChainId": 1,
        "isReceivingPayload": false,
        "isSendingPayload": false,
        "latestVersion": 5,
        "owner": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92"
      },
      "implementationNames": {
        "0x66A71Dcef29A0fFBDBE3c6a460a3B5BC225Cd675": "Endpoint"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x67B12264Ca3e0037Fc7E22F2457b42643a04C86e",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x68f689a23d3badd91255602a1eb13d4789baedc16d904c3103244642fc78ca8f"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x4ABEF2263d5A5ED582FC9A9789a41D85b68d69DB"
        },
        {
          "permission": "upgrade",
          "from": "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b"
        }
      ],
      "sinceTimestamp": 1685990279,
      "sinceBlock": 17416136,
      "values": {
        "$immutable": true,
        "owner": "0x1112D5C55670Cb5144BF36114C20a122908068B9"
      },
      "implementationNames": {
        "0x67B12264Ca3e0037Fc7E22F2457b42643a04C86e": "ProxyAdmin"
      }
    },
    {
      "name": "RolesAuthority",
      "address": "0x6889E57BcA038C28520C0B047a75e567502ea5F6",
      "type": "Contract",
      "sourceHashes": [
        "0x30069940b71fe65597cc5f6c89649ccd5f4f92c5a774a06974f85aa4f727f697"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1723597307,
      "sinceBlock": 20523455,
      "values": {
        "$immutable": true,
        "authority": "0x0000000000000000000000000000000000000000",
        "owner": "0x70a64840A353c58f63333570f53dba0948bEcE3d"
      },
      "implementationNames": {
        "0x6889E57BcA038C28520C0B047a75e567502ea5F6": "RolesAuthority"
      }
    },
    {
      "name": "Dai",
      "address": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
      "type": "Contract",
      "sourceHashes": [
        "0x9b792a0d5af6c0a88429413cb318629d76df165fef71bda23764c7f730ce6a70"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1573672677,
      "sinceBlock": 8928158,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xdbb8cf42e1ecb028be3f3dbc922e1d878b963f411dc388ced501601c60f7c6f7",
        "name": "Dai Stablecoin",
        "PERMIT_TYPEHASH": "0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb",
        "symbol": "DAI",
        "totalSupply": "3598806978621402996234575439",
        "version": "1"
      },
      "implementationNames": {
        "0x6B175474E89094C44Da98b954EedeAC495271d0F": "Dai"
      }
    },
    {
      "name": "PYUSD",
      "address": "0x6c3ea9036406852006290770BEdFcAbA0e23A0e8",
      "type": "Contract",
      "sourceHashes": [
        "0x7cc0fb4f4893cc8e36ad690609b0f963417b7ff77210b178db891f78063d0f19",
        "0x35f5128b5de569c0161c2b3ac66b2a86c888341b45f1aad3b76cebe720557b6e"
      ],
      "proxyType": "ZeppelinOS proxy",
      "sinceTimestamp": 1667870087,
      "sinceBlock": 15921958,
      "values": {
        "$admin": "0x137Dcd97872dE27a4d3bf36A4643c5e18FA40713",
        "$immutable": false,
        "$implementation": "0x7302eA4E51B041b691D1F3458fA7D36560f90708",
        "$pastUpgrades": [
          [
            "2023-01-23T21:03:11.000Z",
            "0xc2ec3bd3e4ac3c7fab3780ebc6dedbd79133a381ed6fae5fd556c13bf3c868f8",
            ["0xa5324B1a3638E50f5E561f016f3D64Ddc277E36a"]
          ],
          [
            "2023-08-03T21:56:23.000Z",
            "0x34dcf26b3ad5a982f73617a8199c771ef86f8943482ae1e37d435afda60f6b9d",
            ["0xcaBB6024b77D50E0250b750C1f1Dc049E7eD6020"]
          ],
          [
            "2023-08-07T11:08:47.000Z",
            "0xaac320d81132a42faa0f96b8c1db300a1e81c9deace0620b7ed553e351d8e26f",
            ["0xe17b8aDF8E46b15f3F9aB4Bb9E3b6e31Db09126E"]
          ],
          [
            "2024-11-04T19:48:11.000Z",
            "0x1f8d357d372a0dcd8f6ee962956828fe6458699ea9b55eca0d630b8bd9dd277a",
            ["0x8EcaE0B0402E29694B3Af35d5943D4631Ee568dC"]
          ],
          [
            "2024-11-07T21:35:59.000Z",
            "0x6fdf268bc7781b8693bdd465c8a9cd9a874f035a3035644be2aceb5b40952558",
            ["0x7302eA4E51B041b691D1F3458fA7D36560f90708"]
          ]
        ],
        "$upgradeCount": 5,
        "ASSET_PROTECTION_ROLE": "0xe3e4f9d7569515307c0cdec302af069a93c9e33f325269bac70e6e22465a9796",
        "assetProtectionRoleDeprecated": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
        "betaDelegateWhitelisterDeprecated": "0x0000000000000000000000000000000000000000",
        "CANCEL_AUTHORIZATION_TYPEHASH": "0x158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a1597429",
        "decimals": 6,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdmin": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
        "defaultAdminDelay": 10800,
        "defaultAdminDelayIncreaseWait": 432000,
        "DOMAIN_SEPARATOR": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EIP712_DOMAIN_HASH_DEPRECATED": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "name": "PayPal USD",
        "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
        "ownerDeprecated": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
        "PAUSE_ROLE": "0x139c2898040ef16910dc9f44dc697df79363da767d8bc92f2e310312b816e46d",
        "paused": false,
        "pendingDefaultAdmin": {
          "newAdmin": "0x0000000000000000000000000000000000000000",
          "schedule": 0
        },
        "pendingDefaultAdminDelay": { "newDelay": 0, "schedule": 0 },
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "proposedOwnerDeprecated": "0x0000000000000000000000000000000000000000",
        "RECEIVE_WITH_AUTHORIZATION_TYPEHASH": "0xd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de8",
        "supplyControl": "0x31d9bDEa6F104606C954f8FE6ba614F1BD347Ec3",
        "supplyControllerDeprecated": "0xE25a329d385f77df5D4eD56265babe2b99A5436e",
        "symbol": "PYUSD",
        "totalSupply": 685651496505670,
        "TRANSFER_WITH_AUTHORIZATION_TYPEHASH": "0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267"
      },
      "errors": {
        "admin": "Processing error occurred.",
        "implementation": "Processing error occurred."
      },
      "implementationNames": {
        "0x6c3ea9036406852006290770BEdFcAbA0e23A0e8": "AdminUpgradeabilityProxy",
        "0x7302eA4E51B041b691D1F3458fA7D36560f90708": "PYUSD"
      }
    },
    {
      "name": "LayerZeroTellerWithRateLimiting",
      "address": "0x6Ee3aaCcf9f2321E49063C4F8da775DdBd407268",
      "type": "Contract",
      "sourceHashes": [
        "0x2de0177ec2dd0d906c40bfcf69e0405ec4f72c95bd8cd151da0f9122f795f9d8"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1733798651,
      "sinceBlock": 21369203,
      "values": {
        "$immutable": true,
        "accountant": "0x1b293DC39F94157fA0D1D36d7e0090C8B8B8c13F",
        "authority": "0x6889E57BcA038C28520C0B047a75e567502ea5F6",
        "composeMsgSender": "0x6Ee3aaCcf9f2321E49063C4F8da775DdBd407268",
        "depositNonce": 3191,
        "endpoint": "0x1a44076050125825900e736c501f859c50fE728c",
        "isPaused": false,
        "nativeWrapper": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 1 },
        "owner": "0x0000000000000000000000000000000000000000",
        "publicDepositHistory": [
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "shareLockPeriod": 0,
        "vault": "0x657e8C867D8B37dCC18fA4Caead9C45EB088C642"
      },
      "errors": { "publicDepositHistory": "Processing error occurred." },
      "implementationNames": {
        "0x6Ee3aaCcf9f2321E49063C4F8da775DdBd407268": "LayerZeroTellerWithRateLimiting"
      }
    },
    {
      "name": "MkrAuthority",
      "address": "0x6eEB68B2C7A918f36B78E2DB80dcF279236DDFb8",
      "type": "Contract",
      "sourceHashes": [
        "0xdc5897ec58a78a129325aa7dced1ebe52dbf6997ebccfd27773570bac5d83f91"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1578673615,
      "sinceBlock": 9254130,
      "values": {
        "$immutable": true,
        "root": "0xBE8E3e3618f7474F8cB1d074A26afFef007E98FB"
      },
      "implementationNames": {
        "0x6eEB68B2C7A918f36B78E2DB80dcF279236DDFb8": "MkrAuthority"
      }
    },
    {
      "name": "PendleYieldToken",
      "address": "0x708dD9B344dDc7842f44C7b90492CF0e1E3eb868",
      "type": "Contract",
      "sourceHashes": [
        "0xcf55fc48f1ca357193e2bc9ddc6f3b0004d43bc720d43010b228dc0c9643f496"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1739971391,
      "sinceBlock": 21880685,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "doCacheIndexSameBlock": true,
        "expiry": 1748476800,
        "factory": "0x35A338522a435D46f77Be32C70E215B813D0e3aC",
        "getPostExpiryData": {
          "firstPYIndex": "1000000000000000000",
          "totalSyInterestForTreasury": 0,
          "firstRewardIndexes": [],
          "userRewardOwed": []
        },
        "getRewardTokens": [],
        "isExpired": true,
        "name": "YT Ethereal eUSDE 29MAY2025",
        "postExpiry": {
          "firstPYIndex": "1000000000000000000",
          "totalSyInterestForTreasury": 0
        },
        "PT": "0x50D2C7992b802Eef16c04FeADAB310f31866a545",
        "pyIndexLastUpdatedBlock": 22834341,
        "pyIndexStored": "1000000000000000000",
        "SY": "0x7ac8ca87959b1d5EDfe2df5325A37c304DCea4D0",
        "symbol": "YT-eUSDE-29MAY2025",
        "syReserve": "9211056969751969884475609",
        "totalSupply": "749786964672577600151853351"
      },
      "implementationNames": {
        "0x708dD9B344dDc7842f44C7b90492CF0e1E3eb868": "PendleYieldToken"
      }
    },
    {
      "address": "0x716D4D9EfC15Bbe2dd81D2DA31DCcC4e2c69cCBB",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "VariableDebtToken",
      "address": "0x72E95b8931767C79bA4EeE721354d6E99a61D004",
      "type": "Contract",
      "sourceHashes": [
        "0x1bb1eebf940ae6126d47aeb6ef0c3dfd89b3db8892ef36f1e46d456851469561",
        "0xf024b6fd41fa1721e8520e4218dc9bc20d93db9d7159481d53d2feb9b20d0c42"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1674806231,
      "sinceBlock": 16496802,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0xaC725CB59D16C81061BDeA61041a8A5e73DA9EC6",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "DEBT_TOKEN_REVISION": 1,
        "decimals": 6,
        "DELEGATION_WITH_SIG_TYPEHASH": "0x323db0410fecc107e39e2af5908671f4c8d106123b35a51501bb805c5fa36aa0",
        "DOMAIN_SEPARATOR": "0xf8fb626be3aa6432525428516a0cd3cab8df193bdf80858d7406729fc921d5d6",
        "EIP712_REVISION": "0x31",
        "getIncentivesController": "0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb",
        "name": "Aave Ethereum Variable Debt USDC",
        "POOL": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
        "scaledTotalSupply": 2102012258368741,
        "symbol": "variableDebtEthUSDC",
        "totalSupply": 2478868997432443,
        "UNDERLYING_ASSET_ADDRESS": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
      },
      "implementationNames": {
        "0x72E95b8931767C79bA4EeE721354d6E99a61D004": "InitializableImmutableAdminUpgradeabilityProxy",
        "0xaC725CB59D16C81061BDeA61041a8A5e73DA9EC6": "VariableDebtToken"
      }
    },
    {
      "name": "PendleYieldToken",
      "address": "0x733Ee9Ba88f16023146EbC965b7A1Da18a322464",
      "type": "Contract",
      "sourceHashes": [
        "0xcf55fc48f1ca357193e2bc9ddc6f3b0004d43bc720d43010b228dc0c9643f496"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1739967671,
      "sinceBlock": 21880377,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "doCacheIndexSameBlock": true,
        "expiry": 1753920000,
        "factory": "0x35A338522a435D46f77Be32C70E215B813D0e3aC",
        "getRewardTokens": [],
        "isExpired": false,
        "name": "YT Ethena USDe 31JUL2025",
        "postExpiry": { "firstPYIndex": 0, "totalSyInterestForTreasury": 0 },
        "PT": "0x917459337CaAC939D41d7493B3999f571D20D667",
        "pyIndexLastUpdatedBlock": 22833454,
        "pyIndexStored": "1000000000000000000",
        "SY": "0xb47CBF6697A6518222c7Af4098A43AEFe2739c8c",
        "symbol": "YT-USDe-31JUL2025",
        "syReserve": "229215858161350736015378941",
        "totalSupply": "229215858161350736015378941"
      },
      "errors": { "getPostExpiryData": "Processing error occurred." },
      "implementationNames": {
        "0x733Ee9Ba88f16023146EbC965b7A1Da18a322464": "PendleYieldToken"
      }
    },
    {
      "name": "PendleERC4626SYV2",
      "address": "0x7ac8ca87959b1d5EDfe2df5325A37c304DCea4D0",
      "type": "Contract",
      "sourceHashes": [
        "0xde0bf5a6fd75ea781af0fdd675fd82c466b186b4e5952dc744f1f9a27e99d866"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1739971391,
      "sinceBlock": 21880685,
      "values": {
        "$immutable": true,
        "asset": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
        "assetInfo": {
          "assetType": 0,
          "assetAddress": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
          "assetDecimals": 18
        },
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xde30ee1f51f7c86c05dd3fb6884aa6057f70270a68bc40b844f64a532b900895",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "SY Ethereal eUSDE",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x7ac8ca87959b1d5EDfe2df5325A37c304DCea4D0",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "exchangeRate": "1000000000000000000",
        "getRewardTokens": [],
        "getTokensIn": [
          "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
          "0x90D2af7d622ca3141efA4d8f1F24d86E5974Cc8F"
        ],
        "getTokensOut": [
          "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
          "0x90D2af7d622ca3141efA4d8f1F24d86E5974Cc8F"
        ],
        "name": "SY Ethereal eUSDE",
        "owner": "0x2aD631F72fB16d91c4953A7f4260A97C2fE2f31e",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "rewardIndexesStored": [],
        "symbol": "SY-eUSDE",
        "totalSupply": "561101503657383918884856536",
        "yieldToken": "0x90D2af7d622ca3141efA4d8f1F24d86E5974Cc8F"
      },
      "implementationNames": {
        "0x7ac8ca87959b1d5EDfe2df5325A37c304DCea4D0": "PendleERC4626SYV2"
      }
    },
    {
      "name": "DefaultExecutor",
      "address": "0x7d4d05B1a1E5775a9C6ca248ABBE629B52C1D9D9",
      "type": "Contract",
      "sourceHashes": [
        "0x23411c92057984ac7259d585a98f4f8227a4926d910cfff3221a68cda10842b4"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1650214072,
      "sinceBlock": 14603912,
      "values": {
        "$immutable": true,
        "BPS": 10000,
        "getAdmin": "0x7Ec8FcC26bE7e9E85B57E73083E5Fe0550d8A7fE",
        "getDelay": 604800,
        "getPendingAdmin": "0x0000000000000000000000000000000000000000",
        "GRACE_PERIOD": 604800,
        "MAX_VOTING_OPTIONS": 8,
        "MAXIMUM_DELAY": 1209600,
        "MIN_VOTING_DURATION": 604800,
        "MINIMUM_DELAY": 86400,
        "MINIMUM_QUORUM": 2000,
        "NO_INDEX": 1,
        "VOTE_DIFFERENTIAL": 1500,
        "YES_INDEX": 0
      },
      "implementationNames": {
        "0x7d4d05B1a1E5775a9C6ca248ABBE629B52C1D9D9": "DefaultExecutor"
      }
    },
    {
      "name": "wstETH_tokenContract",
      "address": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
      "type": "Contract",
      "template": "tokens/Lido/wstETH",
      "sourceHashes": [
        "0x6b938c3d38678ebb00f3860def4bdf9d5d8ab7008a6d598cc109fdf7a6c34e0e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["tokensPerStEth", "stEthPerToken", "totalSupply"],
      "sinceTimestamp": 1613752640,
      "sinceBlock": 11888477,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xd4a8ff90a402dc7d4fcbf60f5488291263c743ccff180e139f47d139cedfd5fe",
        "name": "Wrapped liquid staked Ether 2.0",
        "stETH": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "stEthPerToken": "1207095957138358547",
        "symbol": "wstETH",
        "tokensPerStEth": "828434553265079818",
        "totalSupply": "3382870948537509920206568"
      },
      "implementationNames": {
        "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0": "WstETH"
      }
    },
    {
      "name": "AaveTokenV3",
      "address": "0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",
      "type": "Contract",
      "sourceHashes": [
        "0x5e3d09f8089d63a7a6d8546086c617af3d5dd46af7590b5ef30cc4ca39754dda",
        "0x509e86898aa84ec658498269baeebe9c3b49761e5e2b164d3c8700efea94c87b"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1600970788,
      "sinceBlock": 10926829,
      "values": {
        "$admin": "0x86C3FfeE349A7cFf7cA88C449717B1b133bfb517",
        "$implementation": "0x5D4Aa78B08Bc7C530e21bf7447988b1Be7991322",
        "$pastUpgrades": [
          [
            "2020-10-02T21:03:37.000Z",
            "0xb505725d0d622207af8ad6bfbd2f9a5031795fe62de9163d54173fbfbbe655e4",
            ["0xEA86074fdAC85E6a605cd418668C63d2716cdfBc"]
          ],
          [
            "2020-12-14T12:50:46.000Z",
            "0x558fa06a670098a995ad9b8c5496d135a8319b65fd9aad399d87d9f64cc62006",
            ["0xC13eac3B4F9EED480045113B7af00F7B5655Ece8"]
          ],
          [
            "2023-03-18T04:39:23.000Z",
            "0x36cee31ee3406355358825b5731c11f9f35494bce893bf2c36d17235e9256f92",
            ["0x96F68837877fd0414B55050c9e794AECdBcfCA59"]
          ],
          [
            "2023-12-26T14:53:35.000Z",
            "0x338149cde814df04daac6d7225c2c71bc09848868fb804691b510d211f2d3457",
            ["0x5D4Aa78B08Bc7C530e21bf7447988b1Be7991322"]
          ]
        ],
        "$upgradeCount": 4,
        "decimals": 18,
        "DELEGATE_BY_TYPE_TYPEHASH": "0x6e77642f8f60cdece0498bfeeb2f06ccfef0e8f86d28a1b6255c5e48f1d72a03",
        "DELEGATE_TYPEHASH": "0xd46e8b93b5190df6403875402a5c13897b72d2a576da5d1bfea20a63638d216e",
        "DOMAIN_SEPARATOR": "0x3164404b05fe2af07131d621d03271b4ed40bef429770f09f62624dcca86b9d5",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "Aave token V3",
          "version": "2",
          "chainId": 1,
          "verifyingContract": "0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "name": "Aave Token",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "POWER_SCALE_FACTOR": 10000000000,
        "REVISION": 4,
        "symbol": "AAVE",
        "totalSupply": "16000000000000000000000000"
      },
      "implementationNames": {
        "0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9": "InitializableAdminUpgradeabilityProxy",
        "0x5D4Aa78B08Bc7C530e21bf7447988b1Be7991322": "AaveTokenV3"
      }
    },
    {
      "name": "USDeSilo",
      "address": "0x7FC7c91D556B400AFa565013E3F32055a0713425",
      "type": "Contract",
      "sourceHashes": [
        "0xd0f6d244d468cc18924cb845e39a983ce8b636b6541d201b5995f193383777ff"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1699979567,
      "sinceBlock": 18571359,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x7FC7c91D556B400AFa565013E3F32055a0713425": "USDeSilo"
      }
    },
    {
      "address": "0x807a96288A1A408dBC13DE2b1d087d10356395d2",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
        }
      ]
    },
    {
      "name": "RewardsController",
      "address": "0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb",
      "type": "Contract",
      "sourceHashes": [
        "0x1bb1eebf940ae6126d47aeb6ef0c3dfd89b3db8892ef36f1e46d456851469561",
        "0xd5e088497d2b807ae58065053815bbad2f348c7364957d55de83bea5086e269f"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1672325603,
      "sinceBlock": 16291136,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0xE7B67F44eA304DD7f6d215b13686637ff64CD2B2",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "EMISSION_MANAGER": "0x223d844fc4B006D67c0cDbd39371A9F73f69d974",
        "getEmissionManager": "0x223d844fc4B006D67c0cDbd39371A9F73f69d974",
        "getRewardsList": [
          "0x30D20208d987713f46DFD34EF128Bb16C404D10f",
          "0xfA1fDbBD71B0aA16162D76914d69cD8CB3Ef92da",
          "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
          "0x32a6268f9Ba3642Dda7892aDd74f1D34469A4259",
          "0xC035a7cf15375cE2706766804551791aD035E0C2"
        ],
        "REVISION": 1
      },
      "implementationNames": {
        "0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb": "InitializableImmutableAdminUpgradeabilityProxy",
        "0xE7B67F44eA304DD7f6d215b13686637ff64CD2B2": "RewardsController"
      }
    },
    {
      "name": "LBTC",
      "address": "0x8236a87084f8B84306f72007F36F2618A5634494",
      "type": "Contract",
      "sourceHashes": [
        "0x8c407edc4ac1fa1cea2c45903e2cf0158906a2ff39fc2eb92aca3ca9f0d43ed8",
        "0x12b6ec0594403302deff2f0157d0c8abd95ef26f5d778aee84c7b030fc915f2a"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1715936519,
      "sinceBlock": 19888667,
      "values": {
        "$admin": "0xbae061C73876952aa2C5e483B74DfA785425f879",
        "$implementation": "0xA1Bc65eCf8BC7B2FAA22c53bcC49b0376Da3845A",
        "$pastUpgrades": [
          [
            "2024-05-17T09:01:59.000Z",
            "0xf5cccb27295295cb2655bdcdea55a2aaf855272c578a91e2f0df55a223d3ea8b",
            ["0x12364C9d095a2A43ABb71b0d8313663Ff0348Eea"]
          ],
          [
            "2024-05-28T09:44:23.000Z",
            "0xb01f4eab6b060330cf6b263a33fd63ebfae94ab9629f48114214397759165058",
            ["0xA1A961CE40C9bF5c255449194A97b85439bC0122"]
          ],
          [
            "2024-06-28T16:30:35.000Z",
            "0xb6d8117ff6fdaf283f425dcfd9977c41540b69179a27d4eda8516a797e7eb3a7",
            ["0x80A23cB6eCEDa270889Eb165C41f55bcd300053c"]
          ],
          [
            "2024-08-20T17:20:11.000Z",
            "0xd11135823e881a91ebd07e0e5008d831d2bdd47140f1410742e285156acc45c0",
            ["0x4CBD8802465F690e7637454783955fA8E6D0c4bc"]
          ],
          [
            "2025-01-09T12:38:11.000Z",
            "0x2b8d73c1e13444c78ebbd2004eb0872dfa704a986d14b3c4ce553b178f81ab28",
            ["0xA1Bc65eCf8BC7B2FAA22c53bcC49b0376Da3845A"]
          ]
        ],
        "$upgradeCount": 5,
        "Bascule": "0xc750eCAC7250E0D18ecE2C7a5F130E3A765dc260",
        "consortium": "0xdad58DfA5c1a7a34419AFdBE1f0d610efeea95E4",
        "decimals": 8,
        "DOMAIN_SEPARATOR": "0x2c437c69596d3cb0d046c1b65cd31dee6005447683107eb67b1cf385d850284f",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "Lombard Staked Bitcoin",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x8236a87084f8B84306f72007F36F2618A5634494",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "getBurnCommission": 10000,
        "getDustFeeRate": 3000,
        "getMintFee": 1781,
        "getTreasury": "0x251a604E8E8f6906d60f8dedC5aAeb8CD38F4892",
        "name": "Lombard Staked Bitcoin",
        "operator": "0xCd1b5b2E6C1ff8b606cF4B5731e2f3361474c01b",
        "owner": "0x055E84e7FE8955E2781010B866f10Ef6E1E77e59",
        "paused": false,
        "pauser": "0x32B8AE4eE1401E726aF0BC154D2165D0592584c4",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "symbol": "LBTC",
        "totalSupply": 1455457227725
      },
      "implementationNames": {
        "0x8236a87084f8B84306f72007F36F2618A5634494": "TransparentUpgradeableProxy",
        "0xA1Bc65eCf8BC7B2FAA22c53bcC49b0376Da3845A": "LBTC"
      }
    },
    {
      "name": "StablecoinUpgradeable",
      "address": "0x8292Bb45bf1Ee4d140127049757C2E0fF06317eD",
      "type": "Contract",
      "sourceHashes": [
        "0x7264d156b435b3795d4766cec6dfacc5c8a6a253fa1d04d4314d91d36cbdf0c4",
        "0xbb77dbf292957c6ac2babba2f3672be3fd05932588833a9e11b1535a111992ca"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1723218419,
      "sinceBlock": 20492031,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0xCfd748B9De538c9f5b1805e8db9e1d4671f7F2ec",
        "$pastUpgrades": [
          [
            "2024-08-09T15:46:59.000Z",
            "0x811c963004b19c2e3724850cda6bffd7cab7ff8f34d5670f86b51a9e1390327d",
            ["0xCfd748B9De538c9f5b1805e8db9e1d4671f7F2ec"]
          ]
        ],
        "$upgradeCount": 1,
        "BURNER_ROLE": "0x9667e80708b6eeeb0053fa0cca44e028ff548e2a9f029edfeac87c118b08b7c8",
        "CLAWBACKER_ROLE": "0x715bacafb7a853b9b91b59ae724920a9eb0c006c5b318ac393fa1bc8974edd98",
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getImplementation": "0xCfd748B9De538c9f5b1805e8db9e1d4671f7F2ec",
        "MINTER_ROLE": "0xf0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9",
        "name": "RLUSD",
        "paused": false,
        "PAUSER_ROLE": "0x539440820030c4994db4e31b6b800deafd503688728f932addfe7a410515c14c",
        "symbol": "RLUSD",
        "totalSupply": "403338227550000000000000000",
        "UPGRADE_INTERFACE_VERSION": "5.0.0",
        "UPGRADER_ROLE": "0xa615a8afb6fffcb8c6809ac0997b5c9c12b8cc97651150f14c8f6203168cff4c"
      },
      "errors": { "proxiableUUID": "Processing error occurred." },
      "implementationNames": {
        "0x8292Bb45bf1Ee4d140127049757C2E0fF06317eD": "StablecoinProxy",
        "0xCfd748B9De538c9f5b1805e8db9e1d4671f7F2ec": "StablecoinUpgradeable"
      }
    },
    {
      "name": "SavingsDai",
      "address": "0x83F20F44975D03b1b09e64809B757c47f942BEeA",
      "type": "Contract",
      "sourceHashes": [
        "0xfb3c495901c8e9fe273b6a4fcab6d3ba1f6589e9be837dc1393bc7262e3c223a"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1673977931,
      "sinceBlock": 16428133,
      "values": {
        "$immutable": true,
        "asset": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "convertToAssets": [0, 1, 2, 3, 4],
        "convertToShares": [0, 0, 1, 2, 3],
        "dai": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "daiJoin": "0x9759A6Ac90977b93B58547b4A71c78317f391A28",
        "decimals": 18,
        "deploymentChainId": 1,
        "DOMAIN_SEPARATOR": "0xb9b66c6658faaf7d181a8532a21ea61d221439b542335af9f2d4b741965a5e2c",
        "name": "Savings Dai",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "pot": "0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7",
        "previewDeposit": [0, 0, 1, 2, 3],
        "previewMint": [0, 2, 3, 4, 5],
        "previewRedeem": [0, 1, 2, 3, 4],
        "previewWithdraw": [0, 1, 2, 3, 4],
        "symbol": "sDAI",
        "totalAssets": "487648779227715443396284467",
        "totalSupply": "419948074133481849150524328",
        "vat": "0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B",
        "version": "1"
      },
      "errors": {
        "convertToAssets": "Processing error occurred.",
        "convertToShares": "Processing error occurred.",
        "previewDeposit": "Processing error occurred.",
        "previewMint": "Processing error occurred.",
        "previewRedeem": "Processing error occurred.",
        "previewWithdraw": "Processing error occurred."
      },
      "implementationNames": {
        "0x83F20F44975D03b1b09e64809B757c47f942BEeA": "SavingsDai"
      }
    },
    {
      "name": "FrxEthTimelock",
      "address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
      "type": "Contract",
      "template": "fraxtal/Timelock",
      "sourceHashes": [
        "0xf74d5abe93255d485a607a353bb85161caf16d07541125865eb5fd9220bce6c7"
      ],
      "proxyType": "immutable",
      "description": "Allows for time-delayed execution of transactions. Current delay is 2d.",
      "sinceTimestamp": 1608140486,
      "sinceBlock": 11465576,
      "values": {
        "$immutable": true,
        "admin": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "delay": 172800,
        "delayFormatted": "2d",
        "GRACE_PERIOD": 1209600,
        "MAXIMUM_DELAY": 2592000,
        "MINIMUM_DELAY": 172800,
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA": "Timelock"
      }
    },
    {
      "name": "FRAXStablecoin",
      "address": "0x853d955aCEf822Db058eb8505911ED77F175b99e",
      "type": "Contract",
      "sourceHashes": [
        "0x91ed3751423bb1df6d813c5d031edfa87380204e71c6573ab6e7ae13acf2f014"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1608140520,
      "sinceBlock": 11465581,
      "values": {
        "$immutable": true,
        "collateral_ratio_paused": true,
        "COLLATERAL_RATIO_PAUSER": "0xb25402418ad555013210365a422f9f1206b2dd00719998db06f8a1fbe014641b",
        "controller_address": "0x0000000000000000000000000000000000000000",
        "creator_address": "0x234D953a9404Bf9DbC3b526271d440cD2870bCd2",
        "decimals": 18,
        "DEFAULT_ADMIN_ADDRESS": "0xa448833bEcE66fD8803ac0c390936C79b5FD6eDf",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "eth_usd_consumer_address": "0xBa6C6EaC41a24F9D39032513f66D738B3559f15a",
        "eth_usd_price": 2598440000,
        "frax_eth_oracle_address": "0x2A6ddD9401B14d0443d0738B8a78fd5B99829A80",
        "frax_pools_array": [
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000",
          "0x1864Ca3d47AaB98Ee78D11fc9DCC5E7bADdA1c0d",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000"
        ],
        "frax_price": 1015864,
        "frax_step": 2500,
        "fxs_address": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0",
        "fxs_eth_oracle_address": "0x3B11DA52030420c663d263Ad4415a8A02E5f8cf8",
        "genesis_supply": "2000000000000000000000000",
        "global_collateral_ratio": 945000,
        "globalCollateralValue": "526774607246499035175230847",
        "last_call_time": 1687208423,
        "minting_fee": 9500,
        "name": "Frax",
        "owner_address": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "price_band": 10000,
        "price_target": 980000,
        "redemption_fee": 4500,
        "refresh_cooldown": 3600,
        "symbol": "FRAX",
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
        "totalSupply": "314401093025292626281187987",
        "weth_address": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "errors": {
        "frax_info": "Processing error occurred.",
        "frax_pools_array": "Processing error occurred.",
        "fxs_price": "Processing error occurred."
      },
      "implementationNames": {
        "0x853d955aCEf822Db058eb8505911ED77F175b99e": "FRAXStablecoin"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x86C3FfeE349A7cFf7cA88C449717B1b133bfb517",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0xae641c7d7a83bba7fa913b9544f946dc23ca0527c2f4abb9c6a3496f49375218"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9"
        }
      ],
      "sinceTimestamp": 1677239099,
      "sinceBlock": 16697978,
      "values": {
        "$immutable": true,
        "owner": "0x17Dd33Ed0e3dD2a80E37489B8A63063161BE6957"
      },
      "implementationNames": {
        "0x86C3FfeE349A7cFf7cA88C449717B1b133bfb517": "ProxyAdmin"
      }
    },
    {
      "name": "PoolInstance",
      "address": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
      "type": "Contract",
      "sourceHashes": [
        "0x1bb1eebf940ae6126d47aeb6ef0c3dfd89b3db8892ef36f1e46d456851469561",
        "0x3639265ad2d28c24254d028e760dca0ff4e2e0fdf54f72d004d0e355455a7fdc"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1672325495,
      "sinceBlock": 16291127,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x9aEb8aAA1cA38634Aa8C0c8933E7fB4D61091327",
        "$pastUpgrades": [
          [
            "2023-05-08T07:09:11.000Z",
            "0x012b6d5e9be9ae815f6d4af51adc11aed782a6979eca66f9afbf4d122245f342",
            ["0xF1Cd4193bbc1aD4a23E833170f49d60f3D35a621"]
          ],
          [
            "2024-01-10T23:02:59.000Z",
            "0x22bf91c32a91bcd1a5450038847613b0f11cc6a580d0538bd65618fde9b7294a",
            ["0x5FAab9E1adbddaD0a08734BE8a52185Fd6558E14"]
          ],
          [
            "2024-07-27T15:06:35.000Z",
            "0x65b6eb75203176f6ee38823219f4e46c0d1c56230dfb82d98964c089fc3ef174",
            ["0x34339f94350EC5274ea44d0C37DAe9e968c44081"]
          ],
          [
            "2024-10-08T12:52:23.000Z",
            "0xefcf3c57b91d919da3f2e7e8d6af041d9cb5c1a4b58e913ebc9aaeba238947eb",
            ["0x1f64488c2C4686771dafA75915274d27878B667a"]
          ],
          [
            "2024-10-16T09:00:59.000Z",
            "0x201ee5baadd6b86834fa16ed403c8a8227e8de2c6b914607757c2582fbe45ea0",
            ["0xeF434E4573b90b6ECd4a00f4888381e4D0CC5Ccd"]
          ],
          [
            "2025-02-24T15:23:59.000Z",
            "0x8e51d324a562bf6ad767f10bff457e310d5b89f76482bc68c05e977ad4c5100b",
            ["0x9aEb8aAA1cA38634Aa8C0c8933E7fB4D61091327"]
          ]
        ],
        "$upgradeCount": 6,
        "ADDRESSES_PROVIDER": "0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e",
        "BRIDGE_PROTOCOL_FEE": 0,
        "FLASHLOAN_PREMIUM_TO_PROTOCOL": 4,
        "FLASHLOAN_PREMIUM_TOTAL": 5,
        "getBorrowLogic": "0x62325c94E1c49dcDb5937726aB5D8A4c37bCAd36",
        "getBridgeLogic": "0x621Ef86D8A5C693a06295BC288B95C12D4CE4994",
        "getEModeLogic": "0xC31d2362fAeD85dF79d0bec99693D0EB0Abd3f74",
        "getFlashLoanLogic": "0x34039100cc9584Ae5D741d322e16d0d18CEE8770",
        "getLiquidationLogic": "0x4731bF01583F991278692E8727d0700a00A1fBBf",
        "getPoolLogic": "0xf8C97539934ee66a67C26010e8e027D77E821B0C",
        "getReservesCount": 48,
        "getReservesList": [
          "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
          "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
          "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",
          "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
          "0x6B175474E89094C44Da98b954EedeAC495271d0F",
          "0x514910771AF9Ca656af840dff83E8264EcF986CA",
          "0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",
          "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704",
          "0xdAC17F958D2ee523a2206206994597C13D831ec7",
          "0xae78736Cd615f374D3085123A210448E74Fc6393",
          "0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",
          "0xD533a949740bb3306d119CC777fa900bA034cd52",
          "0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2",
          "0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",
          "0xba100000625a3754423978a60c9317c58a424e3D",
          "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",
          "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32",
          "0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72",
          "0x111111111117dC0aa78b770fA6A738034120C302",
          "0x853d955aCEf822Db058eb8505911ED77F175b99e",
          "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f",
          "0xD33526068D116cE69F19A9ee46F0bd304F21A51f",
          "0x83F20F44975D03b1b09e64809B757c47f942BEeA",
          "0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6",
          "0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202",
          "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0",
          "0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",
          "0x6c3ea9036406852006290770BEdFcAbA0e23A0e8",
          "0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee",
          "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38",
          "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
          "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
          "0x9D39A5DE30e57443BfF2A8307A4256c8797A3497",
          "0x18084fbA666a33d37592fA2633fD49a74DD93a88",
          "0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf",
          "0xdC035D45d973E3EC169d2276DDab16f1e407384F",
          "0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7",
          "0x8236a87084f8B84306f72007F36F2618A5634494",
          "0x657e8C867D8B37dCC18fA4Caead9C45EB088C642",
          "0x8292Bb45bf1Ee4d140127049757C2E0fF06317eD",
          "0x50D2C7992b802Eef16c04FeADAB310f31866a545",
          "0x3b3fB9C57858EF816833dC91565EFcd85D96f634",
          "0xC139190F447e929f090Edeb554D95AbB8b18aC1C",
          "0x917459337CaAC939D41d7493B3999f571D20D667",
          "0x14Bdc3A3AE09f5518b923b69489CBcAfB238e617",
          "0x90D2af7d622ca3141efA4d8f1F24d86E5974Cc8F",
          "0xC96dE26018A54D51c097160568752c4E3BD6C364",
          "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c"
        ],
        "getSupplyLogic": "0x185477906B46D9b8DE0DEB73A1bBfb87b5b51BC3",
        "MAX_NUMBER_RESERVES": 128,
        "POOL_REVISION": 7,
        "UMBRELLA": "0x554d4252454c4c41000000000000000000000000000000000000000000000000",
        "usdcReserveData": {
          "configuration": {
            "data": "7237005577332262213973186574461374550875793787390234903836814236068253015372"
          },
          "liquidityIndex": "1134904967020614335186410805",
          "currentLiquidityRate": "39063321657392638423303998",
          "variableBorrowIndex": "1179283705587210506664686521",
          "currentVariableBorrowRate": "50939040616061632957060488",
          "currentStableBorrowRate": 0,
          "lastUpdateTimestamp": 1751493551,
          "id": 3,
          "aTokenAddress": "0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c",
          "stableDebtTokenAddress": "0x102633152313C81cD80419b6EcF66d14Ad68949A",
          "variableDebtTokenAddress": "0x72E95b8931767C79bA4EeE721354d6E99a61D004",
          "interestRateStrategyAddress": "0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB",
          "accruedToTreasury": 105276852240,
          "unbacked": 0,
          "isolationModeTotalDebt": 0
        },
        "userAccountData": {
          "totalCollateralBase": 0,
          "totalDebtBase": 0,
          "availableBorrowsBase": 0,
          "currentLiquidationThreshold": 0,
          "ltv": 0,
          "healthFactor": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        },
        "wethReserveData": {
          "configuration": {
            "data": "7237005577332262213973186942896404417594609838914822215735560034434224496498"
          },
          "liquidityIndex": "1047804948399167934493914583",
          "currentLiquidityRate": "17789635544949571792327841",
          "variableBorrowIndex": "1074453849131165885227391458",
          "currentVariableBorrowRate": "25057324076016256922053071",
          "currentStableBorrowRate": 0,
          "lastUpdateTimestamp": 1751493527,
          "id": 0,
          "aTokenAddress": "0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8",
          "stableDebtTokenAddress": "0x102633152313C81cD80419b6EcF66d14Ad68949A",
          "variableDebtTokenAddress": "0xeA51d7853EEFb32b6ee06b1C12E6dcCA88Be0fFE",
          "interestRateStrategyAddress": "0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB",
          "accruedToTreasury": "79699525966071838433",
          "unbacked": 0,
          "isolationModeTotalDebt": 0
        }
      },
      "errors": {
        "usdcReserveCaps": "Processing error occurred.",
        "wethReserveCaps": "Processing error occurred."
      },
      "implementationNames": {
        "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2": "InitializableImmutableAdminUpgradeabilityProxy",
        "0x9aEb8aAA1cA38634Aa8C0c8933E7fB4D61091327": "PoolInstance"
      }
    },
    {
      "address": "0x895F07957B863f4AB6086035a6990d8366Bc3266",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x8967a7cE20043F876e42F8aD696b06bb632f0ca7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "MiniMeTokenFactory",
      "address": "0x909d05F384D0663eD4BE59863815aB43b4f347Ec",
      "type": "Contract",
      "sourceHashes": [
        "0xab441847b55bfdc5cf90792906cf0effcd43d3390a7cc05e690aad5fb349c19b"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1540644725,
      "sinceBlock": 6593191,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x909d05F384D0663eD4BE59863815aB43b4f347Ec": "MiniMeTokenFactory"
      }
    },
    {
      "name": "EtherealPreDepositVault",
      "address": "0x90D2af7d622ca3141efA4d8f1F24d86E5974Cc8F",
      "type": "Contract",
      "sourceHashes": [
        "0x2ec1450cd11e4a7248d6218006503df54db392b7a710bbbc14e4ca45e27f096d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1739404187,
      "sinceBlock": 21833795,
      "values": {
        "$immutable": true,
        "asset": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
        "convertToAssets": [0, 1, 2, 3, 4],
        "convertToShares": [0, 1, 2, 3, 4],
        "decimals": 18,
        "depositsEnabled": true,
        "name": "Ethereal Pre-deposit Vault",
        "owner": "0x0000000000000000000000000000000000000000",
        "previewDeposit": [0, 1, 2, 3, 4],
        "previewMint": [0, 1, 2, 3, 4],
        "previewRedeem": [0, 1, 2, 3, 4],
        "previewWithdraw": [0, 1, 2, 3, 4],
        "symbol": "eUSDe",
        "totalAssets": "672946203967654121075637296",
        "totalSupply": "672946203967654121075637296",
        "withdrawalsEnabled": true
      },
      "errors": {
        "convertToAssets": "Processing error occurred.",
        "convertToShares": "Processing error occurred.",
        "previewDeposit": "Processing error occurred.",
        "previewMint": "Processing error occurred.",
        "previewRedeem": "Processing error occurred.",
        "previewWithdraw": "Processing error occurred."
      },
      "implementationNames": {
        "0x90D2af7d622ca3141efA4d8f1F24d86E5974Cc8F": "EtherealPreDepositVault"
      }
    },
    {
      "address": "0x911cb2323c6fB580e39F92a6f58D1cb019E940Cd",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "PendlePrincipalToken",
      "address": "0x917459337CaAC939D41d7493B3999f571D20D667",
      "type": "Contract",
      "sourceHashes": [
        "0xe7599dbbd1b4d9d7a2cb1262cc8d0b2db2123ae858c45fa712d5afcdfd23d1eb"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1739967671,
      "sinceBlock": 21880377,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "expiry": 1753920000,
        "factory": "0x35A338522a435D46f77Be32C70E215B813D0e3aC",
        "isExpired": false,
        "name": "PT Ethena USDe 31JUL2025",
        "SY": "0xb47CBF6697A6518222c7Af4098A43AEFe2739c8c",
        "symbol": "PT-USDe-31JUL2025",
        "totalSupply": "229215858161350736015378941",
        "YT": "0x733Ee9Ba88f16023146EbC965b7A1Da18a322464"
      },
      "implementationNames": {
        "0x917459337CaAC939D41d7493B3999f571D20D667": "PendlePrincipalToken"
      }
    },
    {
      "name": "LRTConfig",
      "address": "0x947Cb49334e6571ccBFEF1f1f1178d8469D65ec7",
      "type": "Contract",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xb7bfdb96b9b4e6c049bde90c9eaa5ac6b941045364c5d1fa92d578be761f6bd0"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1702241207,
      "sinceBlock": 18758282,
      "values": {
        "$admin": "0xb61e0E39b6d4030C36A176f576aaBE44BF59Dc78",
        "$implementation": "0x83B7fd3d92EF0340C7F940fd2FF5e762CB0878a9",
        "$pastUpgrades": [
          [
            "2023-12-10T20:46:47.000Z",
            "0x7cf5075f8957d8a424f311a8b465408fcb3e87fadded36aa1e000eee80ef5ca2",
            ["0x8D9CD771c51b7F6217E0000c1C735F05aDbE6594"]
          ],
          [
            "2024-02-14T04:08:23.000Z",
            "0xcf1b13e0ba25fd97aff120daff42eb4bba13658a8fc01eafc1b8ddc6c8bd732e",
            ["0xc5cD38d47D0c2BD7Fe18c64a50c512063DC29700"]
          ],
          [
            "2024-06-19T14:45:23.000Z",
            "0x9cd65b8b2bcde7f658cf3152c9b40fd9839e8a4ae7b2ac6bbc289be9aa2c0718",
            ["0xc96bC6D0CFb7c9A9C5D41FB6B98A1Eb92B0e6CD6"]
          ],
          [
            "2024-09-13T17:40:59.000Z",
            "0xa584bbccd5a31f7fae593f6f408a693e7b8160238e06f7bbfc489aae192236e1",
            ["0x0909E747F8580598B36d403D1446d1E1C6E1018e"]
          ],
          [
            "2024-11-02T18:31:47.000Z",
            "0x37e61fa5cf0c7548f5608f7035eb5540e4a3012980c812e0a93b2aafe0468b98",
            ["0x6894FfC7137FE5707EB23dB39825dd20c6F44EA2"]
          ],
          [
            "2024-11-12T18:39:35.000Z",
            "0x6deee94b989f0b3632edd5980dcfabc0a71282e460c38cf7b8b898a27c0df22c",
            ["0x3aBe33f1995109D7cF5c89DAc472AB003bFC44A8"]
          ],
          [
            "2025-04-16T16:12:47.000Z",
            "0xab39927419c5affc87a97fe1c3441d45faa954adc18b62015925910c2708d7da",
            ["0x83B7fd3d92EF0340C7F940fd2FF5e762CB0878a9"]
          ]
        ],
        "$upgradeCount": 7,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "eigenLayerRewardReceiver": "0xEe68dF9f661da6ED968Ea4cbF7EC68fcFE375bc6",
        "getSupportedAssetList": [
          "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
          "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
          "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
        ],
        "maxNegligibleAmount": 1000000000000000,
        "protocolFeeInBPS": 350,
        "rsETH": "0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7",
        "supportedAssetList": [
          "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
          "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
          "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
        ]
      },
      "implementationNames": {
        "0x947Cb49334e6571ccBFEF1f1f1178d8469D65ec7": "TransparentUpgradeableProxy",
        "0x83B7fd3d92EF0340C7F940fd2FF5e762CB0878a9": "LRTConfig"
      }
    },
    {
      "name": "DaiJoin",
      "address": "0x9759A6Ac90977b93B58547b4A71c78317f391A28",
      "type": "Contract",
      "sourceHashes": [
        "0xd9c385df7491d70e1ce8823d65a3520242d0d3358b7360edbb00b8bc5d8bc859"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1573672677,
      "sinceBlock": 8928158,
      "values": {
        "$immutable": true,
        "dai": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "live": 1,
        "vat": "0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B"
      },
      "implementationNames": {
        "0x9759A6Ac90977b93B58547b4A71c78317f391A28": "DaiJoin"
      }
    },
    {
      "name": "AToken",
      "address": "0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c",
      "type": "Contract",
      "sourceHashes": [
        "0x1bb1eebf940ae6126d47aeb6ef0c3dfd89b3db8892ef36f1e46d456851469561",
        "0x505142a466beaca8f667c084ab2a7c0c72214d9af68e17a49bc66561ce783ac1"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1674806231,
      "sinceBlock": 16496802,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x7EfFD7b47Bfd17e52fB7559d3f924201b9DbfF3d",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "ATOKEN_REVISION": 1,
        "decimals": 6,
        "DOMAIN_SEPARATOR": "0xaf732c660f56a382676f57d713fb335374a2d2523e5448bc6e78762e13ff8387",
        "EIP712_REVISION": "0x31",
        "getIncentivesController": "0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb",
        "name": "Aave Ethereum USDC",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "POOL": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
        "RESERVE_TREASURY_ADDRESS": "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c",
        "scaledTotalSupply": 2563305103227090,
        "symbol": "aEthUSDC",
        "totalSupply": 2909107866608851,
        "UNDERLYING_ASSET_ADDRESS": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
      },
      "implementationNames": {
        "0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c": "InitializableImmutableAdminUpgradeabilityProxy",
        "0x7EfFD7b47Bfd17e52fB7559d3f924201b9DbfF3d": "AToken"
      }
    },
    {
      "name": "ExchangeRateUpdater",
      "address": "0x9b37180d847B27ADC13C2277299045C1237Ae281",
      "type": "Contract",
      "sourceHashes": [
        "0x98e3bbdacc542e5c3a095b9d74ad28c8ec703afb58eff6f7ead1a92ef1a5dd18"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1643910274,
      "sinceBlock": 14134435,
      "values": {
        "$immutable": true,
        "owner": "0x352978614FA84D763882A9023B169D8709C477f8",
        "tokenContract": "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704"
      },
      "implementationNames": {
        "0x9b37180d847B27ADC13C2277299045C1237Ae281": "ExchangeRateUpdater"
      }
    },
    {
      "name": "TBTCVault",
      "address": "0x9C070027cdC9dc8F82416B2e5314E11DFb4FE3CD",
      "type": "Contract",
      "sourceHashes": [
        "0x352146c56ffc43e913cfcbc9b49b0dffdb5730385024b1eba35610caef81725a"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1674515927,
      "sinceBlock": 16472741,
      "values": {
        "$immutable": true,
        "amountToSatoshis": [
          [0, 0, 0],
          [0, 1, 0],
          [0, 2, 0],
          [0, 3, 0],
          [0, 4, 0]
        ],
        "bank": "0x65Fbae61ad2C8836fFbFB502A0dA41b0789D9Fc6",
        "bridge": "0x5e4861a80B55f035D899f66772117F00FA0E8e7B",
        "getMinters": [
          "0x6de013e20BB21607617E7d9966c89a45f2B6A0C5",
          "0x999999597e094ec15f2909A048C6133a158460D4",
          "0x25C581c112cf68C21E7c53590071EE49149ca49F",
          "0x460583Ba844E6705827f837B424eaEDCc3fEd16b",
          "0xd37bB59478e092DA4e83fEFE04723d62548498F8",
          "0xDa2b6ed2A37E8Aa1f6485935E4EB4D4304AE5541",
          "0x315f99140F7786aCd4d6cD3fAD06927624F6bF1e",
          "0xB02f7fbC2b250619c88Aa29c4A80EE420B28E00E",
          "0xfa1fc34621402F7bd9B1af0485B14b266fD7D9a9"
        ],
        "GOVERNANCE_DELAY": 86400,
        "isOptimisticMintingPaused": false,
        "minters": [
          "0x6de013e20BB21607617E7d9966c89a45f2B6A0C5",
          "0x999999597e094ec15f2909A048C6133a158460D4",
          "0x25C581c112cf68C21E7c53590071EE49149ca49F",
          "0x460583Ba844E6705827f837B424eaEDCc3fEd16b",
          "0xd37bB59478e092DA4e83fEFE04723d62548498F8"
        ],
        "newOptimisticMintingDelay": 0,
        "newOptimisticMintingFeeDivisor": 0,
        "newVault": "0x0000000000000000000000000000000000000000",
        "optimisticMintingDelay": 3600,
        "optimisticMintingDelayUpdateInitiatedTimestamp": 0,
        "optimisticMintingFeeDivisor": 0,
        "optimisticMintingFeeUpdateInitiatedTimestamp": 0,
        "optimisticMintingRequests": [
          [0, 0],
          [0, 0],
          [0, 0],
          [0, 0],
          [0, 0]
        ],
        "owner": "0x9F6e831c8F8939DC0C830C6e492e7cEf4f9C2F5f",
        "SATOSHI_MULTIPLIER": 10000000000,
        "tbtcToken": "0x18084fbA666a33d37592fA2633fD49a74DD93a88",
        "upgradeInitiatedTimestamp": 0
      },
      "errors": {
        "amountToSatoshis": "Processing error occurred.",
        "minters": "Processing error occurred.",
        "optimisticMintingRequests": "Processing error occurred."
      },
      "implementationNames": {
        "0x9C070027cdC9dc8F82416B2e5314E11DFb4FE3CD": "TBTCVault"
      }
    },
    {
      "name": "StakedUSDeV2",
      "address": "0x9D39A5DE30e57443BfF2A8307A4256c8797A3497",
      "type": "Contract",
      "sourceHashes": [
        "0xb52df50a944d5d6461dcca6b03df564605ac43a03739099c9676bb5b7a383246"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1699979567,
      "sinceBlock": 18571359,
      "values": {
        "$immutable": true,
        "asset": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
        "convertToAssets": [0, 1, 2, 3, 4],
        "convertToShares": [0, 0, 1, 2, 3],
        "cooldownDuration": 604800,
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0x940284ae30a8660e5c2bae12953bc4bd5a028a0f55e1dd2c19a8c1473d3eb553",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "sUSDe",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x9D39A5DE30e57443BfF2A8307A4256c8797A3497",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "getUnvestedAmount": "14923769388346567460317",
        "lastDistributionTimestamp": 1751469095,
        "MAX_COOLDOWN_DURATION": 7776000,
        "name": "Staked USDe",
        "owner": "0x3B0AAf6e6fCd4a7cEEf8c92C32DFeA9E64dC1862",
        "previewDeposit": [0, 0, 1, 2, 3],
        "previewMint": [0, 2, 3, 4, 5],
        "previewRedeem": [0, 1, 2, 3, 4],
        "previewWithdraw": [0, 1, 2, 3, 4],
        "silo": "0x7FC7c91D556B400AFa565013E3F32055a0713425",
        "symbol": "sUSDe",
        "totalAssets": "3152074485043409849439830721",
        "totalSupply": "2671314929518922665191427695",
        "vestingAmount": "100047616011261904761905"
      },
      "errors": {
        "convertToAssets": "Processing error occurred.",
        "convertToShares": "Processing error occurred.",
        "previewDeposit": "Processing error occurred.",
        "previewMint": "Processing error occurred.",
        "previewRedeem": "Processing error occurred.",
        "previewWithdraw": "Processing error occurred."
      },
      "implementationNames": {
        "0x9D39A5DE30e57443BfF2A8307A4256c8797A3497": "StakedUSDeV2"
      }
    },
    {
      "name": "DefaultReserveInterestRateStrategyV2",
      "address": "0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB",
      "type": "Contract",
      "sourceHashes": [
        "0x3da52df54f2b2ee37bde23b4ca544a3b052a6c906a09e133107d20ac8dd508de"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1728391943,
      "sinceBlock": 20920979,
      "values": {
        "$immutable": true,
        "ADDRESSES_PROVIDER": "0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e",
        "MAX_BORROW_RATE": 100000,
        "MAX_OPTIMAL_POINT": 9900,
        "MIN_OPTIMAL_POINT": 100
      },
      "implementationNames": {
        "0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB": "DefaultReserveInterestRateStrategyV2"
      }
    },
    {
      "address": "0x9Ed85723C5c55b746Eb2C4B7e2A359B2091B8fE7",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c"
        }
      ]
    },
    {
      "name": "EtherFiTimelock",
      "address": "0x9f26d4C958fD811A1F59B01B86Be7dFFc9d20761",
      "type": "Contract",
      "sourceHashes": [
        "0x8733732c79bd6b32ef91afae7d324bba01a2ca098b9ac16e115f279b3da18cce"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x308861A430be4cce5502d0A12724771Fc6DaF216"
        },
        {
          "permission": "upgrade",
          "from": "0x35fA164735182de50811E8e2E824cFb9B6118ac2"
        },
        {
          "permission": "upgrade",
          "from": "0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee"
        }
      ],
      "sinceTimestamp": 1708791971,
      "sinceBlock": 19298624,
      "values": {
        "$immutable": true,
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 259200,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "implementationNames": {
        "0x9f26d4C958fD811A1F59B01B86Be7dFFc9d20761": "EtherFiTimelock"
      }
    },
    {
      "name": "DSToken",
      "address": "0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2",
      "type": "Contract",
      "sourceHashes": [
        "0xe9ef8cce418e8648f447a28078ae435159e901077f280a6c7b94e51c5d4f3da7"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1511634257,
      "sinceBlock": 4620855,
      "values": {
        "$immutable": true,
        "authority": "0x6eEB68B2C7A918f36B78E2DB80dcF279236DDFb8",
        "decimals": 18,
        "name": "0x4d616b6572000000000000000000000000000000000000000000000000000000",
        "owner": "0x0000000000000000000000000000000000000000",
        "stopped": false,
        "symbol": "0x4d4b520000000000000000000000000000000000000000000000000000000000",
        "totalSupply": "470929109078786975177747"
      },
      "implementationNames": {
        "0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2": "DSToken"
      }
    },
    {
      "name": "USDC",
      "address": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
      "type": "Contract",
      "template": "tokens/circle/USDC",
      "sourceHashes": [
        "0x465649a27ea63e4d4455ae370e76fe43b1e2ddf2e6c7df12603093e0fb9e5145",
        "0xacd76117eb21f736961ade180c25f63d796bc2e83f43b82ee3ff585bb34ce6ed"
      ],
      "proxyType": "ZeppelinOS proxy",
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1533324504,
      "sinceBlock": 6082465,
      "values": {
        "$admin": "0x807a96288A1A408dBC13DE2b1d087d10356395d2",
        "$immutable": false,
        "$implementation": "0x43506849D7C04F9138D1A2050bbF3A0c054402dd",
        "$pastUpgrades": [
          [
            "2020-08-27T15:32:54.000Z",
            "0xe6f0f754398d89583da8e4229c5d7aaa00739a3ae334ecfc2839ac396b4836e3",
            ["0xB7277a6e95992041568D9391D09d0122023778A2"]
          ],
          [
            "2021-04-26T19:14:51.000Z",
            "0xe2e40640ffd5f76538cd23660cf56f00bfebd5fe925ebad6b8067c4cee18a2c3",
            ["0xa2327a938Febf5FEC13baCFb16Ae10EcBc4cbDCF"]
          ],
          [
            "2024-01-08T17:16:35.000Z",
            "0xae3ad89e569f27d47a8a02999a6d937c12aaa6bc50e66650e7cbd3244bde9951",
            ["0x43506849D7C04F9138D1A2050bbF3A0c054402dd"]
          ]
        ],
        "$upgradeCount": 3,
        "blacklister": "0x0A06BE16275B95a7d2567fBdAE118b36C7DA78F9",
        "CANCEL_AUTHORIZATION_TYPEHASH": "0x158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a1597429",
        "currency": "USD",
        "decimals": 6,
        "DOMAIN_SEPARATOR": "0x06c37168a7db5138defc7866392bb87a741f9b3d104deb5094588ce041cae335",
        "masterMinter": "0xE982615d461DD5cD06575BbeA87624fda4e3de17",
        "minters": [
          "0x5B6122C109B78C6755486966148C1D70a50A47D7",
          "0x19a932fC5A8320939c3575302a8705147a7f27D8",
          "0x24BDd8771b08C2EA6FE0e898126e65BD49021BE3",
          "0x55FE002aefF02F77364de339a1292923A15844B8",
          "0x895F07957B863f4AB6086035a6990d8366Bc3266",
          "0xc4922d64a24675E16e1586e3e3Aa56C06fABe907",
          "0x8967a7cE20043F876e42F8aD696b06bb632f0ca7",
          "0x3005A4C0EFE7E66F3f60eF8704983247A5c6ca61",
          "0xE400d09e98a5806bF501E93ED8E7623B78b4646F",
          "0x2322E81DB282F22849c2Eb0b749C688Ea3611946",
          "0x2b52e60C844d7946b6d910D3296940dC889CC785",
          "0x911cb2323c6fB580e39F92a6f58D1cb019E940Cd",
          "0xfd78EE919681417d192449715b2594ab58f5D002"
        ],
        "name": "USD Coin",
        "owner": "0xFcb19e6a322b27c06842A71e8c725399f049AE3a",
        "paused": false,
        "pauser": "0x4914f61d25e5C567143774B76EdbF4D5109a8566",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "RECEIVE_WITH_AUTHORIZATION_TYPEHASH": "0xd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de8",
        "rescuer": "0x0000000000000000000000000000000000000000",
        "symbol": "USDC",
        "totalSupply": "40999797473630477",
        "TRANSFER_WITH_AUTHORIZATION_TYPEHASH": "0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267",
        "version": "2"
      },
      "errors": {
        "admin": "Processing error occurred.",
        "implementation": "Processing error occurred."
      },
      "fieldMeta": {
        "minters": {
          "description": "All minters, ignoring their 'allowed amount'"
        }
      },
      "implementationNames": {
        "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48": "FiatTokenProxy",
        "0x43506849D7C04F9138D1A2050bbF3A0c054402dd": "FiatTokenV2_2"
      }
    },
    {
      "name": "RSETH",
      "address": "0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7",
      "type": "Contract",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x1e916ff843a772daa9288e6b30b4cb98c1709924d5264f6b6803356ba6a88c41"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1702241207,
      "sinceBlock": 18758282,
      "values": {
        "$admin": "0xb61e0E39b6d4030C36A176f576aaBE44BF59Dc78",
        "$implementation": "0x60FF20BACD9A647e4025Ed8b17CE30e40095A1d2",
        "$pastUpgrades": [
          [
            "2023-12-10T20:46:47.000Z",
            "0xc0184e26a71edb147d5d8870d2152be5aa7977523bd222ded0f14fa97ed9d78c",
            ["0x8E2fe2f55f295F3f141213789796fa79E709eF23"]
          ],
          [
            "2024-02-14T04:15:11.000Z",
            "0x0fa0fca91fa5d3ac754e7aee9617b53b34908521185dcff4c1bb769814092105",
            ["0x60FF20BACD9A647e4025Ed8b17CE30e40095A1d2"]
          ]
        ],
        "$upgradeCount": 2,
        "decimals": 18,
        "lrtConfig": "0x947Cb49334e6571ccBFEF1f1f1178d8469D65ec7",
        "name": "rsETH",
        "paused": false,
        "symbol": "rsETH",
        "totalSupply": "434672814561154153406381"
      },
      "implementationNames": {
        "0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7": "TransparentUpgradeableProxy",
        "0x60FF20BACD9A647e4025Ed8b17CE30e40095A1d2": "RSETH"
      }
    },
    {
      "name": "ETHx",
      "address": "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
      "type": "Contract",
      "sourceHashes": [
        "0x36a2777510f3b20063560bdcb7f657da283bcfdc484a19b0a0f77d18f6a8b5e1",
        "0xdef78c789e7659c7dbd7b8143be087c4f9ab799ddc3f61c5c7b731dce08f6baa"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1685990327,
      "sinceBlock": 17416140,
      "values": {
        "$admin": "0x67B12264Ca3e0037Fc7E22F2457b42643a04C86e",
        "$implementation": "0x4C22fFd479637EA0eD61D451CBe6355627283358",
        "$pastUpgrades": [
          [
            "2023-06-05T18:38:47.000Z",
            "0x1e457b3e821b24eb514b95c640eee302a03c26ec9faf658b2394c40f51580a48",
            ["0x4C22fFd479637EA0eD61D451CBe6355627283358"]
          ]
        ],
        "$upgradeCount": 1,
        "BURNER_ROLE": "0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "MINTER_ROLE": "0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
        "name": "ETHx",
        "paused": false,
        "staderConfig": "0x4ABEF2263d5A5ED582FC9A9789a41D85b68d69DB",
        "symbol": "ETHx",
        "totalSupply": "145373414808564679710842"
      },
      "implementationNames": {
        "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b": "TransparentUpgradeableProxy",
        "0x4C22fFd479637EA0eD61D451CBe6355627283358": "ETHx"
      }
    },
    {
      "name": "TroveManager",
      "address": "0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2",
      "type": "Contract",
      "sourceHashes": [
        "0x412792126fd1350719ab48a6ad14d761d102baa8431f212b8b2e1c279fc742b6"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1617610896,
      "sinceBlock": 12178557,
      "values": {
        "_100pct": "1000000000000000000",
        "$immutable": true,
        "activePool": "0xDf9Eb223bAFBE5c5271415C75aeCD68C21fE3D7F",
        "baseRate": 38397647094,
        "BETA": 2,
        "BOOTSTRAP_PERIOD": 1209600,
        "borrowerOperationsAddress": "0x24179CD81c9e782A4096035f7eC97fB8B783e007",
        "BORROWING_FEE_FLOOR": 5000000000000000,
        "CCR": "1500000000000000000",
        "checkRecoveryMode": [true, true, true, true, true],
        "DECIMAL_PRECISION": "1000000000000000000",
        "defaultPool": "0x896a3F03176f05CFbb4f006BfCd8723F2B0D741C",
        "getBorrowingFee": [0, 0, 0, 0, 0],
        "getBorrowingFeeWithDecay": [0, 0, 0, 0, 0],
        "getBorrowingRate": 5000038397647094,
        "getBorrowingRateWithDecay": 5000005740909596,
        "getEntireSystemColl": "96822224366801730028086",
        "getEntireSystemDebt": "41036045178918266196861589",
        "getRedemptionFeeWithDecay": [0, 0, 0, 0],
        "getRedemptionRate": 5000038397647094,
        "getRedemptionRateWithDecay": 5000005740909596,
        "getTCR": [0, 0, 0, 0, 0],
        "getTroveFromTroveOwnersArray": [
          "0xa850535D3628CD4dFEB528dC85cfA93051Ff2984",
          "0xf309Ac4c07Be9c93d7a14b5B74e94F7aC29E8eCE",
          "0x98d87F3BF35B8D5685e1eDfAeb8BA2F7d0a7fB11",
          "0x84E546441FAA3699B2bd5d006901fA99428f20Cc",
          "0xA1CbA1fCEf2CD7379f74fEec9a7d8B17d430cc6f"
        ],
        "getTroveOwnersCount": 156,
        "isOwner": false,
        "L_ETH": 0,
        "L_LUSDDebt": 0,
        "lastETHError_Redistribution": 0,
        "lastFeeOperationTime": 1751375135,
        "lastLUSDDebtError_Redistribution": 0,
        "lqtyStaking": "0x4f9Fbb3f1E99B56e0Fe2892e623Ed36A76Fc605d",
        "lqtyToken": "0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D",
        "LUSD_GAS_COMPENSATION": "200000000000000000000",
        "lusdToken": "0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",
        "MAX_BORROWING_FEE": "50000000000000000",
        "MCR": "1100000000000000000",
        "MIN_NET_DEBT": "1800000000000000000000",
        "MINUTE_DECAY_FACTOR": "999037758833783000",
        "NAME": "TroveManager",
        "owner": "0x0000000000000000000000000000000000000000",
        "PERCENT_DIVISOR": 200,
        "priceFeed": "0x4c517D4e2C851CA76d7eC94B805269Df0f2201De",
        "REDEMPTION_FEE_FLOOR": 5000000000000000,
        "SECONDS_IN_ONE_MINUTE": 60,
        "sortedTroves": "0x8FdD3fbFEb32b28fb73555518f8b361bCeA741A6",
        "stabilityPool": "0x66017D22b0f8556afDd19FC67041899Eb65a21bb",
        "totalCollateralSnapshot": "109647795761613785296815",
        "totalStakes": "96822224366801730028086",
        "totalStakesSnapshot": "109647795761613785296815",
        "TroveOwners": [
          "0xa850535D3628CD4dFEB528dC85cfA93051Ff2984",
          "0xf309Ac4c07Be9c93d7a14b5B74e94F7aC29E8eCE",
          "0x98d87F3BF35B8D5685e1eDfAeb8BA2F7d0a7fB11",
          "0x84E546441FAA3699B2bd5d006901fA99428f20Cc",
          "0xA1CbA1fCEf2CD7379f74fEec9a7d8B17d430cc6f"
        ]
      },
      "errors": {
        "checkRecoveryMode": "Processing error occurred.",
        "getBorrowingFee": "Processing error occurred.",
        "getBorrowingFeeWithDecay": "Processing error occurred.",
        "getTCR": "Processing error occurred.",
        "getTroveFromTroveOwnersArray": "Processing error occurred.",
        "TroveOwners": "Processing error occurred."
      },
      "implementationNames": {
        "0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2": "TroveManager"
      }
    },
    {
      "address": "0xa448833bEcE66fD8803ac0c390936C79b5FD6eDf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "RocketTokenRETH",
      "address": "0xae78736Cd615f374D3085123A210448E74Fc6393",
      "type": "Contract",
      "sourceHashes": [
        "0x3abd0076b3c015fb6e0288c4b962b0d8f5b529971dccac72ead20921ae9279b2"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1632980684,
      "sinceBlock": 13325304,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "getCollateralRate": 142093086399,
        "getEthValue": [0, 1, 2, 3, 4],
        "getExchangeRate": "1140115544531818038",
        "getRethValue": [0, 0, 1, 2, 3],
        "getTotalCollateral": "66897507136493717",
        "name": "Rocket Pool ETH",
        "symbol": "rETH",
        "totalSupply": "412941109139425204800894",
        "version": 1
      },
      "errors": {
        "getEthValue": "Processing error occurred.",
        "getRethValue": "Processing error occurred."
      },
      "implementationNames": {
        "0xae78736Cd615f374D3085123A210448E74Fc6393": "RocketTokenRETH"
      }
    },
    {
      "name": "stETH_tokenContract",
      "address": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
      "type": "Contract",
      "template": "tokens/Lido/stETH",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0xdc88f413a8e8c93a3ee2d7f0ca94090b4b1feb8393663061d7bccedc81812975"
      ],
      "proxyType": "EIP897 proxy",
      "ignoreInWatchMode": [
        "getFeeDistribution",
        "totalSupply",
        "getBeaconStat",
        "getBufferedEther",
        "getDepositableEther",
        "getStakeLimitFullInfo",
        "getTotalPooledEther",
        "getTotalShares",
        "getCurrentStakeLimit"
      ],
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": false,
        "$implementation": "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb",
        "appId": "0x3ca7c3e38968823ccb4c78ea688df41356f182ae1d159e4ee608d30d68cef320",
        "canDeposit": true,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x260e7e1a220ea89b9454cbcdc1fcc44087325df199a3986e560d75db18b2e253",
        "eip712Domain": {
          "name": "Liquid staked Ether 2.0",
          "version": "2",
          "chainId": 1,
          "verifyingContract": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84"
        },
        "getBeaconStat": {
          "depositedValidators": 397169,
          "beaconValidators": 396911,
          "beaconBalance": "9090281177555412000000000"
        },
        "getBufferedEther": "1233256264320166673455",
        "getContractVersion": 2,
        "getCurrentStakeLimit": "150000000000000000000000",
        "getDepositableEther": 0,
        "getEIP712StETH": "0x8F73e4C2A6D852bb4ab2A45E6a9CF5715b3228B7",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getFee": 999,
        "getFeeDistribution": {
          "treasuryFeeBasisPoints": 5125,
          "insuranceFeeBasisPoints": 0,
          "operatorsFeeBasisPoints": 4874
        },
        "getInitializationBlock": 11473216,
        "getLidoLocator": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
        "getOracle": "0x442af784A788A5bd6F42A01Ebe9F287a871243fb",
        "getRecoveryVault": "0x0000000000000000000000000000000000000000",
        "getStakeLimitFullInfo": {
          "isStakingPaused": false,
          "isStakingLimitSet": true,
          "currentStakeLimit": "150000000000000000000000",
          "maxStakeLimit": "150000000000000000000000",
          "maxStakeLimitGrowthBlocks": 6400,
          "prevStakeLimit": "149985583100000000000000",
          "prevStakeBlockNumber": 22834341
        },
        "getTotalPooledEther": "9099770433819732166673455",
        "getTotalShares": "7538564254156231399117364",
        "getTreasury": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "getWithdrawalCredentials": "0x010000000000000000000000b9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
        "hasInitialized": true,
        "implementation": "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb",
        "isDepositable": false,
        "isPetrified": false,
        "isStakingPaused": false,
        "isStopped": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "name": "Liquid staked Ether 2.0",
        "PAUSE_ROLE": "0x139c2898040ef16910dc9f44dc697df79363da767d8bc92f2e310312b816e46d",
        "proxyType": 2,
        "RESUME_ROLE": "0x2fc10cc8ae19568712f7a176fb4978616a610650813c9d05326c34abb62749c7",
        "STAKING_CONTROL_ROLE": "0xa42eee1333c0758ba72be38e728b6dadb32ea767de5b4ddbaea1dae85b1b051f",
        "STAKING_PAUSE_ROLE": "0x84ea57490227bc2be925c684e2a367071d69890b629590198f4125a018eb1de8",
        "symbol": "stETH",
        "totalSupply": "9099770433819732166673455",
        "UNSAFE_CHANGE_DEPOSITED_VALIDATORS_ROLE": "0xe6dc5d79630c61871e99d341ad72c5a052bed2fc8c79e5a4480a7cd31117576c"
      },
      "implementationNames": {
        "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84": "AppProxyUpgradeable",
        "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb": "Lido"
      }
    },
    {
      "name": "StargateToken",
      "address": "0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6",
      "type": "Contract",
      "sourceHashes": [
        "0xac50167fb1f106a80bc4b42fa94a317588fdc8c18258beeccf85b89d36daa385"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1647504559,
      "sinceBlock": 14402855,
      "values": {
        "$immutable": true,
        "chainId": 1,
        "decimals": 18,
        "endpoint": "0x66A71Dcef29A0fFBDBE3c6a460a3B5BC225Cd675",
        "isMain": true,
        "name": "StargateToken",
        "owner": "0x65bb797c2B9830d891D87288F029ed8dACc19705",
        "paused": false,
        "symbol": "STG",
        "totalSupply": "1000000000000000000000000000"
      },
      "implementationNames": {
        "0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6": "StargateToken"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
          "delay": 172800
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1629667690,
      "sinceBlock": 13077564,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x6933BCC3e96f1C4d2cb73Cb391d854b18Ab7A4F2",
          "0xcbc616D595D38483e6AdC45C7E426f44bF230928",
          "0x17e06ce6914E3969f7BD37D8b2a563890cA1c96e",
          "0xc8dE9f45601DA8C76158b8CAF3E56E8A037F2228",
          "0x6e74053a3798e0fC9a9775F7995316b27f21c4D2"
        ],
        "$threshold": 3,
        "domainSeparator": "0x05773792be342e7f8a01c63a9116de35bdf60190cdf42e31c3e1c2e7760b6dca",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 6618,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "PendleUSDESY",
      "address": "0xb47CBF6697A6518222c7Af4098A43AEFe2739c8c",
      "type": "Contract",
      "sourceHashes": [
        "0xdcf696bbf53dcc48dc72c4b94a28242090b7b2ea21d28db44969f865a1dce88c"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1739967347,
      "sinceBlock": 21880350,
      "values": {
        "$immutable": true,
        "assetInfo": {
          "assetType": 0,
          "assetAddress": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
          "assetDecimals": 18
        },
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x43901220915a269706e6e661c3940dded94b3ea48a83f9d76fc807787313836a",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "SY Ethena USDe",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0xb47CBF6697A6518222c7Af4098A43AEFe2739c8c",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "exchangeRate": "1000000000000000000",
        "getAbsoluteSupplyCap": "400000000000000000000000000",
        "getAbsoluteTotalSupply": "233447850242803247659215193",
        "getRewardTokens": [],
        "getTokensIn": ["0x4c9EDD5852cd905f086C759E8383e09bff1E68B3"],
        "getTokensOut": ["0x4c9EDD5852cd905f086C759E8383e09bff1E68B3"],
        "name": "SY Ethena USDe",
        "owner": "0x2aD631F72fB16d91c4953A7f4260A97C2fE2f31e",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "rewardIndexesStored": [],
        "supplyCap": "400000000000000000000000000",
        "symbol": "SY-USDe",
        "totalSupply": "233447850242803247659215193",
        "yieldToken": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3"
      },
      "implementationNames": {
        "0xb47CBF6697A6518222c7Af4098A43AEFe2739c8c": "PendleUSDESY"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xb61e0E39b6d4030C36A176f576aaBE44BF59Dc78",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x68f689a23d3badd91255602a1eb13d4789baedc16d904c3103244642fc78ca8f"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x947Cb49334e6571ccBFEF1f1f1178d8469D65ec7"
        },
        {
          "permission": "upgrade",
          "from": "0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7"
        }
      ],
      "sinceTimestamp": 1702241207,
      "sinceBlock": 18758282,
      "values": {
        "$immutable": true,
        "owner": "0x49bD9989E31aD35B0A62c20BE86335196A3135B1"
      },
      "implementationNames": {
        "0xb61e0E39b6d4030C36A176f576aaBE44BF59Dc78": "ProxyAdmin"
      }
    },
    {
      "name": "GhoFlashMinter",
      "address": "0xb639D208Bcf0589D54FaC24E655C79EC529762B8",
      "type": "Contract",
      "sourceHashes": [
        "0x59248a12eb66600b236aa1809226e516b9c780963cd688d4ee83b8b7817da452"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1689429779,
      "sinceBlock": 17699249,
      "values": {
        "$immutable": true,
        "ADDRESSES_PROVIDER": "0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e",
        "CALLBACK_SUCCESS": "0x439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
        "getFee": 0,
        "getGhoTreasury": "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c",
        "GHO_TOKEN": "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f",
        "MAX_FEE": 10000
      },
      "implementationNames": {
        "0xb639D208Bcf0589D54FaC24E655C79EC529762B8": "GhoFlashMinter"
      }
    },
    {
      "name": "PendleYieldToken",
      "address": "0xb7E51D15161C49C823f3951D579DEd61cD27272B",
      "type": "Contract",
      "sourceHashes": [
        "0xcf55fc48f1ca357193e2bc9ddc6f3b0004d43bc720d43010b228dc0c9643f496"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1742886059,
      "sinceBlock": 22122290,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "doCacheIndexSameBlock": true,
        "expiry": 1753920000,
        "factory": "0x35A338522a435D46f77Be32C70E215B813D0e3aC",
        "getRewardTokens": [],
        "isExpired": false,
        "name": "YT Ethena sUSDE 31JUL2025",
        "postExpiry": { "firstPYIndex": 0, "totalSyInterestForTreasury": 0 },
        "PT": "0x3b3fB9C57858EF816833dC91565EFcd85D96f634",
        "pyIndexLastUpdatedBlock": 22834375,
        "pyIndexStored": "1179971032278109994",
        "SY": "0xF541AA4d6f29ec2423A0D306dBc677021A02DBC0",
        "symbol": "YT-sUSDE-31JUL2025",
        "syReserve": "1671854352860402805281998611",
        "totalSupply": "1970514046483407201129279855"
      },
      "errors": { "getPostExpiryData": "Processing error occurred." },
      "implementationNames": {
        "0xb7E51D15161C49C823f3951D579DEd61cD27272B": "PendleYieldToken"
      }
    },
    {
      "name": "BalancerGovernanceToken",
      "address": "0xba100000625a3754423978a60c9317c58a424e3D",
      "type": "Contract",
      "sourceHashes": [
        "0x0a9eab0c1dfac7b7b872d65e663935f3d528626de29712093996c1ca07ccfe2f"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1592616779,
      "sinceBlock": 10299683,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0x0f7e6db4bd29f5b0743e892c53690ee939ed780f756e0d021b93ed86993b03f4",
        "MINTER_ROLE": "0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
        "name": "Balancer",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "SNAPSHOT_ROLE": "0x5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f",
        "symbol": "BAL",
        "totalSupply": "68897838839267114516993661",
        "totalSupplyAt": [],
        "version": "1"
      },
      "implementationNames": {
        "0xba100000625a3754423978a60c9317c58a424e3D": "BalancerGovernanceToken"
      }
    },
    {
      "name": "ChainlinkETHUSDPriceConsumer",
      "address": "0xBa6C6EaC41a24F9D39032513f66D738B3559f15a",
      "type": "Contract",
      "sourceHashes": [
        "0x8357208c4ee3ed1d0a224874e37152539c7fe71d50957ee9bb154277cb4440dd"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1607115580,
      "sinceBlock": 11388479,
      "values": {
        "$immutable": true,
        "getDecimals": 8,
        "getLatestPrice": 259844000000
      },
      "implementationNames": {
        "0xBa6C6EaC41a24F9D39032513f66D738B3559f15a": "ChainlinkETHUSDPriceConsumer"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xbae061C73876952aa2C5e483B74DfA785425f879",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x8fd8f837bb320bd2a7463c103bea2ff207b0969b5795f320a6c868858aa92074"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x8236a87084f8B84306f72007F36F2618A5634494"
        }
      ],
      "sinceTimestamp": 1715936519,
      "sinceBlock": 19888667,
      "values": {
        "$immutable": true,
        "owner": "0x055E84e7FE8955E2781010B866f10Ef6E1E77e59",
        "UPGRADE_INTERFACE_VERSION": "5.0.0"
      },
      "implementationNames": {
        "0xbae061C73876952aa2C5e483B74DfA785425f879": "ProxyAdmin"
      }
    },
    {
      "address": "0xBE3c68821D585Cf1552214897a1c091014B1EB0a",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "StakedTokenV1",
      "address": "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704",
      "type": "Contract",
      "sourceHashes": [
        "0x3e6aa5a9e907eadff9fe4df338a8f629966b60307fbbe5956fb9886d74822fd1",
        "0xd3dbde7b05135719d2d2d58952d49300061bc1f4a385239b4b7fd985b83fe2fa"
      ],
      "proxyType": "ZeppelinOS proxy",
      "sinceTimestamp": 1643901537,
      "sinceBlock": 14133762,
      "values": {
        "$admin": "0xDEd1F5e7Fb71c1740AEBc09b6b0a5E24b0cB71d1",
        "$immutable": false,
        "$implementation": "0x31724cA0C982A31fbb5C57f4217AB585271fc9a5",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "admin": "0xDEd1F5e7Fb71c1740AEBc09b6b0a5E24b0cB71d1",
        "blacklister": "0xBE3c68821D585Cf1552214897a1c091014B1EB0a",
        "CANCEL_AUTHORIZATION_TYPEHASH": "0x158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a1597429",
        "currency": "",
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x04f14019d5946f59c261cc47c80cce951ffd35ef52dbed0e2c02d646c9013541",
        "exchangeRate": "1104634937896379463",
        "implementation": "0x31724cA0C982A31fbb5C57f4217AB585271fc9a5",
        "masterMinter": "0xd0F73E06E7b88c8e1da291bB744c4eEBAf9Af59f",
        "name": "Coinbase Wrapped Staked ETH",
        "oracle": "0x9b37180d847B27ADC13C2277299045C1237Ae281",
        "owner": "0xD0f9b590EAe80815b81bE857A21f69d07453560E",
        "paused": false,
        "pauser": "0x46574f57f3F5DFCCd296F80407b3f4778414f8f5",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "RECEIVE_WITH_AUTHORIZATION_TYPEHASH": "0xd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de8",
        "rescuer": "0x0000000000000000000000000000000000000000",
        "symbol": "cbETH",
        "totalSupply": "393750601365061869784889",
        "TRANSFER_WITH_AUTHORIZATION_TYPEHASH": "0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267",
        "version": "2"
      },
      "implementationNames": {
        "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704": "FiatTokenProxy",
        "0x31724cA0C982A31fbb5C57f4217AB585271fc9a5": "StakedTokenV1"
      }
    },
    {
      "name": "FireBridge",
      "address": "0xbee335BB44e75C4794a0b9B54E8027b111395943",
      "type": "Contract",
      "sourceHashes": [
        "0xbbe53a68c0042f4050bdf21e8d16eee4688dd35d24e49740915f0a0cf994f0d6",
        "0x409f6c265bb8661542899c84a8187fca0fd727b33288ac5a05630046ae4aa21d"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1717045667,
      "sinceBlock": 19980473,
      "values": {
        "$admin": "0xD5bc4bc0d8c055fCF2Ba97010c9D32FFc7d424d9",
        "$implementation": "0xC5E2f85CB57350d3aE918d8B038f891f8ED6f6E5",
        "$pastUpgrades": [
          [
            "2024-05-30T05:07:47.000Z",
            "0x46cfb9335677b7f6e27a0d7511e41289138bac1c179ccf1b227b4588bd2b21cc",
            ["0xC5E2f85CB57350d3aE918d8B038f891f8ED6f6E5"]
          ]
        ],
        "$upgradeCount": 1,
        "chain": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "fbtc": "0xC96dE26018A54D51c097160568752c4E3BD6C364",
        "feeModel": "0xd12D39E682715a40dbC860fa07F02bF48841294e",
        "feeRecipient": "0x29990883f3FD3c7A7aDfD37C199F3d48f5cF69CD",
        "getActiveUsers": [
          "0x785fA76b07487683E99A3D84455A13a94ec9088d",
          "0x1DCE591EEe173990a686d686aDd0d957BECAB258",
          "0xf9b0E9a95a7936620Ea979f0E26290F07720cd58",
          "0xaEf8e858696fAd0fb934ce21701Eb8C6D318c1B5",
          "0x3119a1AD5B63A000aB9CA3F2470611eB997B93B9",
          "0xEb28877D7e3DbA5bcd4D0a1474C31F8AFb2d6052",
          "0xd681C5574b7F4E387B608ed9AF5F5Fc88662b37c",
          "0x777B2913b1BB171A83cA3cdf79CB40523Ac76fDb",
          "0x542814D845a0B47f99f000B914053C32D646cF5e",
          "0xfe4EcD930A1282325aeF8e946f17c0E25744de45",
          "0x8FCEcd352DDDa0e04539d13962dBE78aF54BDC08",
          "0xc152d5A599F83B3d0098cbAdb23FcE95F27Ff30B"
        ],
        "getQualifiedUsers": [
          "0x785fA76b07487683E99A3D84455A13a94ec9088d",
          "0x1DCE591EEe173990a686d686aDd0d957BECAB258",
          "0xf9b0E9a95a7936620Ea979f0E26290F07720cd58",
          "0xaEf8e858696fAd0fb934ce21701Eb8C6D318c1B5",
          "0x3119a1AD5B63A000aB9CA3F2470611eB997B93B9",
          "0xEb28877D7e3DbA5bcd4D0a1474C31F8AFb2d6052",
          "0xd681C5574b7F4E387B608ed9AF5F5Fc88662b37c",
          "0x777B2913b1BB171A83cA3cdf79CB40523Ac76fDb",
          "0x542814D845a0B47f99f000B914053C32D646cF5e",
          "0xfe4EcD930A1282325aeF8e946f17c0E25744de45",
          "0x8FCEcd352DDDa0e04539d13962dBE78aF54BDC08",
          "0xc152d5A599F83B3d0098cbAdb23FcE95F27Ff30B"
        ],
        "getRequestById": [
          [
            1,
            1,
            0,
            "0x0100000000000000000000000000000000000000000000000000000000000000",
            "0x62633171646d3777647763786b716630756b336a72637676366e36683838666d66747377366868767761",
            "0x0000000000000000000000000000000000000000000000000000000000000001",
            "0x0000000000000000000000005dda2837686f4ae7803c89e38cb5e444d28b96eb",
            1100000,
            0,
            "0xfc98cdc5d22bbcc25a2673d72c8f13bc81231df7bb0bff36324b302facbec8600000000000000000000000000000000000000000000000000000000000000000"
          ],
          [
            1,
            2,
            1,
            "0x0100000000000000000000000000000000000000000000000000000000000000",
            "0x62633171646d3777647763786b716630756b336a72637676366e36683838666d66747377366868767761",
            "0x0000000000000000000000000000000000000000000000000000000000000001",
            "0x0000000000000000000000005dda2837686f4ae7803c89e38cb5e444d28b96eb",
            1100000,
            0,
            "0xfc98cdc5d22bbcc25a2673d72c8f13bc81231df7bb0bff36324b302facbec8600000000000000000000000000000000000000000000000000000000000000000"
          ],
          [
            3,
            0,
            2,
            "0x0000000000000000000000000000000000000000000000000000000000000001",
            "0x0000000000000000000000005dda2837686f4ae7803c89e38cb5e444d28b96eb",
            "0x0000000000000000000000000000000000000000000000000000000000001388",
            "0x0000000000000000000000005dda2837686f4ae7803c89e38cb5e444d28b96eb",
            40000,
            10000,
            "0x625859ebcf316fc1759a54ec8f9260a53f4a957244795b3bbf3f8156cb1deb74"
          ],
          [
            2,
            2,
            3,
            "0x0000000000000000000000000000000000000000000000000000000000000001",
            "0x0000000000000000000000005dda2837686f4ae7803c89e38cb5e444d28b96eb",
            "0x0100000000000000000000000000000000000000000000000000000000000000",
            "0x6263317166386466727830337268796c6536716c6b3879756332327370716c78786b7076717973346c36",
            10000,
            1000000,
            "0xce072a161f06a6b0612b4d8e18f6131b2d6ddf5dd13d921be1aeedc3d88a30d30000000000000000000000000000000000000000000000000000000000000000"
          ],
          [
            4,
            0,
            4,
            "0x0000000000000000000000000000000000000000000000000000000000001388",
            "0x0000000000000000000000005dda2837686f4ae7803c89e38cb5e444d28b96eb",
            "0x0000000000000000000000000000000000000000000000000000000000000001",
            "0x0000000000000000000000005dda2837686f4ae7803c89e38cb5e444d28b96eb",
            40000,
            10000,
            "0xfaf062316d352d04ff30e4e775c55eb479cf33fb7b324ab1f5c10192e229e58e"
          ]
        ],
        "getValidDstChains": [
          "0x0000000000000000000000000000000000000000000000000000000000001388",
          "0x0000000000000000000000000000000000000000000000000000000000000038",
          "0x000000000000000000000000000000000000000000000000000000000000a4b1",
          "0x0000000000000000000000000000000000000000000000000000000000002105",
          "0x000000000000000000000000000000000000000000000000000000000000ed88",
          "0x0000000000000000000000000000000000000000000000000000000000000092"
        ],
        "MAIN_CHAIN": "0x0100000000000000000000000000000000000000000000000000000000000000",
        "minter": "0x80b534D4bB3D809FbDA809DCB26D3f220634AED7",
        "nonce": 765,
        "owner": "0xD5bc4bc0d8c055fCF2Ba97010c9D32FFc7d424d9",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "requestHashes": [
          "0x632fa7d761cc7a9460e7e7774fb39dac2847a116de2df8aaf80e7c59447b3f15",
          "0xeeeb7a43871796b7ac746d0abfb9680a258dc3afdbc58af5e219c23f70a0d423",
          "0x625859ebcf316fc1759a54ec8f9260a53f4a957244795b3bbf3f8156cb1deb74",
          "0xb524c07affce17b33183df78268cc396216e9f47d5e2dd0b876078ca427aa954",
          "0xf95a78cadd4429ad9d86d9dca110290d7dc4bd6314a9d82c13a48f9de41e3ad7"
        ],
        "UPGRADE_INTERFACE_VERSION": "5.0.0"
      },
      "errors": {
        "getRequestById": "Processing error occurred.",
        "proxiableUUID": "Processing error occurred.",
        "requestHashes": "Processing error occurred."
      },
      "implementationNames": {
        "0xbee335BB44e75C4794a0b9B54E8027b111395943": "ERC1967Proxy",
        "0xC5E2f85CB57350d3aE918d8B038f891f8ED6f6E5": "FireBridge"
      }
    },
    {
      "name": "ProxyERC20",
      "address": "0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",
      "type": "Contract",
      "sourceHashes": [
        "0x92e331fe4114ac2f89d5a81d1660e3e3fd7bf68fa357df90830934d0c3d081eb"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1565329008,
      "sinceBlock": 8314597,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "name": "Synthetix Network Token",
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "owner": "0xEb3107117FEAd7de89Cd14D463D340A2E6917769",
        "symbol": "SNX",
        "target": "0xc5f0b4194455e0C175ab68C501400e46C7203504",
        "totalSupply": "343889850096773602815691648",
        "useDELEGATECALL": false
      },
      "implementationNames": {
        "0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F": "ProxyERC20"
      }
    },
    {
      "name": "WETH9",
      "address": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
      "type": "Contract",
      "sourceHashes": [
        "0xec8c1fea9a5a10c4c028664a56d678a0776b07cfc510fc7fa54db0aed0978f49"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1513077455,
      "sinceBlock": 4719568,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "name": "Wrapped Ether",
        "symbol": "WETH",
        "totalSupply": "2692781747901131884983535"
      },
      "implementationNames": {
        "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2": "WETH9"
      }
    },
    {
      "name": "USDtb",
      "address": "0xC139190F447e929f090Edeb554D95AbB8b18aC1C",
      "type": "Contract",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xa4cb9d193bb7fa4fa4b8d680dc666d3b9a2c548b1fdb6b3ddc5cf4837e04357a"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1732810019,
      "sinceBlock": 21287284,
      "values": {
        "$admin": "0x3C405F68d5C6eCE868e5646cAC926679839aCd68",
        "$implementation": "0xea8A763b5b1f9c9c7aeA64F33947448D9E39e475",
        "$pastUpgrades": [
          [
            "2024-11-28T16:06:59.000Z",
            "0xf6624af8159eff7dbce15a235de4a78e2c6109dec6c4e58e510eb03b4bee00b6",
            ["0xea8A763b5b1f9c9c7aeA64F33947448D9E39e475"]
          ]
        ],
        "$upgradeCount": 1,
        "BLACKLIST_MANAGER_ROLE": "0xf988e4fb62b8e14f4820fed03192306ddf4d7dbfa215595ba1c6ba4b76b369ee",
        "BLACKLISTED_ROLE": "0x548c7f0307ab2a7ea894e5c7e8c5353cc750bb9385ee2e945f189a9a83daa8ed",
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0xe7a74087d58b086d71867cd379c47ddbd06d10ce31606582d60fb5624736a7f2",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "USDtb",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0xC139190F447e929f090Edeb554D95AbB8b18aC1C",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "MINTER_CONTRACT": "0x5e60f7acd354195c64e1c2c1e3ac5d68aea74bb6f1bf6b3a464c08e4b2fce804",
        "name": "USDtb",
        "owner": "0xe897D8620D5EbA2C8ecAAF0aDa191a23230aB8Ec",
        "symbol": "USDtb",
        "totalSupply": "1462033706464080363000000000",
        "transferState": 2,
        "WHITELIST_MANAGER_ROLE": "0x2a3dab589bcc9747970dd85ac3f222668741ae51f2a1bbb8f8355be28dd8a868",
        "WHITELISTED_ROLE": "0x8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b49"
      },
      "implementationNames": {
        "0xC139190F447e929f090Edeb554D95AbB8b18aC1C": "TransparentUpgradeableProxy",
        "0xea8A763b5b1f9c9c7aeA64F33947448D9E39e475": "USDtb"
      }
    },
    {
      "name": "ENSToken",
      "address": "0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72",
      "type": "Contract",
      "sourceHashes": [
        "0x209ca72457865ffe8429de8b5af4829da43a3969eb73e3be2ce62238b8af54d7"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1635800117,
      "sinceBlock": 13533418,
      "values": {
        "$immutable": true,
        "claimPeriodEnds": 1651622400,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x3172a7257acc6467eb985cfb1d52917228ac18e308bae31d65407e0983bd10a2",
        "getPastTotalSupply": [0, 0, 0, 0, 0],
        "isClaimed": [true, true, true, false, false],
        "merkleRoot": "0xaca22207fc31a4c3ecd6ab11ce2df3db64b8afeba4f31db2b9aeb76f1dada659",
        "minimumMintInterval": 31536000,
        "mintCap": 200,
        "name": "Ethereum Name Service",
        "nextMint": 1667336117,
        "owner": "0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7",
        "symbol": "ENS",
        "totalSupply": "100000000000000000000000000"
      },
      "errors": {
        "getPastTotalSupply": "Processing error occurred.",
        "isClaimed": "Processing error occurred."
      },
      "implementationNames": {
        "0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72": "ENSToken"
      }
    },
    {
      "name": "ACLManager",
      "address": "0xc2aaCf6553D20d1e9d78E365AAba8032af9c85b0",
      "type": "Contract",
      "sourceHashes": [
        "0x425b3258535c78df5266359c3bdc2475381b1687b101fbfe7d6c3dfebe2dd251"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1672325375,
      "sinceBlock": 16291117,
      "values": {
        "$immutable": true,
        "ADDRESSES_PROVIDER": "0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e",
        "ASSET_LISTING_ADMIN_ROLE": "0x19c860a63258efbd0ecb7d55c626237bf5c2044c26c073390b74f0c13c857433",
        "BRIDGE_ROLE": "0x08fb31c3e81624356c3314088aa971b73bcc82d22bc3e3b184b4593077ae3278",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EMERGENCY_ADMIN_ROLE": "0x5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb",
        "FLASH_BORROWER_ROLE": "0x939b8dfb57ecef2aea54a93a15e86768b9d4089f1ba61c245e6ec980695f4ca4",
        "POOL_ADMIN_ROLE": "0x12ad05bde78c5ab75238ce885307f96ecd482bb402ef831f99e7018a0f169b7b",
        "RISK_ADMIN_ROLE": "0x8aa855a911518ecfbe5bc3088c8f3dda7badf130faaf8ace33fdc33828e18167"
      },
      "implementationNames": {
        "0xc2aaCf6553D20d1e9d78E365AAba8032af9c85b0": "ACLManager"
      }
    },
    {
      "name": "EModeLogic",
      "address": "0xC31d2362fAeD85dF79d0bec99693D0EB0Abd3f74",
      "type": "Contract",
      "sourceHashes": [
        "0x8ddc42fbeeab2e80105f73b98f99748ec2d1c297072cf79241869f6ab53ae371"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1738757723,
      "sinceBlock": 21780228,
      "values": { "$immutable": true },
      "implementationNames": {
        "0xC31d2362fAeD85dF79d0bec99693D0EB0Abd3f74": "EModeLogic"
      }
    },
    {
      "name": "TokenMinter",
      "address": "0xc4922d64a24675E16e1586e3e3Aa56C06fABe907",
      "type": "Contract",
      "template": "tokens/circle/TokenMinter",
      "sourceHashes": [
        "0xe3726a2ed0f748a5239bddbe87c3c53ab18fe03308c167092fb98d970396ec63"
      ],
      "proxyType": "immutable",
      "description": "Part of CCTP: Used for automated access control for minting.",
      "sinceTimestamp": 1677628319,
      "sinceBlock": 16730031,
      "values": {
        "$immutable": true,
        "localTokenMessenger": "0xBd3fa81B58Ba92a82136038B25aDec7066af3155",
        "owner": "0x01430Aa44F14007c8d5Ddc011FA63dCcE7878dC8",
        "paused": false,
        "pauser": "0x817ae4109dC0f21E437b94c899962690514Ba09f",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "rescuer": "0x96D16c491aDA31f609eC72Ae33018b8B7e80EB41",
        "tokenController": "0x8a9A13A106cB89E15410B2AB4488135155032169"
      },
      "implementationNames": {
        "0xc4922d64a24675E16e1586e3e3Aa56C06fABe907": "TokenMinter"
      }
    },
    {
      "name": "Synthetix",
      "address": "0xc5f0b4194455e0C175ab68C501400e46C7203504",
      "type": "Contract",
      "sourceHashes": [
        "0xd7046934702c629e9996e141d063d6917cf788d54e94dba7f8db1b4d6dcce506"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1724075735,
      "sinceBlock": 20563106,
      "values": {
        "$immutable": true,
        "anySynthOrSNXRateIsInvalid": false,
        "availableCurrencyKeys": [
          "0x7355534400000000000000000000000000000000000000000000000000000000",
          "0x7345555200000000000000000000000000000000000000000000000000000000",
          "0x734a505900000000000000000000000000000000000000000000000000000000",
          "0x7341554400000000000000000000000000000000000000000000000000000000",
          "0x7347425000000000000000000000000000000000000000000000000000000000",
          "0x7343484600000000000000000000000000000000000000000000000000000000",
          "0x734b525700000000000000000000000000000000000000000000000000000000",
          "0x7342544300000000000000000000000000000000000000000000000000000000",
          "0x7345544800000000000000000000000000000000000000000000000000000000",
          "0x7345544842544300000000000000000000000000000000000000000000000000"
        ],
        "availableSynthCount": 10,
        "availableSynths": [
          "0x10A5F7D9D65bCc2734763444D4940a31b109275f",
          "0xa8E31E3C38aDD6052A9407298FAEB8fD393A6cF9",
          "0xE1cc2332852B2Ac0dA59A1f9D3051829f4eF3c1C",
          "0xfb020CA7f4e8C4a5bBBe060f59a249c6275d2b69",
          "0xdc883b9d9Ee16f74bE08826E68dF4C9D9d26e8bD"
        ],
        "CONTRACT_NAME": "0x53796e7468657469780000000000000000000000000000000000000000000000",
        "decimals": 18,
        "DECIMALS": 18,
        "isResolverCached": true,
        "messageSender": "0x0D0452f487D1EDc869d1488ae984590ca2900D2F",
        "name": "Synthetix Network Token",
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "owner": "0xEb3107117FEAd7de89Cd14D463D340A2E6917769",
        "proxy": "0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",
        "resolver": "0x4E3b31eB0E5CB73641EE1E65E7dCEFe520bA3ef2",
        "resolverAddressesRequired": [
          "0x53797374656d5374617475730000000000000000000000000000000000000000",
          "0x45786368616e6765720000000000000000000000000000000000000000000000",
          "0x4973737565720000000000000000000000000000000000000000000000000000",
          "0x52657761726473446973747269627574696f6e00000000000000000000000000",
          "0x4c697175696461746f7252657761726473000000000000000000000000000000",
          "0x4c697175696461746f7200000000000000000000000000000000000000000000",
          "0x526577617264457363726f775632000000000000000000000000000000000000",
          "0x526577617264457363726f770000000000000000000000000000000000000000",
          "0x537570706c795363686564756c65000000000000000000000000000000000000"
        ],
        "sUSD": "0x7355534400000000000000000000000000000000000000000000000000000000",
        "symbol": "SNX",
        "TOKEN_NAME": "Synthetix Network Token",
        "TOKEN_SYMBOL": "SNX",
        "tokenState": "0x5b1b5fEa1b99D83aD479dF0C222F0492385381dD",
        "totalSupply": "343889850096773602815691648"
      },
      "errors": { "availableSynths": "Processing error occurred." },
      "implementationNames": {
        "0xc5f0b4194455e0C175ab68C501400e46C7203504": "Synthetix"
      }
    },
    {
      "name": "MultiSigWallet",
      "address": "0xC6CDE7C39eB2f0F0095F41570af89eFC2C1Ea828",
      "type": "Contract",
      "sourceHashes": [
        "0xf716f94059215d0e4c8d8edf41e5a65e741bce5005c2afee04eaafcf5c210d20"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1505129111,
      "sinceBlock": 4262126,
      "values": {
        "$immutable": true,
        "getConfirmationCount": [0, 0, 0, 0, 0],
        "getConfirmations": [[], [], [], [], []],
        "getOwners": [
          "0xAC3B242E2E561da9F4cE34746E67d004E6341FA0",
          "0xEe5207d3c88562fc814496Af0845B34CFD4afc8c",
          "0x61D5a4d5Bd270e59E9320243e574288e2a199fED",
          "0x25bB61643e4881147E6aabb65e6DD45CF2904155",
          "0x4096a34E582664F969753b34dA6E72D55b3C85C1",
          "0x4D915Dd2c56814BD3Db51a1dA35b302BCC9c8973"
        ],
        "isConfirmed": [false, false, false, false, false],
        "MAX_OWNER_COUNT": 50,
        "owners": [
          "0xAC3B242E2E561da9F4cE34746E67d004E6341FA0",
          "0xEe5207d3c88562fc814496Af0845B34CFD4afc8c",
          "0x61D5a4d5Bd270e59E9320243e574288e2a199fED",
          "0x25bB61643e4881147E6aabb65e6DD45CF2904155",
          "0x4096a34E582664F969753b34dA6E72D55b3C85C1"
        ],
        "required": 3,
        "transactionCount": 4368,
        "transactions": [
          [
            "0xC6CDE7C39eB2f0F0095F41570af89eFC2C1Ea828",
            0,
            "0x7065cb48000000000000000000000000008c28da422010b6b8a47fdf0b4640297bfeb85b",
            false
          ],
          ["0x008C28DA422010B6b8A47Fdf0B4640297BfEB85B", 0, "0x", true],
          [
            "0xC6CDE7C39eB2f0F0095F41570af89eFC2C1Ea828",
            0,
            "0x7065cb4800000000000000000000000036928500bc1dcd7af6a2b4008875cc336b927d57",
            true
          ],
          [
            "0xC6CDE7C39eB2f0F0095F41570af89eFC2C1Ea828",
            0,
            "0xcc872b6600000000000000000000000000000000000000000000000000000002540be400",
            true
          ],
          [
            "0xd697A61D5FB4e076125e0bE647f902b02bb3A0F1",
            0,
            "0xcc872b6600000000000000000000000000000000000000000000000000000002540be400",
            true
          ]
        ]
      },
      "errors": {
        "getConfirmationCount": "Processing error occurred.",
        "getConfirmations": "Processing error occurred.",
        "isConfirmed": "Processing error occurred.",
        "owners": "Processing error occurred.",
        "transactions": "Processing error occurred."
      },
      "implementationNames": {
        "0xC6CDE7C39eB2f0F0095F41570af89eFC2C1Ea828": "MultiSigWallet"
      }
    },
    {
      "name": "Bascule",
      "address": "0xc750eCAC7250E0D18ecE2C7a5F130E3A765dc260",
      "type": "Contract",
      "sourceHashes": [
        "0x956977faac22fd2cd624f45890bace3649a4bf2a48ec08a6f5f4d6904653b081"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1724233979,
      "sinceBlock": 20576223,
      "values": {
        "$immutable": true,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdmin": "0xC8bd11c94B1924bE97b4d3215F38fCcd15320889",
        "defaultAdminDelay": 259200,
        "defaultAdminDelayIncreaseWait": 432000,
        "DEPOSIT_REPORTER_ROLE": "0x5942d91f69077c4aaa298136f517c79177d0dad273c077e196539e790f5f8d22",
        "maxDeposits": 100,
        "owner": "0xC8bd11c94B1924bE97b4d3215F38fCcd15320889",
        "paused": false,
        "PAUSER_ROLE": "0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
        "pendingDefaultAdmin": {
          "newAdmin": "0x0000000000000000000000000000000000000000",
          "schedule": 0
        },
        "pendingDefaultAdminDelay": { "newDelay": 0, "schedule": 0 },
        "validateThreshold": 0,
        "VALIDATION_GUARDIAN_ROLE": "0x06904834513b9a81987b5067c3608157edee7343caee98cdd5cbbc7c4f2a1af1",
        "WITHDRAWAL_VALIDATOR_ROLE": "0xcced9224ba5571ce4155eb796e0581b0964573d2b535512568d9bd352985bd70"
      },
      "implementationNames": {
        "0xc750eCAC7250E0D18ecE2C7a5F130E3A765dc260": "Bascule"
      }
    },
    {
      "name": "crvUSD ControllerFactory",
      "address": "0xC9332fdCB1C491Dcc683bAe86Fe3cb70360738BC",
      "type": "Contract",
      "sourceHashes": [
        "0x8c3624233d85a570130a5b14c6e8433bbfcfb6feb16a8946df77a9159d634970"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1684065503,
      "sinceBlock": 17257955,
      "values": {
        "$immutable": true,
        "admin": "0x40907540d8a6C65c637785e8f8B742ae6b0b9968",
        "amm_implementation": "0x2B7e624bdb839975d56D8428d9f6A4cf1160D3e9",
        "amms": [
          "0x136e783846ef68C8Bd00a3369F787dF8d683a696",
          "0x37417B2238AA52D0DD2D6252d989E728e8f706e4",
          "0xE0438Eb3703bF871E31Ce639bd351109c88666ea",
          "0x1681195C176239ac5E72d9aeBaCf5b2492E0C4ee",
          "0xfA96ad0a9E64261dB86950e2dA362f5572c5c6fd"
        ],
        "collaterals": [
          "0xac3E018457B222d93114458476f3E3416Abbe38F",
          "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
          "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",
          "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
          "0xac3E018457B222d93114458476f3E3416Abbe38F"
        ],
        "controller_implementation": "0xe3e3Fb7E9f48d26817b7210C9bD6B22744790415",
        "controllers": [
          "0x8472A9A7632b173c8Cf3a86D3afec50c35548e76",
          "0x100dAa78fC509Db39Ef7D04DE0c1ABD299f4C6CE",
          "0x4e59541306910aD6dC1daC0AC9dFB29bD9F15c67",
          "0xA920De414eA4Ab66b97dA1bFE9e6EcA7d4219635",
          "0xEC0820EfafC41D8943EE8dE495fC9Ba8495B15cf"
        ],
        "fee_receiver": "0x2dFd89449faff8a532790667baB21cF733C064f2",
        "n_collaterals": 9,
        "stablecoin": "0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",
        "total_debt": "111619454574728279445871688",
        "WETH": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "errors": {
        "amms": "Processing error occurred.",
        "collaterals": "Processing error occurred.",
        "controllers": "Processing error occurred."
      },
      "implementationNames": {
        "0xC9332fdCB1C491Dcc683bAe86Fe3cb70360738BC": "crvUSD ControllerFactory"
      }
    },
    {
      "name": "FBTC",
      "address": "0xC96dE26018A54D51c097160568752c4E3BD6C364",
      "type": "Contract",
      "sourceHashes": [
        "0x6008a2ea7740df182ebdffd1b51ac41ea26922699ca4f64272d4575b3d4d2fe6"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1717045667,
      "sinceBlock": 19980473,
      "values": {
        "$immutable": true,
        "bridge": "0xbee335BB44e75C4794a0b9B54E8027b111395943",
        "decimals": 8,
        "name": "Fire Bitcoin",
        "owner": "0xD5bc4bc0d8c055fCF2Ba97010c9D32FFc7d424d9",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
        "symbol": "FBTC",
        "totalSupply": 114777165294,
        "UPGRADE_INTERFACE_VERSION": "5.0.0"
      },
      "implementationNames": {
        "0xC96dE26018A54D51c097160568752c4E3BD6C364": "FBTC"
      }
    },
    {
      "name": "Controller",
      "address": "0xCA06411bd7a7296d7dbdd0050DFc846E95fEBEB7",
      "type": "Contract",
      "sourceHashes": [
        "0x835ecb378a0642f647cdac159997163d9bcc5f2d19bdeebb0558ee38f1119dd1"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1543095972,
      "sinceBlock": 6766286,
      "values": {
        "$immutable": true,
        "factory": "0xe5A5F138005E19A3E6D0FE68b039397EeEf2322b",
        "getWBTC": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",
        "members": "0x3e8640574aa764763291eD733672D3A105107ac5",
        "owner": "0x972Eed35781f09987a5c40F761f6A24623C570DE",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "token": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"
      },
      "implementationNames": {
        "0xCA06411bd7a7296d7dbdd0050DFc846E95fEBEB7": "Controller"
      }
    },
    {
      "name": "FiatTokenV2_1",
      "address": "0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf",
      "type": "Contract",
      "sourceHashes": [
        "0x3e6aa5a9e907eadff9fe4df338a8f629966b60307fbbe5956fb9886d74822fd1",
        "0x11a20425a99e50b61ba8470548b4f5f028df884961288990f908a911b4c045ab"
      ],
      "proxyType": "ZeppelinOS proxy",
      "sinceTimestamp": 1724165531,
      "sinceBlock": 20570548,
      "values": {
        "$admin": "0x5e8114643966B7FD7d5CfdD8695FfC5c51fF32c0",
        "$immutable": false,
        "$implementation": "0x7458bfDC30034EB860B265E6068121D18Fa5Aa72",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "admin": "0x5e8114643966B7FD7d5CfdD8695FfC5c51fF32c0",
        "blacklister": "0xE34Fd8e02815125aB0947434e42978a8A4e70906",
        "CANCEL_AUTHORIZATION_TYPEHASH": "0x158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a1597429",
        "currency": "",
        "decimals": 8,
        "DOMAIN_SEPARATOR": "0xc494d0a26b417710c9dadc1c9a60d2baef40670a17dfca62c744ab733ad9c5d4",
        "implementation": "0x7458bfDC30034EB860B265E6068121D18Fa5Aa72",
        "masterMinter": "0x1302dFb1F806398f48650c75ab0fDA9a0186f47B",
        "name": "Coinbase Wrapped BTC",
        "owner": "0xCe56D20689D836EC7A728CEb94A15746696c16e6",
        "paused": false,
        "pauser": "0x1ac78dfcAE082E9fe286D1ccb12C17a3e906B906",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "RECEIVE_WITH_AUTHORIZATION_TYPEHASH": "0xd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de8",
        "rescuer": "0x0000000000000000000000000000000000000000",
        "symbol": "cbBTC",
        "totalSupply": 2837764994229,
        "TRANSFER_WITH_AUTHORIZATION_TYPEHASH": "0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267",
        "version": "2"
      },
      "implementationNames": {
        "0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf": "FiatTokenProxy",
        "0x7458bfDC30034EB860B265E6068121D18Fa5Aa72": "FiatTokenV2_1"
      }
    },
    {
      "address": "0xCd1b5b2E6C1ff8b606cF4B5731e2f3361474c01b",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "WeETH",
      "address": "0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee",
      "type": "Contract",
      "sourceHashes": [
        "0xc7d4ded9ae90035f03bfae2562d8f70dc9e940557a004fefa9bbe8c6473e092c",
        "0x19512687ecef7b4930bc83457259be6ab075dd51c3d082c760ab01f17a0634f5"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1689005159,
      "sinceBlock": 17664336,
      "values": {
        "$admin": "0x9f26d4C958fD811A1F59B01B86Be7dFFc9d20761",
        "$implementation": "0x353E98F34b6E5a8D9d1876Bf6dF01284d05837cB",
        "$pastUpgrades": [
          [
            "2023-07-10T16:05:59.000Z",
            "0xa034bdf7ec3b407125fcfbb786d908b0bcfd9976f2fbaf489776ba58b9db61ac",
            ["0xDd78355BcF9a9435BFcDd9C1482C0e72E7b08F79"]
          ],
          [
            "2023-11-09T22:40:35.000Z",
            "0x326cb1804e8cf14873823c55f1a2c6114da5bb472c23d9f4e84b8dc74d3d6bc3",
            ["0xe629ee84C1Bd9Ea9c677d2D5391919fCf5E7d5D9"]
          ],
          [
            "2025-03-26T13:28:59.000Z",
            "0x3bd34099cfa575d25c80264e55e46c47aeec28ba3088bdcdae76075b41015389",
            ["0x353E98F34b6E5a8D9d1876Bf6dF01284d05837cB"]
          ]
        ],
        "$upgradeCount": 3,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xe481930428c599d86cf3522b2e43b0e3006041a472f66cb41fa924ac01d3a22b",
        "eETH": "0x35fA164735182de50811E8e2E824cFb9B6118ac2",
        "getEETHByWeETH": [0, 1, 2, 3, 4],
        "getImplementation": "0x353E98F34b6E5a8D9d1876Bf6dF01284d05837cB",
        "getRate": "1071216303221139688",
        "getWeETHByeETH": [0, 0, 1, 2, 3],
        "liquidityPool": "0x308861A430be4cce5502d0A12724771Fc6DaF216",
        "name": "Wrapped eETH",
        "owner": "0x9f26d4C958fD811A1F59B01B86Be7dFFc9d20761",
        "symbol": "weETH",
        "totalSupply": "2422901029082671932896871"
      },
      "errors": {
        "getEETHByWeETH": "Processing error occurred.",
        "getWeETHByeETH": "Processing error occurred.",
        "proxiableUUID": "Processing error occurred."
      },
      "implementationNames": {
        "0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee": "UUPSProxy",
        "0x353E98F34b6E5a8D9d1876Bf6dF01284d05837cB": "WeETH"
      }
    },
    {
      "address": "0xCe56D20689D836EC7A728CEb94A15746696c16e6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Vyper_contract",
      "address": "0xd061D61a4d941c39E5453435B6345Dc261C2fcE0",
      "type": "Contract",
      "sourceHashes": [
        "0x91a5ecb1e71e91366a29ccc235cfc230fdf738dba28a440d0d03208ed80c5aa7"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1597271753,
      "sinceBlock": 10647887,
      "values": {
        "$immutable": true,
        "controller": "0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB",
        "token": "0xD533a949740bb3306d119CC777fa900bA034cd52"
      },
      "implementationNames": {
        "0xd061D61a4d941c39E5453435B6345Dc261C2fcE0": "Vyper_contract"
      }
    },
    {
      "address": "0xd0F73E06E7b88c8e1da291bB744c4eEBAf9Af59f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xD0f9b590EAe80815b81bE857A21f69d07453560E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "RocketTokenRPL",
      "address": "0xD33526068D116cE69F19A9ee46F0bd304F21A51f",
      "type": "Contract",
      "sourceHashes": [
        "0xfb54bbf11b2a91d4d57daebab06df7e2562bd57b5fdd80093680d9671490efd8"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1632980703,
      "sinceBlock": 13325306,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "getInflationCalcTime": 1749102114,
        "getInflationIntervalRate": "1000133680617113500",
        "getInflationIntervalsPassed": 27,
        "getInflationIntervalStartTime": 1633066914,
        "getInflationIntervalTime": 86400,
        "getInflationRewardsContractAddress": "0xEE4d2A71cF479e0D3d0c3c2C923dbfEB57E73111",
        "inflationCalculate": "77609568536911065813354",
        "name": "Rocket Pool Protocol",
        "symbol": "RPL",
        "totalSupply": "21464863961220683932860498",
        "totalSwappedRPL": "16007120733031326627297744",
        "version": 1
      },
      "implementationNames": {
        "0xD33526068D116cE69F19A9ee46F0bd304F21A51f": "RocketTokenRPL"
      }
    },
    {
      "name": "Vyper_contract",
      "address": "0xD533a949740bb3306d119CC777fa900bA034cd52",
      "type": "Contract",
      "sourceHashes": [
        "0xcf420f9cfc66c2ffd6674975754bcebfbf67a213416becb6748309bd6ab853a9"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1597270648,
      "sinceBlock": 10647806,
      "values": {
        "$immutable": true,
        "admin": "0x40907540d8a6C65c637785e8f8B742ae6b0b9968",
        "available_supply": "2288634907310217076092889597",
        "decimals": 18,
        "mining_epoch": 4,
        "minter": "0xd061D61a4d941c39E5453435B6345Dc261C2fcE0",
        "name": "Curve DAO Token",
        "rate": "4357167728944698747",
        "start_epoch_time": 1723501048,
        "symbol": "CRV",
        "totalSupply": "2278390382339694943713932718"
      },
      "implementationNames": {
        "0xD533a949740bb3306d119CC777fa900bA034cd52": "Vyper_contract"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0xD5bc4bc0d8c055fCF2Ba97010c9D32FFc7d424d9",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0xbee335BB44e75C4794a0b9B54E8027b111395943"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1716445067,
      "sinceBlock": 19930740,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x76dffD8677a2b008557178E28BaEd443414eD77e",
          "0x3b271f19385e35111f7e375E20b148c8aa777076",
          "0xe1E6E2166e045F5ff02c9EBFb9b3ca98CEE96063",
          "0xd816c1552eE62bA3aBb1306879941F239FA6Cf83",
          "0xE192BeBd1784f5F0d67979d2A4Af903a4378Ad00",
          "0xfddBEb376c4AaD1DB4eBD66f3b797b7ed776d001",
          "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
          "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
        ],
        "$threshold": 5,
        "domainSeparator": "0x217a62073d85441f7a22a7331e435b1564a637ec320e90f4940de069d7e6c28a",
        "getChainId": 1,
        "GnosisSafe_modules": ["0x09e4c43eD89E5972df026d94FdA3a7680637c59A"],
        "multisigThreshold": "5 of 8 (63%)",
        "nonce": 7,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xD5bc4bc0d8c055fCF2Ba97010c9D32FFc7d424d9": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "TetherToken",
      "address": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
      "type": "Contract",
      "sourceHashes": [
        "0x19ff7ee5145c2818dcae024f3bf78a4ae1900c509ac5b50e25be8234f0ccc7d3"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1511829681,
      "sinceBlock": 4634748,
      "values": {
        "_totalSupply": "73812341693005909",
        "$immutable": true,
        "basisPointsRate": 0,
        "decimals": 6,
        "deprecated": false,
        "getOwner": "0xC6CDE7C39eB2f0F0095F41570af89eFC2C1Ea828",
        "MAX_UINT": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maximumFee": 0,
        "name": "Tether USD",
        "owner": "0xC6CDE7C39eB2f0F0095F41570af89eFC2C1Ea828",
        "paused": false,
        "symbol": "USDT",
        "totalSupply": "73812341693005909",
        "upgradedAddress": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0xdAC17F958D2ee523a2206206994597C13D831ec7": "TetherToken"
      }
    },
    {
      "name": "Consortium",
      "address": "0xdad58DfA5c1a7a34419AFdBE1f0d610efeea95E4",
      "type": "Contract",
      "sourceHashes": [
        "0x8c407edc4ac1fa1cea2c45903e2cf0158906a2ff39fc2eb92aca3ca9f0d43ed8",
        "0x5705ee56bea0cc7ffde2c994136242d673a9b8145f15a340a42af6263aa87a5a"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1735220567,
      "sinceBlock": 21487009,
      "values": {
        "$admin": "0x1629AE77cC70DaAc95Ec479caAEA23ECE77c67c5",
        "$implementation": "0x9F8048C81d00DA5e757E20Ad5Fc89f8a32c5478e",
        "$pastUpgrades": [
          [
            "2024-12-26T13:42:47.000Z",
            "0x1bc92628fadea22dcc249b347ec0e499a2ccefd2b70f7180f0d7673660d8d622",
            ["0x9F8048C81d00DA5e757E20Ad5Fc89f8a32c5478e"]
          ]
        ],
        "$upgradeCount": 1,
        "curEpoch": 17,
        "getValidatorSet": [
          [[], [], 0],
          [[], [], 0],
          [[], [], 0],
          [[], [], 0],
          [
            [
              "0x68f830fb84B7D10f130561d7deCf22D00d0EDb1a",
              "0x4076832c496fBc4F2576f497FF9b697d114174d9",
              "0x9d224c7B54EaA798Ea9f0c4DbC93D47ba73A46aB",
              "0xc9661b060b24bcf9b02896d19B80EbD0aA0e0340",
              "0x484F56e434c91a5fAE0273ba697564BB038A2478"
            ],
            [1, 1, 1, 1, 1],
            4
          ]
        ],
        "owner": "0x251a604E8E8f6906d60f8dedC5aAeb8CD38F4892",
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      },
      "errors": { "getValidatorSet": "Processing error occurred." },
      "implementationNames": {
        "0xdad58DfA5c1a7a34419AFdBE1f0d610efeea95E4": "TransparentUpgradeableProxy",
        "0x9F8048C81d00DA5e757E20Ad5Fc89f8a32c5478e": "Consortium"
      }
    },
    {
      "name": "Usds",
      "address": "0xdC035D45d973E3EC169d2276DDab16f1e407384F",
      "type": "Contract",
      "sourceHashes": [
        "0xbbe53a68c0042f4050bdf21e8d16eee4688dd35d24e49740915f0a0cf994f0d6",
        "0x3511bc489974e8a833d7590187eaab4f8835886bdcb8fff1ea63b7b4caaab165"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1725290327,
      "sinceBlock": 20663730,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x1923DfeE706A8E78157416C29cBCCFDe7cdF4102",
        "$pastUpgrades": [
          [
            "2024-09-02T15:18:47.000Z",
            "0xdf7d4ba4114f654a4ef64f74099be3fc91358610078febe5be68af6cf257b21c",
            ["0x1923DfeE706A8E78157416C29cBCCFDe7cdF4102"]
          ]
        ],
        "$upgradeCount": 1,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x2bc1b7e1bb385a0b6eeb599e6bf1dc875f0933b1a91bea26cf895ebdee2a5b56",
        "getImplementation": "0x1923DfeE706A8E78157416C29cBCCFDe7cdF4102",
        "name": "USDS Stablecoin",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "symbol": "USDS",
        "totalSupply": "4256885408017218860802844612",
        "UPGRADE_INTERFACE_VERSION": "5.0.0",
        "version": "1"
      },
      "errors": { "proxiableUUID": "Processing error occurred." },
      "implementationNames": {
        "0xdC035D45d973E3EC169d2276DDab16f1e407384F": "ERC1967Proxy",
        "0x1923DfeE706A8E78157416C29cBCCFDe7cdF4102": "Usds"
      }
    },
    {
      "name": "KyberNetworkCrystal",
      "address": "0xdd974D5C2e2928deA5F71b9825b8b646686BD200",
      "type": "Contract",
      "sourceHashes": [
        "0x63d101e030fdda8b099fce0ef163547338f01695c45c9e474785435d612270d0"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1505194399,
      "sinceBlock": 4264898,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "name": "Kyber Network Crystal",
        "owner": "0xFDF28Bf25779ED4cA74e958d54653260af604C20",
        "saleEndTime": 1506232800,
        "saleStartTime": 1505455200,
        "symbol": "KNC",
        "tokenSaleContract": "0xd6Cd31F283d24cfb442cBA1Bcf42290c07C15792",
        "totalSupply": "12070433520214856915352845"
      },
      "implementationNames": {
        "0xdd974D5C2e2928deA5F71b9825b8b646686BD200": "KyberNetworkCrystal"
      }
    },
    {
      "address": "0xDEd1F5e7Fb71c1740AEBc09b6b0a5E24b0cB71d1",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704"
        }
      ]
    },
    {
      "name": "KyberNetworkTokenV2",
      "address": "0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202",
      "type": "Contract",
      "sourceHashes": [
        "0xdb3bef89a228d50af48f4cf15733111b6aafeed38fb487368076047f0272b282",
        "0xc13edc21c4369901edb86a3820df16f3d4cb9b042e6e4e37e95008ebda2bc581"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1618218294,
      "sinceBlock": 12224343,
      "values": {
        "$admin": "0x500180A94cB854e98770872AF4E4BB1dD67Af559",
        "$implementation": "0xe5E8E834086F1a964f9A089eB6Ae11796862e4CE",
        "$pastUpgrades": [
          [
            "2021-04-12T09:17:45.000Z",
            "0xa35dad363aa86e659ae3d2574a0b833abed2047f6c078aa462b04da482cb452e",
            ["0xe5E8E834086F1a964f9A089eB6Ae11796862e4CE"]
          ]
        ],
        "$upgradeCount": 1,
        "decimals": 18,
        "minter": "0x7d4d05B1a1E5775a9C6ca248ABBE629B52C1D9D9",
        "name": "Kyber Network Crystal v2",
        "oldKNC": "0xdd974D5C2e2928deA5F71b9825b8b646686BD200",
        "owner": "0x3EB01B3391EA15CE752d01Cf3D3F09deC596F650",
        "symbol": "KNC",
        "totalSupply": "240231116485812732368984957"
      },
      "implementationNames": {
        "0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202": "AdminUpgradeabilityProxy",
        "0xe5E8E834086F1a964f9A089eB6Ae11796862e4CE": "KyberNetworkTokenV2"
      }
    },
    {
      "address": "0xDf81c82A3e02330Bb03C9b31015f32e2dac470dE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SimpleMultiSig",
      "address": "0xE25a329d385f77df5D4eD56265babe2b99A5436e",
      "type": "Contract",
      "sourceHashes": [
        "0x7987e1e85ee2c00e7d5f4c12f9b0bd7dc6aed8c17c4143c9cacd8d4a9fdec124"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1615411195,
      "sinceBlock": 12013177,
      "values": {
        "$immutable": true,
        "nonce": 14738,
        "owners": [
          "0x061d01A2971527668f87E34AB41f6A014cf20df3",
          "0x0b30bf57fE4f62Ec32d46E78E118753D785C260a",
          "0x232d6402DFc020cdD4bC499436bD536F84167D6F",
          "0x4de22288BAA5701A47BBc2c0659ec8FC90005005",
          "0x57FB8a5E19C7a982E0Fd98c7A60ca78339b04D23",
          "0x5c0Bd24f3eCb4351996954008Deb3AE3e3eCEbB7",
          "0x6129EcAd456B0Deb0ED94343eBA22F2415E617F9",
          "0x61674Feaf181D56a25cF4cE2824B8b3D8eFd57E6",
          "0x6ed240fa9C800c3B6AeCFec0B707f1dCEc8B7546",
          "0x7fa1c798f2dcda1EAc7115bD0ab28Cc263345d28",
          "0x90bF130CfE8674C14FB7a36CcDBd491FFb2A2667",
          "0x960c2eCa1F5C90C84F342959f306486BF1ac215c",
          "0xa0081912dDb2950CAaDF914208115AF4f87F081f",
          "0xa6aBe36af7777822Ca3DC76E9341dd512EF58C20",
          "0xa781F7930B8632C2644eEfD3bf692e1b39fD8b4a",
          "0xc1F98a730471c18840F5eCb63e042c9448F78cC5",
          "0xC70A170e74c20aEe7479090787B34fAB4d2A4911",
          "0xcD0777D94B8096740aadeC54d85e5073fA0F9A55",
          "0xF02F7De17f31C054d03Af69c09bB76bf9e330A1c",
          "0xfcf027D52D739F58CC73838A995Be720583706C3"
        ],
        "ownersArr": [
          "0x061d01A2971527668f87E34AB41f6A014cf20df3",
          "0x0b30bf57fE4f62Ec32d46E78E118753D785C260a",
          "0x232d6402DFc020cdD4bC499436bD536F84167D6F",
          "0x4de22288BAA5701A47BBc2c0659ec8FC90005005",
          "0x57FB8a5E19C7a982E0Fd98c7A60ca78339b04D23"
        ],
        "threshold": 2
      },
      "errors": { "ownersArr": "Processing error occurred." },
      "implementationNames": {
        "0xE25a329d385f77df5D4eD56265babe2b99A5436e": "SimpleMultiSig"
      }
    },
    {
      "name": "EthenaMinting",
      "address": "0xe3490297a08d6fC8Da46Edb7B6142E4F461b62D3",
      "type": "Contract",
      "sourceHashes": [
        "0x9da45d62678eb69b8a59bcaedda9b27dfd53ad82b5ff2d883c84ed530cdee4bb"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1719006083,
      "sinceBlock": 20142841,
      "values": {
        "$immutable": true,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getDomainSeparator": "0xc4e859a2ad9827930f83695f76c902ef7a7dc112c15b6e056f48dae3abbffc53",
        "globalConfig": {
          "globalMaxMintPerBlock": "20000000000000000000000000",
          "globalMaxRedeemPerBlock": "2000000000000000000000000"
        },
        "owner": "0x3B0AAf6e6fCd4a7cEEf8c92C32DFeA9E64dC1862",
        "stablesDeltaLimit": 0,
        "totalPerBlock": [
          [0, 0],
          [0, 0],
          [0, 0],
          [0, 0],
          [0, 0]
        ],
        "usde": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3"
      },
      "errors": { "totalPerBlock": "Processing error occurred." },
      "implementationNames": {
        "0xe3490297a08d6fC8Da46Edb7B6142E4F461b62D3": "EthenaMinting"
      }
    },
    {
      "name": "",
      "address": "0xE34Fd8e02815125aB0947434e42978a8A4e70906",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1744049447,
      "sinceBlock": 22218726,
      "values": { "$immutable": true },
      "implementationNames": {
        "0xE34Fd8e02815125aB0947434e42978a8A4e70906": ""
      }
    },
    {
      "address": "0xE400d09e98a5806bF501E93ED8E7623B78b4646F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Safe",
      "address": "0xe897D8620D5EbA2C8ecAAF0aDa191a23230aB8Ec",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0xC139190F447e929f090Edeb554D95AbB8b18aC1C",
          "via": [{ "address": "0x3C405F68d5C6eCE868e5646cAC926679839aCd68" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x3C405F68d5C6eCE868e5646cAC926679839aCd68"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1732810979,
      "sinceBlock": 21287364,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0x9327129B67163F10f44257B07d2413223BD72887",
          "0x5744A071Ac66cCF45165B8d7F65F6c23D4Af8A57",
          "0x47B243875BC1c166D208Fa901c79fB19d9EC294A",
          "0x2D7eB1217A7c95846aCE0FC02810516012FC5e5b",
          "0x4493f5BC27FD2d112c281762cD5Ebd3Be3fe25eD",
          "0x4D3Bf81Bdb420E65634d905aEcE807e8c54C0ab4",
          "0xb339AdFBdD00a47eeC4EACB902827Cf0b3778437",
          "0xc03C485B2a9585A60883b6d5B36d2f2639F7d5C8",
          "0xe055a5b4e82Ee8832dEc11537Afb7c2e4fb2365a",
          "0xb37b5B70dFfC907Ea6ea35A322889d9072b414F5",
          "0x832A45a1d0367971AC5e47708efA7B98C7e4d4CB"
        ],
        "$threshold": 5,
        "domainSeparator": "0xc6d35674af712d1d8977e856f39b2370a8ebd2d1468a34ca68a9039643daff8c",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "5 of 11 (45%)",
        "nonce": 55,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0xe897D8620D5EbA2C8ecAAF0aDa191a23230aB8Ec": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      }
    },
    {
      "name": "PendleYieldToken",
      "address": "0xe8eF806c8aaDc541408dcAd36107c7d26a391712",
      "type": "Contract",
      "sourceHashes": [
        "0xcf55fc48f1ca357193e2bc9ddc6f3b0004d43bc720d43010b228dc0c9643f496"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1747115327,
      "sinceBlock": 22472324,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "doCacheIndexSameBlock": true,
        "expiry": 1755129600,
        "factory": "0x35A338522a435D46f77Be32C70E215B813D0e3aC",
        "getRewardTokens": [],
        "isExpired": false,
        "name": "YT Ethereal eUSDE 14AUG2025",
        "postExpiry": { "firstPYIndex": 0, "totalSyInterestForTreasury": 0 },
        "PT": "0x14Bdc3A3AE09f5518b923b69489CBcAfB238e617",
        "pyIndexLastUpdatedBlock": 22834371,
        "pyIndexStored": "1000000000000000000",
        "SY": "0x7ac8ca87959b1d5EDfe2df5325A37c304DCea4D0",
        "symbol": "YT-eUSDE-14AUG2025",
        "syReserve": "441165310787435504488627217",
        "totalSupply": "441165310787435504488627217"
      },
      "errors": { "getPostExpiryData": "Processing error occurred." },
      "implementationNames": {
        "0xe8eF806c8aaDc541408dcAd36107c7d26a391712": "PendleYieldToken"
      }
    },
    {
      "name": "MasterMinter",
      "address": "0xE982615d461DD5cD06575BbeA87624fda4e3de17",
      "type": "Contract",
      "sourceHashes": [
        "0x13f502777e65c7c2170951387bce0ffbdd370e36bc81b22c4d6eeb563d875ef6"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
          "description": "manage minter addresses."
        }
      ],
      "sinceTimestamp": 1553538530,
      "sinceBlock": 7439432,
      "values": {
        "$immutable": true,
        "getMinterManager": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "owner": "0xC1d9fe41D19Dd52cb3Ae5d1D3b0030B5D498c704"
      },
      "implementationNames": {
        "0xE982615d461DD5cD06575BbeA87624fda4e3de17": "MasterMinter"
      }
    },
    {
      "name": "VariableDebtToken",
      "address": "0xeA51d7853EEFb32b6ee06b1C12E6dcCA88Be0fFE",
      "type": "Contract",
      "sourceHashes": [
        "0x1bb1eebf940ae6126d47aeb6ef0c3dfd89b3db8892ef36f1e46d456851469561",
        "0xf024b6fd41fa1721e8520e4218dc9bc20d93db9d7159481d53d2feb9b20d0c42"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1674806111,
      "sinceBlock": 16496792,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0xaC725CB59D16C81061BDeA61041a8A5e73DA9EC6",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "DEBT_TOKEN_REVISION": 1,
        "decimals": 18,
        "DELEGATION_WITH_SIG_TYPEHASH": "0x323db0410fecc107e39e2af5908671f4c8d106123b35a51501bb805c5fa36aa0",
        "DOMAIN_SEPARATOR": "0x2a3251424f10e627845b963db1912737e4031ea76009638193beac54ccae6c83",
        "EIP712_REVISION": "0x31",
        "getIncentivesController": "0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb",
        "name": "Aave Ethereum Variable Debt WETH",
        "POOL": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
        "scaledTotalSupply": "2112475037537430746769771",
        "symbol": "variableDebtEthWETH",
        "totalSupply": "2269757065124995476145851",
        "UNDERLYING_ASSET_ADDRESS": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "implementationNames": {
        "0xeA51d7853EEFb32b6ee06b1C12E6dcCA88Be0fFE": "InitializableImmutableAdminUpgradeabilityProxy",
        "0xaC725CB59D16C81061BDeA61041a8A5e73DA9EC6": "VariableDebtToken"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0xEb3107117FEAd7de89Cd14D463D340A2E6917769",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xd5a33441170541b7df25812e0e3dff6562b2f09ab835a6b431cb9e7198a47605",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1583108804,
      "sinceBlock": 9588402,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x93a0C66BD04E6f1153A42a1Cba2590125dbc5758",
          "0x3A7acCdbFe7FDF66855aC4Cb192bA3697AF47B56",
          "0x8117a2708aD8C7AD4a58b2A0E1a53902A4431778",
          "0x1C8236B406911A376369e33D39189F1b4B39F27D",
          "0x26E10fF641839cA457695CE955Cb90657D6E3F53",
          "0x3341B07732c1e9366C813f62cdFa1Ed37E0921D9",
          "0xBa0E1D8484877E8f10B278bB42eC0aA32C1F33a1",
          "0x599e835cbFC903eF09f3Dd5E08D1cF63c32AF8d8",
          "0x347c3190bD015FBD0e47fb90AA4917138A8A32FE",
          "0x01c46B12a16933BD38E2Cd8A5fa567CED7F48F70"
        ],
        "$threshold": 4,
        "domainSeparator": "0x812bd2187bbdb6f18e0fde445c3e46e10661c15c4af7f51d5795d4dec4fb4caa",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "4 of 10 (40%)",
        "nonce": 3279,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xEb3107117FEAd7de89Cd14D463D340A2E6917769": "Proxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "RocketRewardsPool",
      "address": "0xEE4d2A71cF479e0D3d0c3c2C923dbfEB57E73111",
      "type": "Contract",
      "sourceHashes": [
        "0xdfd1622639d808c4ee8b632f14af649e4b6083ca492c98e249fdec5bf95d7dd0"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1717466279,
      "sinceBlock": 20015321,
      "values": {
        "$immutable": true,
        "getClaimIntervalExecutionAddress": [
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000"
        ],
        "getClaimIntervalExecutionBlock": [
          15451165, 15637542, 15839520, 16038366, 16238906
        ],
        "getClaimIntervalsPassed": 0,
        "getClaimIntervalTime": 2419200,
        "getClaimIntervalTimeStart": 1749101739,
        "getPendingETHRewards": "93092157057424944958",
        "getPendingRPLRewards": "80478621260765716916397",
        "getRewardIndex": 37,
        "getRPLBalance": "2869052723854651103043",
        "version": 4
      },
      "errors": {
        "getClaimIntervalExecutionAddress": "Processing error occurred.",
        "getClaimIntervalExecutionBlock": "Processing error occurred."
      },
      "implementationNames": {
        "0xEE4d2A71cF479e0D3d0c3c2C923dbfEB57E73111": "RocketRewardsPool"
      }
    },
    {
      "name": "OsToken",
      "address": "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38",
      "type": "Contract",
      "sourceHashes": [
        "0xe0bb1c75b9401cd67323394e0c6ed465ca43cb2f13f72386f0fa60849150d96a"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1698755027,
      "sinceBlock": 18470087,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x65863ae3c54e769b3b6a814abbe2de070541233fe0f2efeed204622d3d4f1c40",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "Staked ETH",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "name": "Staked ETH",
        "owner": "0x144a98cb1CdBb23610501fE6108858D9B7D24934",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "symbol": "osETH",
        "totalSupply": "271038119890461530881748"
      },
      "implementationNames": {
        "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38": "OsToken"
      }
    },
    {
      "name": "PendleSUSDESY",
      "address": "0xF541AA4d6f29ec2423A0D306dBc677021A02DBC0",
      "type": "Contract",
      "sourceHashes": [
        "0x052d34ae6f4dca8eb327bc0998e626f2cd6f6c21178bc09e93da67948a467233"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1742884619,
      "sinceBlock": 22122170,
      "values": {
        "$immutable": true,
        "asset": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
        "assetInfo": {
          "assetType": 0,
          "assetAddress": "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
          "assetDecimals": 18
        },
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x97ca0f0b3ab4ee65394386a3f14c64c0511f91605feb017ddeb69cd68912dfea",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "SY Ethena sUSDE",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0xF541AA4d6f29ec2423A0D306dBc677021A02DBC0",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "exchangeRate": "1179971125909541191",
        "getAbsoluteSupplyCap": "1750000000000000000000000000",
        "getAbsoluteTotalSupply": "1749826064828350300621075057",
        "getRewardTokens": [],
        "getTokensIn": [
          "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3",
          "0x9D39A5DE30e57443BfF2A8307A4256c8797A3497"
        ],
        "getTokensOut": ["0x9D39A5DE30e57443BfF2A8307A4256c8797A3497"],
        "name": "SY Ethena sUSDE",
        "owner": "0x2aD631F72fB16d91c4953A7f4260A97C2fE2f31e",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "rewardIndexesStored": [],
        "supplyCap": "1750000000000000000000000000",
        "symbol": "SY-sUSDE",
        "totalSupply": "1749826064828350300621075057",
        "yieldToken": "0x9D39A5DE30e57443BfF2A8307A4256c8797A3497"
      },
      "implementationNames": {
        "0xF541AA4d6f29ec2423A0D306dBc677021A02DBC0": "PendleSUSDESY"
      }
    },
    {
      "name": "TokenManager",
      "address": "0xf73a1260d222f447210581DDf212D915c09a3249",
      "type": "Contract",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0x07aae7f3026cf9986df7e9587978c4a61f37310b62ac418c63e182d2fdb51fef"
      ],
      "proxyType": "EIP897 proxy",
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": false,
        "$implementation": "0xde3A93028F2283cc28756B3674BD657eaFB992f4",
        "appId": "0xcd567bdf93dd0f6acc3bc7f2155f83244d56a65abbfbefb763e015420102c67b",
        "ASSIGN_ROLE": "0xf5a08927c847d7a29dc35e105208dbde5ce951392105d712761cc5d17440e2ff",
        "BURN_ROLE": "0xe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa22",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getRecoveryVault": "0x0000000000000000000000000000000000000000",
        "hasInitialized": true,
        "implementation": "0xde3A93028F2283cc28756B3674BD657eaFB992f4",
        "isDepositable": false,
        "isForwarder": true,
        "isPetrified": false,
        "ISSUE_ROLE": "0x2406f1e99f79cea012fb88c5c36566feaeefee0f4b98d3a376b49310222b53c4",
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "MAX_VESTINGS_PER_ADDRESS": 50,
        "maxAccountTokens": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "MINT_ROLE": "0x154c00819833dac601ee5ddded6fda79d9d8b506b911b3dbd54cdb95fe6c3686",
        "proxyType": 2,
        "REVOKE_VESTINGS_ROLE": "0x95ffc68daedf1eb334cfcd22ee24a5eeb5a8e58aa40679f2ad247a84140f8d6e",
        "token": "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32"
      },
      "implementationNames": {
        "0xf73a1260d222f447210581DDf212D915c09a3249": "AppProxyUpgradeable",
        "0xde3A93028F2283cc28756B3674BD657eaFB992f4": "TokenManager"
      }
    },
    {
      "name": "PoolLogic",
      "address": "0xf8C97539934ee66a67C26010e8e027D77E821B0C",
      "type": "Contract",
      "sourceHashes": [
        "0x5231d014661802ad16d2d14196432a7104a037d3d71b96509ca0b0ed28767602"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1738757831,
      "sinceBlock": 21780237,
      "values": { "$immutable": true },
      "implementationNames": {
        "0xf8C97539934ee66a67C26010e8e027D77E821B0C": "PoolLogic"
      }
    },
    {
      "name": "crvUSD Stablecoin",
      "address": "0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",
      "type": "Contract",
      "sourceHashes": [
        "0xa1cf02a8e2bb653651af2955fb048b9b5c0382ed97188b4e8a8ba4c079339b8c"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1684065467,
      "sinceBlock": 17257952,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x7906987b5141f4b3a52bd45bf8cd1495b428ff72f3caefd1d670d9726103a7f0",
        "minter": "0xC9332fdCB1C491Dcc683bAe86Fe3cb70360738BC",
        "name": "Curve.Fi USD Stablecoin",
        "salt": "0xb99ba1c24ff7f96081ccd1ad26ffc380e2cc4c73b87f99e7a0165fa980b3b977",
        "symbol": "crvUSD",
        "totalSupply": "846159203966810768869847195",
        "version": "v1.0.0"
      },
      "implementationNames": {
        "0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E": "crvUSD Stablecoin"
      }
    },
    {
      "address": "0xFcb19e6a322b27c06842A71e8c725399f049AE3a",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
          "description": "manage all critical roles like pausers, blacklisters, minters, rescuer."
        }
      ]
    },
    {
      "name": "TokenMinterV2",
      "address": "0xfd78EE919681417d192449715b2594ab58f5D002",
      "type": "Contract",
      "template": "tokens/circle/TokenMinter",
      "sourceHashes": [
        "0x4f65c99b21662a49a87fe117a196b5c67b5e8414afb355272fa80cd5830591fb"
      ],
      "proxyType": "immutable",
      "description": "Part of CCTP: Used for automated access control for minting.",
      "sinceTimestamp": 1739233991,
      "sinceBlock": 21819723,
      "values": {
        "$immutable": true,
        "localTokenMessenger": "0x28b5a0e9C621a5BadaA536219b3a228C8168cf5d",
        "owner": "0x7D1565698cddf4C8f90d6b8574729fef565cae0E",
        "paused": false,
        "pauser": "0x4E898CEe7c5809A63de0eF745177A9BB82FeAC69",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "rescuer": "0xE206be2331d6aAa4495887755BaBE892aecE704A",
        "tokenController": "0x740F494cD63f87547FEc1591646720e5cC285846"
      },
      "implementationNames": {
        "0xfd78EE919681417d192449715b2594ab58f5D002": "TokenMinterV2"
      }
    },
    {
      "name": "TimelockController",
      "address": "0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7",
      "type": "Contract",
      "sourceHashes": [
        "0xb8860ecb88ce9ef535fd75652844536335a1ab72f54ccfd0159be7e57422dc03"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1635801221,
      "sinceBlock": 13533514,
      "values": {
        "$immutable": true,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 172800,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "implementationNames": {
        "0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7": "TimelockController"
      }
    },
    {
      "name": "Gsm4626",
      "address": "0xFeeb6FE430B7523fEF2a38327241eE7153779535",
      "type": "Contract",
      "sourceHashes": [
        "0x525b22d02f8b39d3432dfaf0061e3d91caa10d282e86ec7abeb4ca11790f6762",
        "0x21b1ec508f1058636635a0e7543f6e04ffce3c846fefe6e16f12ec1586820812"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1738367831,
      "sinceBlock": 21747935,
      "values": {
        "$admin": "0x87F9ff2246aC5756A099c9D10802980fb75cCE2b",
        "$implementation": "0x2EDFb4eb6A7FB78B3aC9204F179510865D77C660",
        "$pastUpgrades": [
          [
            "2025-01-31T23:57:11.000Z",
            "0xfbf6008c85cea62f65a8902b6702b72616f5f85c1f2beb0db296e2a0ca533c03",
            ["0x2EDFb4eb6A7FB78B3aC9204F179510865D77C660"]
          ]
        ],
        "$upgradeCount": 1,
        "BUY_ASSET_WITH_SIG_TYPEHASH": "0xcfb9ac928a9a202b47d70fc2e62c0dade955274336ca821ed60aeb2142af92e6",
        "canSwap": true,
        "CONFIGURATOR_ROLE": "0x3b49a237fe2d18fa4d9642b8a0e065923cceb71b797783b619a030a61d848bf0",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0x717deeb1eeaf0352d8a176cdef2165e50ab01aa5e17992862fe3801063897e7b",
        "getAccruedFees": 0,
        "getAssetAmountForBuyAsset": [
          [0, 0, 0, 0],
          [0, 0, 0, 0],
          [0, 0, 0, 0],
          [0, 0, 0, 0],
          [0, 0, 0, 0]
        ],
        "getAssetAmountForSellAsset": [
          [0, 0, 0, 0],
          [1, 1000000000000, 1000000000000, 0],
          [1, 1000000000000, 1000000000000, 0],
          [1, 1000000000000, 1000000000000, 0],
          [1, 1000000000000, 1000000000000, 0]
        ],
        "getAvailableLiquidity": 10574960532911,
        "getAvailableUnderlyingExposure": 9425039467089,
        "getCurrentBacking": ["5634437139000000000000", 0],
        "getExposureCap": 20000000000000,
        "getFeeStrategy": "0x83896a35db4519BD8CcBAF5cF86CCA61b5cfb938",
        "getGhoAmountForBuyAsset": [
          [0, 0, 0, 0],
          [1, 2004000000000, 2000000000000, 4000000000],
          [2, 3006000000000, 3000000000000, 6000000000],
          [3, 4008000000000, 4000000000000, 8000000000],
          [4, 5010000000000, 5000000000000, 10000000000]
        ],
        "getGhoAmountForSellAsset": [
          [0, 0, 0, 0],
          [1, 1000000000000, 1000000000000, 0],
          [2, 2000000000000, 2000000000000, 0],
          [3, 3000000000000, 3000000000000, 0],
          [4, 4000000000000, 4000000000000, 0]
        ],
        "getGhoTreasury": "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c",
        "getIsFrozen": false,
        "getIsSeized": false,
        "GHO_TOKEN": "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f",
        "GSM_REVISION": 1,
        "LIQUIDATOR_ROLE": "0x5e17fc5225d4a099df75359ce1f405503ca79498a8dc46a7d583235a0ee45c16",
        "PRICE_STRATEGY": "0x00e89F4022FD13AD56e321D50612Eec598eF3b72",
        "SELL_ASSET_WITH_SIG_TYPEHASH": "0xf570a3b94987b56be9e62084f59006353309fa95357dfbc6d3ea78cce6382d13",
        "SWAP_FREEZER_ROLE": "0x6dac4cc0544e34aa1a4ed2862f6de78290e3f18f00fe77179ee8ef34de9dfa24",
        "TOKEN_RESCUER_ROLE": "0xbf63066482b01a20567880b14a2934fecb21c925e6bcc0a0a091c59723fa9c06",
        "UNDERLYING_ASSET": "0xD4fa2D31b7968E448877f69A96DE69f5de8cD23E"
      },
      "errors": {
        "getAssetAmountForBuyAsset": "Processing error occurred.",
        "getAssetAmountForSellAsset": "Processing error occurred.",
        "getGhoAmountForBuyAsset": "Processing error occurred.",
        "getGhoAmountForSellAsset": "Processing error occurred."
      },
      "implementationNames": {
        "0xFeeb6FE430B7523fEF2a38327241eE7153779535": "TransparentUpgradeableProxy",
        "0x2EDFb4eb6A7FB78B3aC9204F179510865D77C660": "Gsm4626"
      }
    }
  ],
  "abis": {
    "0x00907f9921424583e7ffBfEdf84F92B7B2Be4977": [
      "constructor(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function implementation() returns (address)",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x02398771Fd1db790Ef2b656ca3BcB3075f27A72c": [
      "constructor(address _minterManager)",
      "event ControllerConfigured(address indexed _controller, address indexed _worker)",
      "event ControllerRemoved(address indexed _controller)",
      "event MinterAllowanceDecremented(address indexed msgSender, address indexed minter, uint256 decrement, uint256 newAllowance)",
      "event MinterAllowanceIncremented(address indexed _msgSender, address indexed _minter, uint256 _increment, uint256 _newAllowance)",
      "event MinterConfigured(address indexed _msgSender, address indexed _minter, uint256 _allowance)",
      "event MinterManagerSet(address indexed _oldMinterManager, address indexed _newMinterManager)",
      "event MinterRemoved(address indexed _msgSender, address indexed _minter)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "function configureController(address _controller, address _worker)",
      "function configureMinter(uint256 _newAllowance) returns (bool)",
      "function decrementMinterAllowance(uint256 _allowanceDecrement) returns (bool)",
      "function getMinterManager() view returns (address)",
      "function getWorker(address _controller) view returns (address)",
      "function incrementMinterAllowance(uint256 _allowanceIncrement) returns (bool)",
      "function owner() view returns (address)",
      "function removeController(address _controller)",
      "function removeMinter() returns (bool)",
      "function setMinterManager(address _newMinterManager)",
      "function transferOwnership(address newOwner)"
    ],
    "0x055E84e7FE8955E2781010B866f10Ef6E1E77e59": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors)",
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error FailedInnerCall()",
      "error TimelockInsufficientDelay(uint256 delay, uint256 minDelay)",
      "error TimelockInvalidOperationLength(uint256 targets, uint256 payloads, uint256 values)",
      "error TimelockUnauthorizedCaller(address caller)",
      "error TimelockUnexecutedPredecessor(bytes32 predecessorId)",
      "error TimelockUnexpectedOperationState(bytes32 operationId, bytes32 expectedStates)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getOperationState(bytes32 id) view returns (uint8)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33": [
      "function threshold() view returns (uint256)",
      "function execute(uint8[] sigV, bytes32[] sigR, bytes32[] sigS, address destination, uint256 value, bytes data, address executor, uint256 gasLimit)",
      "function ownersArr(uint256) view returns (address)",
      "function owners() view returns (address[])",
      "function nonce() view returns (uint256)",
      "function setOwners(uint256 threshold_, address[] owners_)",
      "constructor(uint256 threshold_, address[] owners_, uint256 chainId)"
    ],
    "0x0a539750a534765ba960af863Cb5c31e34b4c846": [
      "constructor(address ghoToken, address underlyingAsset, address priceStrategy)",
      "event BackingProvided(address indexed backer, address indexed asset, uint256 amount, uint256 ghoAmount, uint256 remainingLoss)",
      "event BurnAfterSeize(address indexed burner, uint256 amount, uint256 ghoOutstanding)",
      "event BuyAsset(address indexed originator, address indexed receiver, uint256 underlyingAmount, uint256 ghoAmount, uint256 fee)",
      "event ExposureCapUpdated(uint256 oldExposureCap, uint256 newExposureCap)",
      "event FeeStrategyUpdated(address indexed oldFeeStrategy, address indexed newFeeStrategy)",
      "event FeesDistributedToTreasury(address indexed ghoTreasury, address indexed asset, uint256 amount)",
      "event GhoTreasuryUpdated(address indexed oldGhoTreasury, address indexed newGhoTreasury)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Seized(address indexed seizer, address indexed recipient, uint256 underlyingAmount, uint256 ghoOutstanding)",
      "event SellAsset(address indexed originator, address indexed receiver, uint256 underlyingAmount, uint256 ghoAmount, uint256 fee)",
      "event SwapFreeze(address indexed freezer, bool enabled)",
      "event TokensRescued(address indexed tokenRescued, address indexed recipient, uint256 amountRescued)",
      "function BUY_ASSET_WITH_SIG_TYPEHASH() view returns (bytes32)",
      "function CONFIGURATOR_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function GHO_TOKEN() view returns (address)",
      "function GSM_REVISION() pure returns (uint256)",
      "function LIQUIDATOR_ROLE() view returns (bytes32)",
      "function PRICE_STRATEGY() view returns (address)",
      "function SELL_ASSET_WITH_SIG_TYPEHASH() view returns (bytes32)",
      "function SWAP_FREEZER_ROLE() view returns (bytes32)",
      "function TOKEN_RESCUER_ROLE() view returns (bytes32)",
      "function UNDERLYING_ASSET() view returns (address)",
      "function backWithGho(uint256 amount) returns (uint256)",
      "function backWithUnderlying(uint256 amount) returns (uint256)",
      "function burnAfterSeize(uint256 amount) returns (uint256)",
      "function buyAsset(uint256 minAmount, address receiver) returns (uint256, uint256)",
      "function buyAssetWithSig(address originator, uint256 minAmount, address receiver, uint256 deadline, bytes signature) returns (uint256, uint256)",
      "function canSwap() view returns (bool)",
      "function distributeFeesToTreasury()",
      "function getAccruedFees() view returns (uint256)",
      "function getAssetAmountForBuyAsset(uint256 maxGhoAmount) view returns (uint256, uint256, uint256, uint256)",
      "function getAssetAmountForSellAsset(uint256 minGhoAmount) view returns (uint256, uint256, uint256, uint256)",
      "function getAvailableLiquidity() view returns (uint256)",
      "function getAvailableUnderlyingExposure() view returns (uint256)",
      "function getCurrentBacking() view returns (uint256, uint256)",
      "function getExposureCap() view returns (uint128)",
      "function getFeeStrategy() view returns (address)",
      "function getGhoAmountForBuyAsset(uint256 minAssetAmount) view returns (uint256, uint256, uint256, uint256)",
      "function getGhoAmountForSellAsset(uint256 maxAssetAmount) view returns (uint256, uint256, uint256, uint256)",
      "function getGhoTreasury() view returns (address)",
      "function getIsFrozen() view returns (bool)",
      "function getIsSeized() view returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin, address ghoTreasury, uint128 exposureCap)",
      "function nonces(address) view returns (uint256)",
      "function renounceRole(bytes32 role, address account)",
      "function rescueTokens(address token, address to, uint256 amount)",
      "function revokeRole(bytes32 role, address account)",
      "function seize() returns (uint256)",
      "function sellAsset(uint256 maxAmount, address receiver) returns (uint256, uint256)",
      "function sellAssetWithSig(address originator, uint256 maxAmount, address receiver, uint256 deadline, bytes signature) returns (uint256, uint256)",
      "function setSwapFreeze(bool enable)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateExposureCap(uint128 exposureCap)",
      "function updateFeeStrategy(address feeStrategy)",
      "function updateGhoTreasury(address newGhoTreasury)"
    ],
    "0x102633152313C81cD80419b6EcF66d14Ad68949A": [
      "constructor(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function implementation() returns (address)",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x111111111117dC0aa78b770fA6A738034120C302": [
      "constructor(address _owner)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceOwnership()",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0x137Dcd97872dE27a4d3bf36A4643c5e18FA40713": [
      "function threshold() view returns (uint256)",
      "function execute(uint8[] sigV, bytes32[] sigR, bytes32[] sigS, address destination, uint256 value, bytes data, address executor, uint256 gasLimit)",
      "function ownersArr(uint256) view returns (address)",
      "function owners() view returns (address[])",
      "function nonce() view returns (uint256)",
      "function setOwners(uint256 threshold_, address[] owners_)",
      "constructor(uint256 threshold_, address[] owners_, uint256 chainId)"
    ],
    "0x144a98cb1CdBb23610501fE6108858D9B7D24934": [
      "constructor(address _masterCopy)"
    ],
    "0x14Bdc3A3AE09f5518b923b69489CBcAfB238e617": [
      "constructor(address _SY, string _name, string _symbol, uint8 __decimals, uint256 _expiry)",
      "error OnlyYCFactory()",
      "error OnlyYT()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint8 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function SY() view returns (address)",
      "function YT() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burnByYT(address user, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function expiry() view returns (uint256)",
      "function factory() view returns (address)",
      "function initialize(address _YT)",
      "function isExpired() view returns (bool)",
      "function mintByYT(address user, uint256 amount)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x15C5620dfFaC7c7366EED66C20Ad222DDbB1eD57": [
      "constructor(address pool)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BorrowAllowanceDelegated(address indexed fromUser, address indexed toUser, address indexed asset, uint256 amount)",
      "event Burn(address indexed from, uint256 amount, uint256 currentBalance, uint256 balanceIncrease, uint256 avgStableRate, uint256 newTotalSupply)",
      "event Initialized(address indexed underlyingAsset, address indexed pool, address incentivesController, uint8 debtTokenDecimals, string debtTokenName, string debtTokenSymbol, bytes params)",
      "event Mint(address indexed user, address indexed onBehalfOf, uint256 amount, uint256 currentBalance, uint256 balanceIncrease, uint256 newRate, uint256 avgStableRate, uint256 newTotalSupply)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DEBT_TOKEN_REVISION() view returns (uint256)",
      "function DELEGATION_WITH_SIG_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function EIP712_REVISION() view returns (bytes)",
      "function POOL() view returns (address)",
      "function UNDERLYING_ASSET_ADDRESS() view returns (address)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address, uint256) returns (bool)",
      "function approveDelegation(address delegatee, uint256 amount)",
      "function balanceOf(address account) view returns (uint256)",
      "function borrowAllowance(address fromUser, address toUser) view returns (uint256)",
      "function burn(address from, uint256 amount) returns (uint256, uint256)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address, uint256) returns (bool)",
      "function delegationWithSig(address delegator, address delegatee, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function getAverageStableRate() view returns (uint256)",
      "function getIncentivesController() view returns (address)",
      "function getSupplyData() view returns (uint256, uint256, uint256, uint40)",
      "function getTotalSupplyAndAvgRate() view returns (uint256, uint256)",
      "function getTotalSupplyLastUpdated() view returns (uint40)",
      "function getUserLastUpdated(address user) view returns (uint40)",
      "function getUserStableRate(address user) view returns (uint256)",
      "function increaseAllowance(address, uint256) returns (bool)",
      "function initialize(address initializingPool, address underlyingAsset, address incentivesController, uint8 debtTokenDecimals, string debtTokenName, string debtTokenSymbol, bytes params)",
      "function mint(address user, address onBehalfOf, uint256 amount, uint256 rate) returns (bool, uint256, uint256)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function principalBalanceOf(address user) view returns (uint256)",
      "function setIncentivesController(address controller)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address, uint256) returns (bool)",
      "function transferFrom(address, address, uint256) returns (bool)"
    ],
    "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb": [
      "function resume()",
      "function name() pure returns (string)",
      "function stop()",
      "function hasInitialized() view returns (bool)",
      "function approve(address _spender, uint256 _amount) returns (bool)",
      "function STAKING_CONTROL_ROLE() view returns (bytes32)",
      "function totalSupply() view returns (uint256)",
      "function getSharesByPooledEth(uint256 _ethAmount) view returns (uint256)",
      "function isStakingPaused() view returns (bool)",
      "function transferFrom(address _sender, address _recipient, uint256 _amount) returns (bool)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function setStakingLimit(uint256 _maxStakeLimit, uint256 _stakeLimitIncreasePerBlock)",
      "function RESUME_ROLE() view returns (bytes32)",
      "function finalizeUpgrade_v2(address _lidoLocator, address _eip712StETH)",
      "function decimals() pure returns (uint8)",
      "function getRecoveryVault() view returns (address)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function getTotalPooledEther() view returns (uint256)",
      "function unsafeChangeDepositedValidators(uint256 _newDepositedValidators)",
      "function PAUSE_ROLE() view returns (bytes32)",
      "function increaseAllowance(address _spender, uint256 _addedValue) returns (bool)",
      "function getTreasury() view returns (address)",
      "function isStopped() view returns (bool)",
      "function getBufferedEther() view returns (uint256)",
      "function initialize(address _lidoLocator, address _eip712StETH) payable",
      "function receiveELRewards() payable",
      "function getWithdrawalCredentials() view returns (bytes32)",
      "function getCurrentStakeLimit() view returns (uint256)",
      "function getStakeLimitFullInfo() view returns (bool isStakingPaused, bool isStakingLimitSet, uint256 currentStakeLimit, uint256 maxStakeLimit, uint256 maxStakeLimitGrowthBlocks, uint256 prevStakeLimit, uint256 prevStakeBlockNumber)",
      "function transferSharesFrom(address _sender, address _recipient, uint256 _sharesAmount) returns (uint256)",
      "function balanceOf(address _account) view returns (uint256)",
      "function resumeStaking()",
      "function getFeeDistribution() view returns (uint16 treasuryFeeBasisPoints, uint16 insuranceFeeBasisPoints, uint16 operatorsFeeBasisPoints)",
      "function receiveWithdrawals() payable",
      "function getPooledEthByShares(uint256 _sharesAmount) view returns (uint256)",
      "function allowRecoverability(address token) view returns (bool)",
      "function nonces(address owner) view returns (uint256)",
      "function appId() view returns (bytes32)",
      "function getOracle() view returns (address)",
      "function eip712Domain() view returns (string name, string version, uint256 chainId, address verifyingContract)",
      "function getContractVersion() view returns (uint256)",
      "function getInitializationBlock() view returns (uint256)",
      "function transferShares(address _recipient, uint256 _sharesAmount) returns (uint256)",
      "function symbol() pure returns (string)",
      "function getEIP712StETH() view returns (address)",
      "function transferToVault(address)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function submit(address _referral) payable returns (uint256)",
      "function decreaseAllowance(address _spender, uint256 _subtractedValue) returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function transfer(address _recipient, uint256 _amount) returns (bool)",
      "function deposit(uint256 _maxDepositsCount, uint256 _stakingModuleId, bytes _depositCalldata)",
      "function UNSAFE_CHANGE_DEPOSITED_VALIDATORS_ROLE() view returns (bytes32)",
      "function getBeaconStat() view returns (uint256 depositedValidators, uint256 beaconValidators, uint256 beaconBalance)",
      "function removeStakingLimit()",
      "function handleOracleReport(uint256 _reportTimestamp, uint256 _timeElapsed, uint256 _clValidators, uint256 _clBalance, uint256 _withdrawalVaultBalance, uint256 _elRewardsVaultBalance, uint256 _sharesRequestedToBurn, uint256[] _withdrawalFinalizationBatches, uint256 _simulatedShareRate) returns (uint256[4] postRebaseAmounts)",
      "function getFee() view returns (uint16 totalFee)",
      "function kernel() view returns (address)",
      "function getTotalShares() view returns (uint256)",
      "function permit(address _owner, address _spender, uint256 _value, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function isPetrified() view returns (bool)",
      "function getLidoLocator() view returns (address)",
      "function canDeposit() view returns (bool)",
      "function STAKING_PAUSE_ROLE() view returns (bytes32)",
      "function getDepositableEther() view returns (uint256)",
      "function sharesOf(address _account) view returns (uint256)",
      "function pauseStaking()",
      "function getTotalELRewardsCollected() view returns (uint256)",
      "event StakingPaused()",
      "event StakingResumed()",
      "event StakingLimitSet(uint256 maxStakeLimit, uint256 stakeLimitIncreasePerBlock)",
      "event StakingLimitRemoved()",
      "event CLValidatorsUpdated(uint256 indexed reportTimestamp, uint256 preCLValidators, uint256 postCLValidators)",
      "event DepositedValidatorsChanged(uint256 depositedValidators)",
      "event ETHDistributed(uint256 indexed reportTimestamp, uint256 preCLBalance, uint256 postCLBalance, uint256 withdrawalsWithdrawn, uint256 executionLayerRewardsWithdrawn, uint256 postBufferedEther)",
      "event TokenRebased(uint256 indexed reportTimestamp, uint256 timeElapsed, uint256 preTotalShares, uint256 preTotalEther, uint256 postTotalShares, uint256 postTotalEther, uint256 sharesMintedAsFees)",
      "event LidoLocatorSet(address lidoLocator)",
      "event ELRewardsReceived(uint256 amount)",
      "event WithdrawalsReceived(uint256 amount)",
      "event Submitted(address indexed sender, uint256 amount, address referral)",
      "event Unbuffered(uint256 amount)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)",
      "event EIP712StETHInitialized(address eip712StETH)",
      "event TransferShares(address indexed from, address indexed to, uint256 sharesValue)",
      "event SharesBurnt(address indexed account, uint256 preRebaseTokenAmount, uint256 postRebaseTokenAmount, uint256 sharesAmount)",
      "event Stopped()",
      "event Resumed()",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ContractVersionSet(uint256 version)"
    ],
    "0x18084fbA666a33d37592fA2633fD49a74DD93a88": [
      "constructor()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function approveAndCall(address spender, uint256 amount, bytes extraData) returns (bool)",
      "function balanceOf(address) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function cachedChainId() view returns (uint256)",
      "function cachedDomainSeparator() view returns (bytes32)",
      "function decimals() view returns (uint8)",
      "function mint(address recipient, uint256 amount)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function recoverERC20(address token, address recipient, uint256 amount)",
      "function recoverERC721(address token, address recipient, uint256 tokenId, bytes data)",
      "function renounceOwnership()",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0x185477906B46D9b8DE0DEB73A1bBfb87b5b51BC3": [
      "event ReserveDataUpdated(address indexed reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)",
      "event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user)",
      "event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user)",
      "event Supply(address indexed reserve, address user, address indexed onBehalfOf, uint256 amount, uint16 indexed referralCode)",
      "event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount)"
    ],
    "0x1864Ca3d47AaB98Ee78D11fc9DCC5E7bADdA1c0d": [
      "constructor(address _frax_contract_address, address _fxs_contract_address, address _collateral_address, address _creator_address, address _timelock_address, uint256 _pool_ceiling)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function USDC_address() view returns (address)",
      "function availableExcessCollatDV() view returns (uint256)",
      "function bonus_rate() view returns (uint256)",
      "function buyBackFXS(uint256 FXS_amount, uint256 COLLATERAL_out_min)",
      "function buyBackPaused() view returns (bool)",
      "function buyback_fee() view returns (uint256)",
      "function collatDollarBalance() view returns (uint256)",
      "function collat_eth_oracle_address() view returns (address)",
      "function collateralPricePaused() view returns (bool)",
      "function collectRedemption()",
      "function getCollateralPrice() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function lastRedeemed(address) view returns (uint256)",
      "function mint1t1FRAX(uint256 collateral_amount, uint256 FRAX_out_min)",
      "function mintAlgorithmicFRAX(uint256 fxs_amount_d18, uint256 FRAX_out_min)",
      "function mintFractionalFRAX(uint256 collateral_amount, uint256 fxs_amount, uint256 FRAX_out_min)",
      "function mintPaused() view returns (bool)",
      "function minting_fee() view returns (uint256)",
      "function pausedPrice() view returns (uint256)",
      "function pool_ceiling() view returns (uint256)",
      "function recollat_fee() view returns (uint256)",
      "function recollateralizeFRAX(uint256 collateral_amount, uint256 FXS_out_min)",
      "function recollateralizePaused() view returns (bool)",
      "function redeem1t1FRAX(uint256 FRAX_amount, uint256 COLLATERAL_out_min)",
      "function redeemAlgorithmicFRAX(uint256 FRAX_amount, uint256 FXS_out_min)",
      "function redeemCollateralBalances(address) view returns (uint256)",
      "function redeemFXSBalances(address) view returns (uint256)",
      "function redeemFractionalFRAX(uint256 FRAX_amount, uint256 FXS_out_min, uint256 COLLATERAL_out_min)",
      "function redeemPaused() view returns (bool)",
      "function redemption_delay() view returns (uint256)",
      "function redemption_fee() view returns (uint256)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setCollatETHOracle(address _collateral_weth_oracle_address, address _weth_address)",
      "function setOwner(address _owner_address)",
      "function setPoolParameters(uint256 new_ceiling, uint256 new_bonus_rate, uint256 new_redemption_delay, uint256 new_mint_fee, uint256 new_redeem_fee, uint256 new_buyback_fee, uint256 new_recollat_fee)",
      "function setTimelock(address new_timelock)",
      "function toggleBuyBack()",
      "function toggleCollateralPrice(uint256 _new_price)",
      "function toggleMinting()",
      "function toggleRecollateralize()",
      "function toggleRedeeming()",
      "function unclaimedPoolCollateral() view returns (uint256)",
      "function unclaimedPoolFXS() view returns (uint256)"
    ],
    "0x1923DfeE706A8E78157416C29cBCCFDe7cdF4102": [
      "constructor()",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error UUPSUnauthorizedCallContext()",
      "error UUPSUnsupportedProxiableUUID(bytes32 slot)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Deny(address indexed usr)",
      "event Initialized(uint64 version)",
      "event Rely(address indexed usr)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Upgraded(address indexed implementation)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address) view returns (uint256)",
      "function burn(address from, uint256 value)",
      "function decimals() view returns (uint8)",
      "function deny(address usr)",
      "function getImplementation() view returns (address)",
      "function initialize()",
      "function mint(address to, uint256 value)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, bytes signature)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function proxiableUUID() view returns (bytes32)",
      "function rely(address usr)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function version() view returns (string)",
      "function wards(address) view returns (uint256)"
    ],
    "0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7": [
      "constructor(address vat_)",
      "event LogNote(bytes4 indexed sig, address indexed usr, bytes32 indexed arg1, bytes32 indexed arg2, bytes data) anonymous",
      "function Pie() view returns (uint256)",
      "function cage()",
      "function chi() view returns (uint256)",
      "function deny(address guy)",
      "function drip() returns (uint256 tmp)",
      "function dsr() view returns (uint256)",
      "function exit(uint256 wad)",
      "function file(bytes32 what, uint256 data)",
      "function file(bytes32 what, address addr)",
      "function join(uint256 wad)",
      "function live() view returns (uint256)",
      "function pie(address) view returns (uint256)",
      "function rely(address guy)",
      "function rho() view returns (uint256)",
      "function vat() view returns (address)",
      "function vow() view returns (address)",
      "function wards(address) view returns (uint256)"
    ],
    "0x1a9C8182C09F50C8318d769245beA52c32BE35BC": [
      "constructor(address admin_, uint256 delay_)",
      "event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event NewAdmin(address indexed newAdmin)",
      "event NewDelay(uint256 indexed newDelay)",
      "event NewPendingAdmin(address indexed newPendingAdmin)",
      "event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function acceptAdmin()",
      "function admin() view returns (address)",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta)",
      "function delay() view returns (uint256)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable returns (bytes)",
      "function pendingAdmin() view returns (address)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) returns (bytes32)",
      "function queuedTransactions(bytes32) view returns (bool)",
      "function setDelay(uint256 delay_)",
      "function setPendingAdmin(address pendingAdmin_)"
    ],
    "0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c": [
      "constructor(address implementationContract)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address implementation)",
      "function admin() view returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() view returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984": [
      "constructor(address account, address minter_, uint256 mintingAllowedAfter_)",
      "event Approval(address indexed owner, address indexed spender, uint256 amount)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event MinterChanged(address minter, address newMinter)",
      "event Transfer(address indexed from, address indexed to, uint256 amount)",
      "function DELEGATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function allowance(address account, address spender) view returns (uint256)",
      "function approve(address spender, uint256 rawAmount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function checkpoints(address, uint32) view returns (uint32 fromBlock, uint96 votes)",
      "function decimals() view returns (uint8)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address) view returns (address)",
      "function getCurrentVotes(address account) view returns (uint96)",
      "function getPriorVotes(address account, uint256 blockNumber) view returns (uint96)",
      "function minimumTimeBetweenMints() view returns (uint32)",
      "function mint(address dst, uint256 rawAmount)",
      "function mintCap() view returns (uint8)",
      "function minter() view returns (address)",
      "function mintingAllowedAfter() view returns (uint256)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function numCheckpoints(address) view returns (uint32)",
      "function permit(address owner, address spender, uint256 rawAmount, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function setMinter(address minter_)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address dst, uint256 rawAmount) returns (bool)",
      "function transferFrom(address src, address dst, uint256 rawAmount) returns (bool)"
    ],
    "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599": [
      "function mintingFinished() view returns (bool)",
      "function name() view returns (string)",
      "function approve(address _spender, uint256 _value) returns (bool)",
      "function reclaimToken(address _token)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address _from, address _to, uint256 _value) returns (bool)",
      "function decimals() view returns (uint8)",
      "function unpause()",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function burn(uint256 value)",
      "function claimOwnership()",
      "function paused() view returns (bool)",
      "function decreaseApproval(address _spender, uint256 _subtractedValue) returns (bool success)",
      "function balanceOf(address _owner) view returns (uint256)",
      "function renounceOwnership()",
      "function finishMinting() returns (bool)",
      "function pause()",
      "function owner() view returns (address)",
      "function symbol() view returns (string)",
      "function transfer(address _to, uint256 _value) returns (bool)",
      "function increaseApproval(address _spender, uint256 _addedValue) returns (bool success)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function pendingOwner() view returns (address)",
      "function transferOwnership(address newOwner)",
      "event Pause()",
      "event Unpause()",
      "event Burn(address indexed burner, uint256 value)",
      "event Mint(address indexed to, uint256 amount)",
      "event MintFinished()",
      "event OwnershipRenounced(address indexed previousOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value)"
    ],
    "0x24179CD81c9e782A4096035f7eC97fB8B783e007": [
      "event ActivePoolAddressChanged(address _activePoolAddress)",
      "event CollSurplusPoolAddressChanged(address _collSurplusPoolAddress)",
      "event DefaultPoolAddressChanged(address _defaultPoolAddress)",
      "event GasPoolAddressChanged(address _gasPoolAddress)",
      "event LQTYStakingAddressChanged(address _lqtyStakingAddress)",
      "event LUSDBorrowingFeePaid(address indexed _borrower, uint256 _LUSDFee)",
      "event LUSDTokenAddressChanged(address _lusdTokenAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PriceFeedAddressChanged(address _newPriceFeedAddress)",
      "event SortedTrovesAddressChanged(address _sortedTrovesAddress)",
      "event StabilityPoolAddressChanged(address _stabilityPoolAddress)",
      "event TroveCreated(address indexed _borrower, uint256 arrayIndex)",
      "event TroveManagerAddressChanged(address _newTroveManagerAddress)",
      "event TroveUpdated(address indexed _borrower, uint256 _debt, uint256 _coll, uint256 stake, uint8 operation)",
      "function BORROWING_FEE_FLOOR() view returns (uint256)",
      "function CCR() view returns (uint256)",
      "function DECIMAL_PRECISION() view returns (uint256)",
      "function LUSD_GAS_COMPENSATION() view returns (uint256)",
      "function MCR() view returns (uint256)",
      "function MIN_NET_DEBT() view returns (uint256)",
      "function NAME() view returns (string)",
      "function PERCENT_DIVISOR() view returns (uint256)",
      "function _100pct() view returns (uint256)",
      "function activePool() view returns (address)",
      "function addColl(address _upperHint, address _lowerHint) payable",
      "function adjustTrove(uint256 _maxFeePercentage, uint256 _collWithdrawal, uint256 _LUSDChange, bool _isDebtIncrease, address _upperHint, address _lowerHint) payable",
      "function claimCollateral()",
      "function closeTrove()",
      "function defaultPool() view returns (address)",
      "function getCompositeDebt(uint256 _debt) pure returns (uint256)",
      "function getEntireSystemColl() view returns (uint256 entireSystemColl)",
      "function getEntireSystemDebt() view returns (uint256 entireSystemDebt)",
      "function isOwner() view returns (bool)",
      "function lqtyStaking() view returns (address)",
      "function lqtyStakingAddress() view returns (address)",
      "function lusdToken() view returns (address)",
      "function moveETHGainToTrove(address _borrower, address _upperHint, address _lowerHint) payable",
      "function openTrove(uint256 _maxFeePercentage, uint256 _LUSDAmount, address _upperHint, address _lowerHint) payable",
      "function owner() view returns (address)",
      "function priceFeed() view returns (address)",
      "function repayLUSD(uint256 _LUSDAmount, address _upperHint, address _lowerHint)",
      "function setAddresses(address _troveManagerAddress, address _activePoolAddress, address _defaultPoolAddress, address _stabilityPoolAddress, address _gasPoolAddress, address _collSurplusPoolAddress, address _priceFeedAddress, address _sortedTrovesAddress, address _lusdTokenAddress, address _lqtyStakingAddress)",
      "function sortedTroves() view returns (address)",
      "function troveManager() view returns (address)",
      "function withdrawColl(uint256 _collWithdrawal, address _upperHint, address _lowerHint)",
      "function withdrawLUSD(uint256 _maxFeePercentage, uint256 _LUSDAmount, address _upperHint, address _lowerHint)"
    ],
    "0x251a604E8E8f6906d60f8dedC5aAeb8CD38F4892": [
      "constructor(address _singleton)"
    ],
    "0x2A6ddD9401B14d0443d0738B8a78fd5B99829A80": [
      "constructor(address _creator_address, address _timelock_address)",
      "event OwnerChanged(address oldOwner, address newOwner)",
      "event OwnerNominated(address newOwner)",
      "function EXTRA_PRECISION() view returns (uint256)",
      "function PRICE_PRECISION() view returns (uint256)",
      "function acceptOwnership()",
      "function chainlink_frax_eth_decimals() view returns (uint256)",
      "function consult(address token, uint256 amountIn) view returns (uint256 amountOut)",
      "function getFRAXPrice() view returns (uint256 raw_price, uint256 precise_price)",
      "function nominateNewOwner(address _owner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function setChainlinkFRAXETHOracle(address _chainlink_frax_eth_oracle)",
      "function timelock_address() view returns (address)"
    ],
    "0x2cE01c87Fec1b71A9041c52CaED46Fc5f4807285": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x2EDFb4eb6A7FB78B3aC9204F179510865D77C660": [
      "constructor(address ghoToken, address underlyingAsset, address priceStrategy)",
      "event BackingProvided(address indexed backer, address indexed asset, uint256 amount, uint256 ghoAmount, uint256 remainingLoss)",
      "event BurnAfterSeize(address indexed burner, uint256 amount, uint256 ghoOutstanding)",
      "event BuyAsset(address indexed originator, address indexed receiver, uint256 underlyingAmount, uint256 ghoAmount, uint256 fee)",
      "event ExposureCapUpdated(uint256 oldExposureCap, uint256 newExposureCap)",
      "event FeeStrategyUpdated(address indexed oldFeeStrategy, address indexed newFeeStrategy)",
      "event FeesDistributedToTreasury(address indexed ghoTreasury, address indexed asset, uint256 amount)",
      "event GhoTreasuryUpdated(address indexed oldGhoTreasury, address indexed newGhoTreasury)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Seized(address indexed seizer, address indexed recipient, uint256 underlyingAmount, uint256 ghoOutstanding)",
      "event SellAsset(address indexed originator, address indexed receiver, uint256 underlyingAmount, uint256 ghoAmount, uint256 fee)",
      "event SwapFreeze(address indexed freezer, bool enabled)",
      "event TokensRescued(address indexed tokenRescued, address indexed recipient, uint256 amountRescued)",
      "function BUY_ASSET_WITH_SIG_TYPEHASH() view returns (bytes32)",
      "function CONFIGURATOR_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function GHO_TOKEN() view returns (address)",
      "function GSM_REVISION() pure returns (uint256)",
      "function LIQUIDATOR_ROLE() view returns (bytes32)",
      "function PRICE_STRATEGY() view returns (address)",
      "function SELL_ASSET_WITH_SIG_TYPEHASH() view returns (bytes32)",
      "function SWAP_FREEZER_ROLE() view returns (bytes32)",
      "function TOKEN_RESCUER_ROLE() view returns (bytes32)",
      "function UNDERLYING_ASSET() view returns (address)",
      "function backWithGho(uint256 amount) returns (uint256)",
      "function backWithUnderlying(uint256 amount) returns (uint256)",
      "function burnAfterSeize(uint256 amount) returns (uint256)",
      "function buyAsset(uint256 minAmount, address receiver) returns (uint256, uint256)",
      "function buyAssetWithSig(address originator, uint256 minAmount, address receiver, uint256 deadline, bytes signature) returns (uint256, uint256)",
      "function canSwap() view returns (bool)",
      "function distributeFeesToTreasury()",
      "function getAccruedFees() view returns (uint256)",
      "function getAssetAmountForBuyAsset(uint256 maxGhoAmount) view returns (uint256, uint256, uint256, uint256)",
      "function getAssetAmountForSellAsset(uint256 minGhoAmount) view returns (uint256, uint256, uint256, uint256)",
      "function getAvailableLiquidity() view returns (uint256)",
      "function getAvailableUnderlyingExposure() view returns (uint256)",
      "function getCurrentBacking() view returns (uint256, uint256)",
      "function getExposureCap() view returns (uint128)",
      "function getFeeStrategy() view returns (address)",
      "function getGhoAmountForBuyAsset(uint256 minAssetAmount) view returns (uint256, uint256, uint256, uint256)",
      "function getGhoAmountForSellAsset(uint256 maxAssetAmount) view returns (uint256, uint256, uint256, uint256)",
      "function getGhoTreasury() view returns (address)",
      "function getIsFrozen() view returns (bool)",
      "function getIsSeized() view returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin, address ghoTreasury, uint128 exposureCap)",
      "function nonces(address) view returns (uint256)",
      "function renounceRole(bytes32 role, address account)",
      "function rescueTokens(address token, address to, uint256 amount)",
      "function revokeRole(bytes32 role, address account)",
      "function seize() returns (uint256)",
      "function sellAsset(uint256 maxAmount, address receiver) returns (uint256, uint256)",
      "function sellAssetWithSig(address originator, uint256 maxAmount, address receiver, uint256 deadline, bytes signature) returns (uint256, uint256)",
      "function setSwapFreeze(bool enable)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateExposureCap(uint128 exposureCap)",
      "function updateFeeStrategy(address feeStrategy)",
      "function updateGhoTreasury(address newGhoTreasury)"
    ],
    "0x2f32A274e02FA356423CE5e97a8e3155c1Ac396b": [
      "constructor(address pool)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BalanceTransfer(address indexed from, address indexed to, uint256 value, uint256 index)",
      "event Burn(address indexed from, address indexed target, uint256 value, uint256 balanceIncrease, uint256 index)",
      "event FeesDistributedToTreasury(address indexed ghoTreasury, address indexed asset, uint256 amount)",
      "event GhoTreasuryUpdated(address indexed oldGhoTreasury, address indexed newGhoTreasury)",
      "event Initialized(address indexed underlyingAsset, address indexed pool, address treasury, address incentivesController, uint8 aTokenDecimals, string aTokenName, string aTokenSymbol, bytes params)",
      "event Mint(address indexed caller, address indexed onBehalfOf, uint256 value, uint256 balanceIncrease, uint256 index)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event VariableDebtTokenSet(address indexed variableDebtToken)",
      "function ATOKEN_REVISION() view returns (uint256)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function EIP712_REVISION() view returns (bytes)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function POOL() view returns (address)",
      "function RESERVE_TREASURY_ADDRESS() view returns (address)",
      "function UNDERLYING_ASSET_ADDRESS() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address user) view returns (uint256)",
      "function burn(address from, address receiverOfUnderlying, uint256 amount, uint256 index)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function distributeFeesToTreasury()",
      "function getGhoTreasury() view returns (address)",
      "function getIncentivesController() view returns (address)",
      "function getPreviousIndex(address user) view returns (uint256)",
      "function getScaledUserBalanceAndSupply(address user) view returns (uint256, uint256)",
      "function getVariableDebtToken() view returns (address)",
      "function handleRepayment(address user, address onBehalfOf, uint256 amount)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address initializingPool, address treasury, address underlyingAsset, address incentivesController, uint8 aTokenDecimals, string aTokenName, string aTokenSymbol, bytes params)",
      "function mint(address caller, address onBehalfOf, uint256 amount, uint256 index) returns (bool)",
      "function mintToTreasury(uint256 amount, uint256 index)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function rescueTokens(address token, address to, uint256 amount)",
      "function scaledBalanceOf(address user) view returns (uint256)",
      "function scaledTotalSupply() view returns (uint256)",
      "function setIncentivesController(address controller)",
      "function setVariableDebtToken(address ghoVariableDebtToken)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function transferOnLiquidation(address from, address to, uint256 value)",
      "function transferUnderlyingTo(address target, uint256 amount)",
      "function updateGhoTreasury(address newGhoTreasury)"
    ],
    "0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e": [
      "constructor(string marketId, address owner)",
      "event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress)",
      "event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress)",
      "event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress)",
      "event AddressSetAsProxy(bytes32 indexed id, address indexed proxyAddress, address oldImplementationAddress, address indexed newImplementationAddress)",
      "event MarketIdSet(string indexed oldMarketId, string indexed newMarketId)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress)",
      "event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress)",
      "event PoolUpdated(address indexed oldAddress, address indexed newAddress)",
      "event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress)",
      "event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress)",
      "event ProxyCreated(bytes32 indexed id, address indexed proxyAddress, address indexed implementationAddress)",
      "function getACLAdmin() view returns (address)",
      "function getACLManager() view returns (address)",
      "function getAddress(bytes32 id) view returns (address)",
      "function getMarketId() view returns (string)",
      "function getPool() view returns (address)",
      "function getPoolConfigurator() view returns (address)",
      "function getPoolDataProvider() view returns (address)",
      "function getPriceOracle() view returns (address)",
      "function getPriceOracleSentinel() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setACLAdmin(address newAclAdmin)",
      "function setACLManager(address newAclManager)",
      "function setAddress(bytes32 id, address newAddress)",
      "function setAddressAsProxy(bytes32 id, address newImplementationAddress)",
      "function setMarketId(string newMarketId)",
      "function setPoolConfiguratorImpl(address newPoolConfiguratorImpl)",
      "function setPoolDataProvider(address newDataProvider)",
      "function setPoolImpl(address newPoolImpl)",
      "function setPriceOracle(address newPriceOracle)",
      "function setPriceOracleSentinel(address newPriceOracleSentinel)",
      "function transferOwnership(address newOwner)"
    ],
    "0x308861A430be4cce5502d0A12724771Fc6DaF216": [
      "constructor(address _implementation, bytes _data)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x31724cA0C982A31fbb5C57f4217AB585271fc9a5": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AuthorizationCanceled(address indexed authorizer, bytes32 indexed nonce)",
      "event AuthorizationUsed(address indexed authorizer, bytes32 indexed nonce)",
      "event Blacklisted(address indexed _account)",
      "event BlacklisterChanged(address indexed newBlacklister)",
      "event Burn(address indexed burner, uint256 amount)",
      "event ExchangeRateUpdated(address indexed oracle, uint256 newExchangeRate)",
      "event MasterMinterChanged(address indexed newMasterMinter)",
      "event Mint(address indexed minter, address indexed to, uint256 amount)",
      "event MinterConfigured(address indexed minter, uint256 minterAllowedAmount)",
      "event MinterRemoved(address indexed oldMinter)",
      "event OracleUpdated(address indexed newOracle)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RescuerChanged(address indexed newRescuer)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UnBlacklisted(address indexed _account)",
      "event Unpause()",
      "function CANCEL_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function RECEIVE_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function TRANSFER_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function authorizationState(address authorizer, bytes32 nonce) view returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function blacklist(address _account)",
      "function blacklister() view returns (address)",
      "function burn(uint256 _amount)",
      "function cancelAuthorization(address authorizer, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function configureMinter(address minter, uint256 minterAllowedAmount) returns (bool)",
      "function currency() view returns (string)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 decrement) returns (bool)",
      "function exchangeRate() view returns (uint256 _exchangeRate)",
      "function increaseAllowance(address spender, uint256 increment) returns (bool)",
      "function initialize(string tokenName, string tokenSymbol, string tokenCurrency, uint8 tokenDecimals, address newMasterMinter, address newPauser, address newBlacklister, address newOwner)",
      "function initializeV2(string newName)",
      "function initializeV2_1(address lostAndFound)",
      "function isBlacklisted(address _account) view returns (bool)",
      "function isMinter(address account) view returns (bool)",
      "function masterMinter() view returns (address)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function minterAllowance(address minter) view returns (uint256)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function oracle() view returns (address _oracle)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function receiveWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function removeMinter(address minter) returns (bool)",
      "function rescueERC20(address tokenContract, address to, uint256 amount)",
      "function rescuer() view returns (address)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function transferWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function unBlacklist(address _account)",
      "function unpause()",
      "function updateBlacklister(address _newBlacklister)",
      "function updateExchangeRate(uint256 newExchangeRate)",
      "function updateMasterMinter(address _newMasterMinter)",
      "function updateOracle(address newOracle)",
      "function updatePauser(address _newPauser)",
      "function updateRescuer(address newRescuer)",
      "function version() view returns (string)"
    ],
    "0x31d9bDEa6F104606C954f8FE6ba614F1BD347Ec3": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x32B8AE4eE1401E726aF0BC154D2165D0592584c4": [
      "constructor(address _singleton)"
    ],
    "0x34039100cc9584Ae5D741d322e16d0d18CEE8770": [
      "event FlashLoan(address indexed target, address initiator, address indexed asset, uint256 amount, uint8 interestRateMode, uint256 premium, uint16 indexed referralCode)",
      "event ReserveDataUpdated(address indexed reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)"
    ],
    "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0": [
      "constructor(string _name, string _symbol, address _oracle_address, address _owner_address, address _timelock_address)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event FXSBurned(address indexed from, address indexed to, uint256 amount)",
      "event FXSMinted(address indexed from, address indexed to, uint256 amount)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event VoterVotesChanged(address indexed voter, uint256 previousBalance, uint256 newBalance)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function FRAXStablecoinAdd() view returns (address)",
      "function FXS_DAO_min() view returns (uint256)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function checkpoints(address, uint32) view returns (uint32 fromBlock, uint96 votes)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function genesis_supply() view returns (uint256)",
      "function getCurrentVotes(address account) view returns (uint96)",
      "function getPriorVotes(address account, uint256 blockNumber) view returns (uint96)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function numCheckpoints(address) view returns (uint32)",
      "function oracle_address() view returns (address)",
      "function owner_address() view returns (address)",
      "function pool_burn_from(address b_address, uint256 b_amount)",
      "function pool_mint(address m_address, uint256 m_amount)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setFRAXAddress(address frax_contract_address)",
      "function setFXSMinDAO(uint256 min_FXS)",
      "function setOracle(address new_oracle)",
      "function setOwner(address _owner_address)",
      "function setTimelock(address new_timelock)",
      "function symbol() view returns (string)",
      "function timelock_address() view returns (address)",
      "function toggleVotes()",
      "function totalSupply() view returns (uint256)",
      "function trackingVotes() view returns (bool)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)"
    ],
    "0x353E98F34b6E5a8D9d1876Bf6dF01284d05837cB": [
      "constructor()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Upgraded(address indexed implementation)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function eETH() view returns (address)",
      "function getEETHByWeETH(uint256 _weETHAmount) view returns (uint256)",
      "function getImplementation() view returns (address)",
      "function getRate() view returns (uint256)",
      "function getWeETHByeETH(uint256 _eETHAmount) view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address _liquidityPool, address _eETH)",
      "function liquidityPool() view returns (address)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function rescueTreasuryWeeth()",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unwrap(uint256 _weETHAmount) returns (uint256)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function wrap(uint256 _eETHAmount) returns (uint256)",
      "function wrapWithPermit(uint256 _eETHAmount, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) _permit) returns (uint256)"
    ],
    "0x35A338522a435D46f77Be32C70E215B813D0e3aC": [
      "constructor(address _ytCreationCodeContractA, uint256 _ytCreationCodeSizeA, address _ytCreationCodeContractB, uint256 _ytCreationCodeSizeB)",
      "error YCFactoryInterestFeeRateTooHigh(uint256 interestFeeRate, uint256 maxInterestFeeRate)",
      "error YCFactoryInvalidExpiry()",
      "error YCFactoryRewardFeeRateTooHigh(uint256 newRewardFeeRate, uint256 maxRewardFeeRate)",
      "error YCFactoryYieldContractExisted()",
      "error YCFactoryZeroExpiryDivisor()",
      "error YCFactoryZeroTreasury()",
      "event CreateYieldContract(address indexed SY, uint256 indexed expiry, address PT, address YT)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event SetExpiryDivisor(uint256 newExpiryDivisor)",
      "event SetInterestFeeRate(uint256 newInterestFeeRate)",
      "event SetRewardFeeRate(uint256 newRewardFeeRate)",
      "event SetTreasury(address indexed treasury)",
      "function claimOwnership()",
      "function createYieldContract(address SY, uint32 expiry, bool doCacheIndexSameBlock) returns (address PT, address YT)",
      "function expiryDivisor() view returns (uint96)",
      "function getPT(address, uint256) view returns (address)",
      "function getYT(address, uint256) view returns (address)",
      "function initialize(uint96 _expiryDivisor, uint128 _interestFeeRate, uint128 _rewardFeeRate, address _treasury)",
      "function interestFeeRate() view returns (uint128)",
      "function isPT(address) view returns (bool)",
      "function isYT(address) view returns (bool)",
      "function maxInterestFeeRate() view returns (uint256)",
      "function maxRewardFeeRate() view returns (uint256)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function rewardFeeRate() view returns (uint128)",
      "function setExpiryDivisor(uint96 newExpiryDivisor)",
      "function setInterestFeeRate(uint128 newInterestFeeRate)",
      "function setRewardFeeRate(uint128 newRewardFeeRate)",
      "function setTreasury(address newTreasury)",
      "function transferOwnership(address newOwner, bool direct, bool renounce)",
      "function treasury() view returns (address)",
      "function ytCreationCodeContractA() view returns (address)",
      "function ytCreationCodeContractB() view returns (address)",
      "function ytCreationCodeSizeA() view returns (uint256)",
      "function ytCreationCodeSizeB() view returns (uint256)"
    ],
    "0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B": [
      "constructor()",
      "event LogNote(bytes4 indexed sig, bytes32 indexed arg1, bytes32 indexed arg2, bytes32 indexed arg3, bytes data) anonymous",
      "function Line() view returns (uint256)",
      "function cage()",
      "function can(address, address) view returns (uint256)",
      "function dai(address) view returns (uint256)",
      "function debt() view returns (uint256)",
      "function deny(address usr)",
      "function file(bytes32 ilk, bytes32 what, uint256 data)",
      "function file(bytes32 what, uint256 data)",
      "function flux(bytes32 ilk, address src, address dst, uint256 wad)",
      "function fold(bytes32 i, address u, int256 rate)",
      "function fork(bytes32 ilk, address src, address dst, int256 dink, int256 dart)",
      "function frob(bytes32 i, address u, address v, address w, int256 dink, int256 dart)",
      "function gem(bytes32, address) view returns (uint256)",
      "function grab(bytes32 i, address u, address v, address w, int256 dink, int256 dart)",
      "function heal(uint256 rad)",
      "function hope(address usr)",
      "function ilks(bytes32) view returns (uint256 Art, uint256 rate, uint256 spot, uint256 line, uint256 dust)",
      "function init(bytes32 ilk)",
      "function live() view returns (uint256)",
      "function move(address src, address dst, uint256 rad)",
      "function nope(address usr)",
      "function rely(address usr)",
      "function sin(address) view returns (uint256)",
      "function slip(bytes32 ilk, address usr, int256 wad)",
      "function suck(address u, address v, uint256 rad)",
      "function urns(bytes32, address) view returns (uint256 ink, uint256 art)",
      "function vice() view returns (uint256)",
      "function wards(address) view returns (uint256)"
    ],
    "0x35fA164735182de50811E8e2E824cFb9B6118ac2": [
      "constructor(address _implementation, bytes _data)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37": [
      "function ADD_PROTECTED_TOKEN_ROLE() view returns (bytes32)",
      "function supportsInterface(bytes4 _interfaceId) pure returns (bool)",
      "function hasInitialized() view returns (bool)",
      "function ERC1271_INTERFACE_ID() view returns (bytes4)",
      "function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes _data) returns (bytes4)",
      "function isValidSignature(bytes32 _hash, bytes _signature) view returns (bytes4)",
      "function ERC1271_RETURN_INVALID_SIGNATURE() view returns (bytes4)",
      "function TRANSFER_ROLE() view returns (bytes32)",
      "function isValidSignature(bytes _data, bytes _signature) view returns (bytes4)",
      "function getProtectedTokensLength() view returns (uint256)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function RUN_SCRIPT_ROLE() view returns (bytes32)",
      "function SAFE_EXECUTE_ROLE() view returns (bytes32)",
      "function REMOVE_PROTECTED_TOKEN_ROLE() view returns (bytes32)",
      "function deposit(address _token, uint256 _value) payable",
      "function isDepositable() view returns (bool)",
      "function presignHash(bytes32 _hash)",
      "function DESIGNATE_SIGNER_ROLE() view returns (bytes32)",
      "function removeProtectedToken(address _token)",
      "function EXECUTE_ROLE() view returns (bytes32)",
      "function addProtectedToken(address _token)",
      "function allowRecoverability(address) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function initialize()",
      "function protectedTokens(uint256) view returns (address)",
      "function getInitializationBlock() view returns (uint256)",
      "function ERC1271_RETURN_VALID_SIGNATURE() view returns (bytes4)",
      "function transferToVault(address _token)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function setDesignatedSigner(address _designatedSigner)",
      "function designatedSigner() view returns (address)",
      "function safeExecute(address _target, bytes _data)",
      "function PROTECTED_TOKENS_CAP() view returns (uint256)",
      "function ADD_PRESIGNED_HASH_ROLE() view returns (bytes32)",
      "function isPresigned(bytes32) view returns (bool)",
      "function execute(address _target, uint256 _ethValue, bytes _data)",
      "function transfer(address _token, address _to, uint256 _value)",
      "function canForward(address _sender, bytes _evmScript) view returns (bool)",
      "function kernel() view returns (address)",
      "function forward(bytes _evmScript)",
      "function isPetrified() view returns (bool)",
      "function balance(address _token) view returns (uint256)",
      "function isForwarder() pure returns (bool)",
      "event SafeExecute(address indexed sender, address indexed target, bytes data)",
      "event Execute(address indexed sender, address indexed target, uint256 ethValue, bytes data)",
      "event AddProtectedToken(address indexed token)",
      "event RemoveProtectedToken(address indexed token)",
      "event PresignHash(address indexed sender, bytes32 indexed hash)",
      "event SetDesignatedSigner(address indexed sender, address indexed oldSigner, address indexed newSigner)",
      "event ReceiveERC721(address indexed token, address indexed operator, address indexed from, uint256 tokenId, bytes data)",
      "event VaultTransfer(address indexed token, address indexed to, uint256 amount)",
      "event VaultDeposit(address indexed token, address indexed sender, uint256 amount)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)"
    ],
    "0x3B0AAf6e6fCd4a7cEEf8c92C32DFeA9E64dC1862": [
      "constructor(address _singleton)"
    ],
    "0x3B11DA52030420c663d263Ad4415a8A02E5f8cf8": [
      "constructor(address factory, address tokenA, address tokenB, address owner_address, address timelock_address)",
      "function ALLOW_STALE_CONSULTS() view returns (bool)",
      "function CONSULT_LENIENCY() view returns (uint256)",
      "function PERIOD() view returns (uint256)",
      "function blockTimestampLast() view returns (uint32)",
      "function canUpdate() view returns (bool)",
      "function consult(address token, uint256 amountIn) view returns (uint256 amountOut)",
      "function pair() view returns (address)",
      "function price0Average() view returns (uint224 _x)",
      "function price0CumulativeLast() view returns (uint256)",
      "function price1Average() view returns (uint224 _x)",
      "function price1CumulativeLast() view returns (uint256)",
      "function setAllowStaleConsults(bool _allow_stale_consults)",
      "function setConsultLeniency(uint256 _consult_leniency)",
      "function setOwner(address _owner_address)",
      "function setPeriod(uint256 _period)",
      "function setTimelock(address _timelock_address)",
      "function token0() view returns (address)",
      "function token1() view returns (address)",
      "function update()"
    ],
    "0x3b3fB9C57858EF816833dC91565EFcd85D96f634": [
      "constructor(address _SY, string _name, string _symbol, uint8 __decimals, uint256 _expiry)",
      "error OnlyYCFactory()",
      "error OnlyYT()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint8 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function SY() view returns (address)",
      "function YT() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burnByYT(address user, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function expiry() view returns (uint256)",
      "function factory() view returns (address)",
      "function initialize(address _YT)",
      "function isExpired() view returns (bool)",
      "function mintByYT(address user, uint256 amount)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x3C405F68d5C6eCE868e5646cAC926679839aCd68": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x3EB01B3391EA15CE752d01Cf3D3F09deC596F650": [
      "function owners(uint256) view returns (address)",
      "function removeOwner(address owner)",
      "function revokeConfirmation(uint256 transactionId)",
      "function isOwner(address) view returns (bool)",
      "function confirmations(uint256, address) view returns (bool)",
      "function calcMaxWithdraw() view returns (uint256)",
      "function getTransactionCount(bool pending, bool executed) view returns (uint256 count)",
      "function dailyLimit() view returns (uint256)",
      "function lastDay() view returns (uint256)",
      "function addOwner(address owner)",
      "function isConfirmed(uint256 transactionId) view returns (bool)",
      "function getConfirmationCount(uint256 transactionId) view returns (uint256 count)",
      "function transactions(uint256) view returns (address destination, uint256 value, bytes data, bool executed)",
      "function getOwners() view returns (address[])",
      "function getTransactionIds(uint256 from, uint256 to, bool pending, bool executed) view returns (uint256[] _transactionIds)",
      "function getConfirmations(uint256 transactionId) view returns (address[] _confirmations)",
      "function transactionCount() view returns (uint256)",
      "function changeRequirement(uint256 _required)",
      "function confirmTransaction(uint256 transactionId)",
      "function submitTransaction(address destination, uint256 value, bytes data) returns (uint256 transactionId)",
      "function changeDailyLimit(uint256 _dailyLimit)",
      "function MAX_OWNER_COUNT() view returns (uint256)",
      "function required() view returns (uint256)",
      "function replaceOwner(address owner, address newOwner)",
      "function executeTransaction(uint256 transactionId)",
      "function spentToday() view returns (uint256)",
      "constructor(address[] _owners, uint256 _required, uint256 _dailyLimit) payable",
      "event DailyLimitChange(uint256 dailyLimit)",
      "event Confirmation(address indexed sender, uint256 indexed transactionId)",
      "event Revocation(address indexed sender, uint256 indexed transactionId)",
      "event Submission(uint256 indexed transactionId)",
      "event Execution(uint256 indexed transactionId)",
      "event ExecutionFailure(uint256 indexed transactionId)",
      "event Deposit(address indexed sender, uint256 value)",
      "event OwnerAddition(address indexed owner)",
      "event OwnerRemoval(address indexed owner)",
      "event RequirementChange(uint256 required)"
    ],
    "0x40907540d8a6C65c637785e8f8B742ae6b0b9968": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f": [
      "constructor(address admin)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event FacilitatorAdded(address indexed facilitatorAddress, bytes32 indexed label, uint256 bucketCapacity)",
      "event FacilitatorBucketCapacityUpdated(address indexed facilitatorAddress, uint256 oldCapacity, uint256 newCapacity)",
      "event FacilitatorBucketLevelUpdated(address indexed facilitatorAddress, uint256 oldLevel, uint256 newLevel)",
      "event FacilitatorRemoved(address indexed facilitatorAddress)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function BUCKET_MANAGER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function FACILITATOR_MANAGER_ROLE() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function addFacilitator(address facilitatorAddress, string facilitatorLabel, uint128 bucketCapacity)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address) view returns (uint256)",
      "function burn(uint256 amount)",
      "function decimals() view returns (uint8)",
      "function getFacilitator(address facilitator) view returns (tuple(uint128 bucketCapacity, uint128 bucketLevel, string label))",
      "function getFacilitatorBucket(address facilitator) view returns (uint256, uint256)",
      "function getFacilitatorsList() view returns (address[])",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function mint(address account, uint256 amount)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function removeFacilitator(address facilitatorAddress)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setFacilitatorBucketCapacity(address facilitator, uint128 newCapacity)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x41675C099F32341bf84BFc5382aF534df5C7461a": [
      "constructor()",
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x43506849D7C04F9138D1A2050bbF3A0c054402dd": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AuthorizationCanceled(address indexed authorizer, bytes32 indexed nonce)",
      "event AuthorizationUsed(address indexed authorizer, bytes32 indexed nonce)",
      "event Blacklisted(address indexed _account)",
      "event BlacklisterChanged(address indexed newBlacklister)",
      "event Burn(address indexed burner, uint256 amount)",
      "event MasterMinterChanged(address indexed newMasterMinter)",
      "event Mint(address indexed minter, address indexed to, uint256 amount)",
      "event MinterConfigured(address indexed minter, uint256 minterAllowedAmount)",
      "event MinterRemoved(address indexed oldMinter)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RescuerChanged(address indexed newRescuer)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UnBlacklisted(address indexed _account)",
      "event Unpause()",
      "function CANCEL_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function RECEIVE_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function TRANSFER_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function authorizationState(address authorizer, bytes32 nonce) view returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function blacklist(address _account)",
      "function blacklister() view returns (address)",
      "function burn(uint256 _amount)",
      "function cancelAuthorization(address authorizer, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function cancelAuthorization(address authorizer, bytes32 nonce, bytes signature)",
      "function configureMinter(address minter, uint256 minterAllowedAmount) returns (bool)",
      "function currency() view returns (string)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 decrement) returns (bool)",
      "function increaseAllowance(address spender, uint256 increment) returns (bool)",
      "function initialize(string tokenName, string tokenSymbol, string tokenCurrency, uint8 tokenDecimals, address newMasterMinter, address newPauser, address newBlacklister, address newOwner)",
      "function initializeV2(string newName)",
      "function initializeV2_1(address lostAndFound)",
      "function initializeV2_2(address[] accountsToBlacklist, string newSymbol)",
      "function isBlacklisted(address _account) view returns (bool)",
      "function isMinter(address account) view returns (bool)",
      "function masterMinter() view returns (address)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function minterAllowance(address minter) view returns (uint256)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, bytes signature)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function receiveWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, bytes signature)",
      "function receiveWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function removeMinter(address minter) returns (bool)",
      "function rescueERC20(address tokenContract, address to, uint256 amount)",
      "function rescuer() view returns (address)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function transferWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, bytes signature)",
      "function transferWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function unBlacklist(address _account)",
      "function unpause()",
      "function updateBlacklister(address _newBlacklister)",
      "function updateMasterMinter(address _newMasterMinter)",
      "function updatePauser(address _newPauser)",
      "function updateRescuer(address newRescuer)",
      "function version() pure returns (string)"
    ],
    "0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c": [
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address)",
      "function initialize(address logic, address admin, bytes data) payable",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x46c51d2E6d5FEF0400d26320bC96995176c369DD": [
      "constructor()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event TransferShares(address indexed from, address indexed to, uint256 sharesValue)",
      "event Upgraded(address indexed implementation)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function allowances(address, address) view returns (uint256)",
      "function approve(address _spender, uint256 _amount) returns (bool)",
      "function balanceOf(address _user) view returns (uint256)",
      "function burnShares(address _user, uint256 _share)",
      "function decimals() pure returns (uint8)",
      "function decreaseAllowance(address _spender, uint256 _decreaseAmount) returns (bool)",
      "function getImplementation() view returns (address)",
      "function increaseAllowance(address _spender, uint256 _increaseAmount) returns (bool)",
      "function initialize(address _liquidityPool)",
      "function liquidityPool() view returns (address)",
      "function mintShares(address _user, uint256 _share)",
      "function name() pure returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function shares(address) view returns (uint256)",
      "function symbol() pure returns (string)",
      "function totalShares() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address _recipient, uint256 _amount) returns (bool)",
      "function transferFrom(address _sender, address _recipient, uint256 _amount) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x4731bF01583F991278692E8727d0700a00A1fBBf": [
      "event DeficitCovered(address indexed reserve, address caller, uint256 amountCovered)",
      "event DeficitCreated(address indexed user, address indexed debtAsset, uint256 amountCreated)",
      "event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt)",
      "event LiquidationCall(address indexed collateralAsset, address indexed debtAsset, address indexed user, uint256 debtToCover, uint256 liquidatedCollateralAmount, address liquidator, bool receiveAToken)",
      "event ReserveDataUpdated(address indexed reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)",
      "event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user)",
      "event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user)",
      "function CLOSE_FACTOR_HF_THRESHOLD() view returns (uint256)",
      "function MIN_BASE_MAX_CLOSE_FACTOR_THRESHOLD() view returns (uint256)",
      "function MIN_LEFTOVER_BASE() view returns (uint256)"
    ],
    "0x497a1994c46d4f6C864904A9f1fac6328Cb7C8a6": [
      "constructor(address addressesProvider)",
      "function ADDRESSES_PROVIDER() view returns (address)",
      "function getATokenTotalSupply(address asset) view returns (uint256)",
      "function getAllATokens() view returns (tuple(string symbol, address tokenAddress)[])",
      "function getAllReservesTokens() view returns (tuple(string symbol, address tokenAddress)[])",
      "function getDebtCeiling(address asset) view returns (uint256)",
      "function getDebtCeilingDecimals() pure returns (uint256)",
      "function getFlashLoanEnabled(address asset) view returns (bool)",
      "function getInterestRateStrategyAddress(address asset) view returns (address irStrategyAddress)",
      "function getIsVirtualAccActive(address asset) view returns (bool)",
      "function getLiquidationProtocolFee(address asset) view returns (uint256)",
      "function getPaused(address asset) view returns (bool isPaused)",
      "function getReserveCaps(address asset) view returns (uint256 borrowCap, uint256 supplyCap)",
      "function getReserveConfigurationData(address asset) view returns (uint256 decimals, uint256 ltv, uint256 liquidationThreshold, uint256 liquidationBonus, uint256 reserveFactor, bool usageAsCollateralEnabled, bool borrowingEnabled, bool stableBorrowRateEnabled, bool isActive, bool isFrozen)",
      "function getReserveData(address asset) view returns (uint256 unbacked, uint256 accruedToTreasuryScaled, uint256 totalAToken, uint256, uint256 totalVariableDebt, uint256 liquidityRate, uint256 variableBorrowRate, uint256, uint256, uint256 liquidityIndex, uint256 variableBorrowIndex, uint40 lastUpdateTimestamp)",
      "function getReserveDeficit(address asset) view returns (uint256)",
      "function getReserveTokensAddresses(address asset) view returns (address aTokenAddress, address stableDebtTokenAddress, address variableDebtTokenAddress)",
      "function getSiloedBorrowing(address asset) view returns (bool)",
      "function getTotalDebt(address asset) view returns (uint256)",
      "function getUnbackedMintCap(address asset) view returns (uint256)",
      "function getUserReserveData(address asset, address user) view returns (uint256 currentATokenBalance, uint256 currentStableDebt, uint256 currentVariableDebt, uint256 principalStableDebt, uint256 scaledVariableDebt, uint256 stableBorrowRate, uint256 liquidityRate, uint40 stableRateLastUpdated, bool usageAsCollateralEnabled)",
      "function getVirtualUnderlyingBalance(address asset) view returns (uint256)"
    ],
    "0x4ABEF2263d5A5ED582FC9A9789a41D85b68d69DB": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x4C22fFd479637EA0eD61D451CBe6355627283358": [
      "constructor()",
      "error CallerNotManager()",
      "error ZeroAddress()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint8 version)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "event UpdatedStaderConfig(address indexed _staderConfig)",
      "function BURNER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function MINTER_ROLE() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address _admin, address _staderConfig)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function pause()",
      "function paused() view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function staderConfig() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function unpause()",
      "function updateStaderConfig(address _staderConfig)"
    ],
    "0x4c9EDD5852cd905f086C759E8383e09bff1E68B3": [
      "constructor(address admin)",
      "error CantRenounceOwnership()",
      "error InvalidShortString()",
      "error OnlyMinter()",
      "error StringTooLong(string str)",
      "error ZeroAddressException()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event EIP712DomainChanged()",
      "event MinterUpdated(address indexed newMinter, address indexed oldMinter)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function acceptOwnership()",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function mint(address to, uint256 amount)",
      "function minter() view returns (address)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceOwnership() view",
      "function setMinter(address newMinter)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8": [
      "constructor(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function implementation() returns (address)",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x500180A94cB854e98770872AF4E4BB1dD67Af559": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x50D2C7992b802Eef16c04FeADAB310f31866a545": [
      "constructor(address _SY, string _name, string _symbol, uint8 __decimals, uint256 _expiry)",
      "error OnlyYCFactory()",
      "error OnlyYT()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint8 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function SY() view returns (address)",
      "function YT() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burnByYT(address user, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function expiry() view returns (uint256)",
      "function factory() view returns (address)",
      "function initialize(address _YT)",
      "function isExpired() view returns (bool)",
      "function mintByYT(address user, uint256 amount)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x514910771AF9Ca656af840dff83E8264EcF986CA": [
      "function name() view returns (string)",
      "function approve(address _spender, uint256 _value) returns (bool)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address _from, address _to, uint256 _value) returns (bool)",
      "function decimals() view returns (uint8)",
      "function transferAndCall(address _to, uint256 _value, bytes _data) returns (bool success)",
      "function decreaseApproval(address _spender, uint256 _subtractedValue) returns (bool success)",
      "function balanceOf(address _owner) view returns (uint256 balance)",
      "function symbol() view returns (string)",
      "function transfer(address _to, uint256 _value) returns (bool success)",
      "function increaseApproval(address _spender, uint256 _addedValue) returns (bool success)",
      "function allowance(address _owner, address _spender) view returns (uint256 remaining)",
      "constructor()",
      "event Transfer(address indexed from, address indexed to, uint256 value, bytes data)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)"
    ],
    "0x5300A1a15135EA4dc7aD5a167152C01EFc9b192A": [
      "event ExecutedAction(address indexed target, uint256 value, string signature, bytes data, uint256 executionTime, bool withDelegatecall, bytes resultData)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, bool withDelegatecall) payable returns (bytes)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)"
    ],
    "0x535b2f7C20B9C83d70e519cf9991578eF9816B7B": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x54586bE62E3c3580375aE3723C145253060Ca0C2": [
      "constructor(address provider, address[] assets, address[] sources, address fallbackOracle, address baseCurrency, uint256 baseCurrencyUnit)",
      "event AssetSourceUpdated(address indexed asset, address indexed source)",
      "event BaseCurrencySet(address indexed baseCurrency, uint256 baseCurrencyUnit)",
      "event FallbackOracleUpdated(address indexed fallbackOracle)",
      "function ADDRESSES_PROVIDER() view returns (address)",
      "function BASE_CURRENCY() view returns (address)",
      "function BASE_CURRENCY_UNIT() view returns (uint256)",
      "function getAssetPrice(address asset) view returns (uint256)",
      "function getAssetsPrices(address[] assets) view returns (uint256[])",
      "function getFallbackOracle() view returns (address)",
      "function getSourceOfAsset(address asset) view returns (address)",
      "function setAssetSources(address[] assets, address[] sources)",
      "function setFallbackOracle(address fallbackOracle)"
    ],
    "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32": [
      "function name() view returns (string)",
      "function approve(address _spender, uint256 _amount) returns (bool success)",
      "function creationBlock() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address _from, address _to, uint256 _amount) returns (bool success)",
      "function decimals() view returns (uint8)",
      "function changeController(address _newController)",
      "function balanceOfAt(address _owner, uint256 _blockNumber) view returns (uint256)",
      "function version() view returns (string)",
      "function createCloneToken(string _cloneTokenName, uint8 _cloneDecimalUnits, string _cloneTokenSymbol, uint256 _snapshotBlock, bool _transfersEnabled) returns (address)",
      "function balanceOf(address _owner) view returns (uint256 balance)",
      "function parentToken() view returns (address)",
      "function generateTokens(address _owner, uint256 _amount) returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupplyAt(uint256 _blockNumber) view returns (uint256)",
      "function transfer(address _to, uint256 _amount) returns (bool success)",
      "function transfersEnabled() view returns (bool)",
      "function parentSnapShotBlock() view returns (uint256)",
      "function approveAndCall(address _spender, uint256 _amount, bytes _extraData) returns (bool success)",
      "function destroyTokens(address _owner, uint256 _amount) returns (bool)",
      "function allowance(address _owner, address _spender) view returns (uint256 remaining)",
      "function claimTokens(address _token)",
      "function tokenFactory() view returns (address)",
      "function enableTransfers(bool _transfersEnabled)",
      "function controller() view returns (address)",
      "constructor(address _tokenFactory, address _parentToken, uint256 _parentSnapShotBlock, string _tokenName, uint8 _decimalUnits, string _tokenSymbol, bool _transfersEnabled)",
      "event ClaimedTokens(address indexed _token, address indexed _controller, uint256 _amount)",
      "event Transfer(address indexed _from, address indexed _to, uint256 _amount)",
      "event NewCloneToken(address indexed _cloneToken, uint256 _snapshotBlock)",
      "event Approval(address indexed _owner, address indexed _spender, uint256 _amount)"
    ],
    "0x5D4Aa78B08Bc7C530e21bf7447988b1Be7991322": [
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event DelegateChanged(address indexed delegator, address indexed delegatee, uint8 delegationType)",
      "event EIP712DomainChanged()",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DELEGATE_BY_TYPE_TYPEHASH() view returns (bytes32)",
      "function DELEGATE_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function POWER_SCALE_FACTOR() view returns (uint256)",
      "function REVISION() view returns (uint256)",
      "function _nonces(address) view returns (uint256)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function delegate(address delegatee)",
      "function delegateByType(address delegatee, uint8 delegationType)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function getDelegateeByType(address delegator, uint8 delegationType) view returns (address)",
      "function getDelegates(address delegator) view returns (address, address)",
      "function getPowerCurrent(address user, uint8 delegationType) view returns (uint256)",
      "function getPowersCurrent(address user) view returns (uint256, uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize()",
      "function metaDelegate(address delegator, address delegatee, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function metaDelegateByType(address delegator, address delegatee, uint8 delegationType, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function name() view returns (string)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x5f98805A4E8be255a32880FDeC7F6728C6568bA0": [
      "constructor(address _troveManagerAddress, address _stabilityPoolAddress, address _borrowerOperationsAddress)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BorrowerOperationsAddressChanged(address _newBorrowerOperationsAddress)",
      "event LUSDTokenBalanceUpdated(address _user, uint256 _amount)",
      "event StabilityPoolAddressChanged(address _newStabilityPoolAddress)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event TroveManagerAddressChanged(address _troveManagerAddress)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function borrowerOperationsAddress() view returns (address)",
      "function burn(address _account, uint256 _amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function domainSeparator() view returns (bytes32)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function mint(address _account, uint256 _amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function permitTypeHash() view returns (bytes32)",
      "function returnFromPool(address _poolAddress, address _receiver, uint256 _amount)",
      "function sendToPool(address _sender, address _poolAddress, uint256 _amount)",
      "function stabilityPoolAddress() view returns (address)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function troveManagerAddress() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x60FF20BACD9A647e4025Ed8b17CE30e40095A1d2": [
      "constructor()",
      "error CallerNotLRTConfigAdmin()",
      "error CallerNotLRTConfigAllowedRole(string role)",
      "error CallerNotLRTConfigManager()",
      "error ValueAlreadyInUse()",
      "error ZeroAddressNotAllowed()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint8 version)",
      "event Paused(address account)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "event UpdatedLRTConfig(address indexed lrtConfig)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address admin, address lrtConfigAddr)",
      "function lrtConfig() view returns (address)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function pause()",
      "function paused() view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function unpause()",
      "function updateLRTConfig(address lrtConfigAddr)"
    ],
    "0x621Ef86D8A5C693a06295BC288B95C12D4CE4994": [
      "event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee)",
      "event MintUnbacked(address indexed reserve, address user, address indexed onBehalfOf, uint256 amount, uint16 indexed referralCode)",
      "event ReserveDataUpdated(address indexed reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)",
      "event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user)"
    ],
    "0x62325c94E1c49dcDb5937726aB5D8A4c37bCAd36": [
      "event Borrow(address indexed reserve, address user, address indexed onBehalfOf, uint256 amount, uint8 interestRateMode, uint256 borrowRate, uint16 indexed referralCode)",
      "event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt)",
      "event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt)",
      "event Repay(address indexed reserve, address indexed user, address indexed repayer, uint256 amount, bool useATokens)",
      "event ReserveDataUpdated(address indexed reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)",
      "event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user)"
    ],
    "0x64b761D848206f447Fe2dd461b0c635Ec39EbB27": [
      "constructor(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function implementation() returns (address)",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x657e8C867D8B37dCC18fA4Caead9C45EB088C642": [
      "constructor(address _owner, string _name, string _symbol, uint8 _decimals)",
      "error AddressEmptyCode(address target)",
      "error AddressInsufficientBalance(address account)",
      "error FailedInnerCall()",
      "event Approval(address indexed owner, address indexed spender, uint256 amount)",
      "event AuthorityUpdated(address indexed user, address indexed newAuthority)",
      "event Enter(address indexed from, address indexed asset, uint256 amount, address indexed to, uint256 shares)",
      "event Exit(address indexed to, address indexed asset, uint256 amount, address indexed from, uint256 shares)",
      "event OwnershipTransferred(address indexed user, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 amount)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function authority() view returns (address)",
      "function balanceOf(address) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function enter(address from, address asset, uint256 assetAmount, address to, uint256 shareAmount)",
      "function exit(address to, address asset, uint256 assetAmount, address from, uint256 shareAmount)",
      "function hook() view returns (address)",
      "function manage(address[] targets, bytes[] data, uint256[] values) returns (bytes[] results)",
      "function manage(address target, bytes data, uint256 value) returns (bytes result)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function setAuthority(address newAuthority)",
      "function setBeforeTransferHook(address _hook)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0x65bb797c2B9830d891D87288F029ed8dACc19705": [
      "constructor(address _singleton)"
    ],
    "0x66017D22b0f8556afDd19FC67041899Eb65a21bb": [
      "event ActivePoolAddressChanged(address _newActivePoolAddress)",
      "event BorrowerOperationsAddressChanged(address _newBorrowerOperationsAddress)",
      "event CommunityIssuanceAddressChanged(address _newCommunityIssuanceAddress)",
      "event DefaultPoolAddressChanged(address _newDefaultPoolAddress)",
      "event DepositSnapshotUpdated(address indexed _depositor, uint256 _P, uint256 _S, uint256 _G)",
      "event ETHGainWithdrawn(address indexed _depositor, uint256 _ETH, uint256 _LUSDLoss)",
      "event EpochUpdated(uint128 _currentEpoch)",
      "event EtherSent(address _to, uint256 _amount)",
      "event FrontEndRegistered(address indexed _frontEnd, uint256 _kickbackRate)",
      "event FrontEndSnapshotUpdated(address indexed _frontEnd, uint256 _P, uint256 _G)",
      "event FrontEndStakeChanged(address indexed _frontEnd, uint256 _newFrontEndStake, address _depositor)",
      "event FrontEndTagSet(address indexed _depositor, address indexed _frontEnd)",
      "event G_Updated(uint256 _G, uint128 _epoch, uint128 _scale)",
      "event LQTYPaidToDepositor(address indexed _depositor, uint256 _LQTY)",
      "event LQTYPaidToFrontEnd(address indexed _frontEnd, uint256 _LQTY)",
      "event LUSDTokenAddressChanged(address _newLUSDTokenAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event P_Updated(uint256 _P)",
      "event PriceFeedAddressChanged(address _newPriceFeedAddress)",
      "event S_Updated(uint256 _S, uint128 _epoch, uint128 _scale)",
      "event ScaleUpdated(uint128 _currentScale)",
      "event SortedTrovesAddressChanged(address _newSortedTrovesAddress)",
      "event StabilityPoolETHBalanceUpdated(uint256 _newBalance)",
      "event StabilityPoolLUSDBalanceUpdated(uint256 _newBalance)",
      "event TroveManagerAddressChanged(address _newTroveManagerAddress)",
      "event UserDepositChanged(address indexed _depositor, uint256 _newDeposit)",
      "function BORROWING_FEE_FLOOR() view returns (uint256)",
      "function CCR() view returns (uint256)",
      "function DECIMAL_PRECISION() view returns (uint256)",
      "function LUSD_GAS_COMPENSATION() view returns (uint256)",
      "function MCR() view returns (uint256)",
      "function MIN_NET_DEBT() view returns (uint256)",
      "function NAME() view returns (string)",
      "function P() view returns (uint256)",
      "function PERCENT_DIVISOR() view returns (uint256)",
      "function SCALE_FACTOR() view returns (uint256)",
      "function _100pct() view returns (uint256)",
      "function activePool() view returns (address)",
      "function borrowerOperations() view returns (address)",
      "function communityIssuance() view returns (address)",
      "function currentEpoch() view returns (uint128)",
      "function currentScale() view returns (uint128)",
      "function defaultPool() view returns (address)",
      "function depositSnapshots(address) view returns (uint256 S, uint256 P, uint256 G, uint128 scale, uint128 epoch)",
      "function deposits(address) view returns (uint256 initialValue, address frontEndTag)",
      "function epochToScaleToG(uint128, uint128) view returns (uint256)",
      "function epochToScaleToSum(uint128, uint128) view returns (uint256)",
      "function frontEndSnapshots(address) view returns (uint256 S, uint256 P, uint256 G, uint128 scale, uint128 epoch)",
      "function frontEndStakes(address) view returns (uint256)",
      "function frontEnds(address) view returns (uint256 kickbackRate, bool registered)",
      "function getCompoundedFrontEndStake(address _frontEnd) view returns (uint256)",
      "function getCompoundedLUSDDeposit(address _depositor) view returns (uint256)",
      "function getDepositorETHGain(address _depositor) view returns (uint256)",
      "function getDepositorLQTYGain(address _depositor) view returns (uint256)",
      "function getETH() view returns (uint256)",
      "function getEntireSystemColl() view returns (uint256 entireSystemColl)",
      "function getEntireSystemDebt() view returns (uint256 entireSystemDebt)",
      "function getFrontEndLQTYGain(address _frontEnd) view returns (uint256)",
      "function getTotalLUSDDeposits() view returns (uint256)",
      "function isOwner() view returns (bool)",
      "function lastETHError_Offset() view returns (uint256)",
      "function lastLQTYError() view returns (uint256)",
      "function lastLUSDLossError_Offset() view returns (uint256)",
      "function lusdToken() view returns (address)",
      "function offset(uint256 _debtToOffset, uint256 _collToAdd)",
      "function owner() view returns (address)",
      "function priceFeed() view returns (address)",
      "function provideToSP(uint256 _amount, address _frontEndTag)",
      "function registerFrontEnd(uint256 _kickbackRate)",
      "function setAddresses(address _borrowerOperationsAddress, address _troveManagerAddress, address _activePoolAddress, address _lusdTokenAddress, address _sortedTrovesAddress, address _priceFeedAddress, address _communityIssuanceAddress)",
      "function sortedTroves() view returns (address)",
      "function troveManager() view returns (address)",
      "function withdrawETHGainToTrove(address _upperHint, address _lowerHint)",
      "function withdrawFromSP(uint256 _amount)"
    ],
    "0x66A71Dcef29A0fFBDBE3c6a460a3B5BC225Cd675": [
      "constructor(uint16 _chainId)",
      "event DefaultReceiveVersionSet(uint16 version)",
      "event DefaultSendVersionSet(uint16 version)",
      "event NewLibraryVersionAdded(uint16 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PayloadCleared(uint16 srcChainId, bytes srcAddress, uint64 nonce, address dstAddress)",
      "event PayloadStored(uint16 srcChainId, bytes srcAddress, address dstAddress, uint64 nonce, bytes payload, bytes reason)",
      "event UaForceResumeReceive(uint16 chainId, bytes srcAddress)",
      "event UaReceiveVersionSet(address ua, uint16 version)",
      "event UaSendVersionSet(address ua, uint16 version)",
      "function BLOCK_VERSION() view returns (uint16)",
      "function DEFAULT_VERSION() view returns (uint16)",
      "function chainId() view returns (uint16)",
      "function defaultReceiveLibraryAddress() view returns (address)",
      "function defaultReceiveVersion() view returns (uint16)",
      "function defaultSendLibrary() view returns (address)",
      "function defaultSendVersion() view returns (uint16)",
      "function estimateFees(uint16 _dstChainId, address _userApplication, bytes _payload, bool _payInZRO, bytes _adapterParams) view returns (uint256 nativeFee, uint256 zroFee)",
      "function forceResumeReceive(uint16 _srcChainId, bytes _srcAddress)",
      "function getChainId() view returns (uint16)",
      "function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint256 _configType) view returns (bytes)",
      "function getInboundNonce(uint16 _srcChainId, bytes _srcAddress) view returns (uint64)",
      "function getOutboundNonce(uint16 _dstChainId, address _srcAddress) view returns (uint64)",
      "function getReceiveLibraryAddress(address _userApplication) view returns (address receiveLibraryAddress)",
      "function getReceiveVersion(address _userApplication) view returns (uint16)",
      "function getSendLibraryAddress(address _userApplication) view returns (address sendLibraryAddress)",
      "function getSendVersion(address _userApplication) view returns (uint16)",
      "function hasStoredPayload(uint16 _srcChainId, bytes _srcAddress) view returns (bool)",
      "function inboundNonce(uint16, bytes) view returns (uint64)",
      "function isReceivingPayload() view returns (bool)",
      "function isSendingPayload() view returns (bool)",
      "function latestVersion() view returns (uint16)",
      "function libraryLookup(uint16) view returns (address)",
      "function newVersion(address _newLayerZeroLibraryAddress)",
      "function outboundNonce(uint16, address) view returns (uint64)",
      "function owner() view returns (address)",
      "function receivePayload(uint16 _srcChainId, bytes _srcAddress, address _dstAddress, uint64 _nonce, uint256 _gasLimit, bytes _payload)",
      "function renounceOwnership()",
      "function retryPayload(uint16 _srcChainId, bytes _srcAddress, bytes _payload)",
      "function send(uint16 _dstChainId, bytes _destination, bytes _payload, address _refundAddress, address _zroPaymentAddress, bytes _adapterParams) payable",
      "function setConfig(uint16 _version, uint16 _chainId, uint256 _configType, bytes _config)",
      "function setDefaultReceiveVersion(uint16 _newDefaultReceiveVersion)",
      "function setDefaultSendVersion(uint16 _newDefaultSendVersion)",
      "function setReceiveVersion(uint16 _newVersion)",
      "function setSendVersion(uint16 _newVersion)",
      "function storedPayload(uint16, bytes) view returns (uint64 payloadLength, address dstAddress, bytes32 payloadHash)",
      "function transferOwnership(address newOwner)",
      "function uaConfigLookup(address) view returns (uint16 sendVersion, uint16 receiveVersion, address receiveLibraryAddress, address sendLibrary)"
    ],
    "0x67B12264Ca3e0037Fc7E22F2457b42643a04C86e": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x6889E57BcA038C28520C0B047a75e567502ea5F6": [
      "constructor(address _owner, address _authority)",
      "event AuthorityUpdated(address indexed user, address indexed newAuthority)",
      "event OwnershipTransferred(address indexed user, address indexed newOwner)",
      "event PublicCapabilityUpdated(address indexed target, bytes4 indexed functionSig, bool enabled)",
      "event RoleCapabilityUpdated(uint8 indexed role, address indexed target, bytes4 indexed functionSig, bool enabled)",
      "event UserRoleUpdated(address indexed user, uint8 indexed role, bool enabled)",
      "function authority() view returns (address)",
      "function canCall(address user, address target, bytes4 functionSig) view returns (bool)",
      "function doesRoleHaveCapability(uint8 role, address target, bytes4 functionSig) view returns (bool)",
      "function doesUserHaveRole(address user, uint8 role) view returns (bool)",
      "function getRolesWithCapability(address, bytes4) view returns (bytes32)",
      "function getUserRoles(address) view returns (bytes32)",
      "function isCapabilityPublic(address, bytes4) view returns (bool)",
      "function owner() view returns (address)",
      "function setAuthority(address newAuthority)",
      "function setPublicCapability(address target, bytes4 functionSig, bool enabled)",
      "function setRoleCapability(uint8 role, address target, bytes4 functionSig, bool enabled)",
      "function setUserRole(address user, uint8 role, bool enabled)",
      "function transferOwnership(address newOwner)"
    ],
    "0x6B175474E89094C44Da98b954EedeAC495271d0F": [
      "constructor(uint256 chainId_)",
      "event Approval(address indexed src, address indexed guy, uint256 wad)",
      "event LogNote(bytes4 indexed sig, address indexed usr, bytes32 indexed arg1, bytes32 indexed arg2, bytes data) anonymous",
      "event Transfer(address indexed src, address indexed dst, uint256 wad)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address usr, uint256 wad) returns (bool)",
      "function balanceOf(address) view returns (uint256)",
      "function burn(address usr, uint256 wad)",
      "function decimals() view returns (uint8)",
      "function deny(address guy)",
      "function mint(address usr, uint256 wad)",
      "function move(address src, address dst, uint256 wad)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)",
      "function pull(address usr, uint256 wad)",
      "function push(address usr, uint256 wad)",
      "function rely(address guy)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address dst, uint256 wad) returns (bool)",
      "function transferFrom(address src, address dst, uint256 wad) returns (bool)",
      "function version() view returns (string)",
      "function wards(address) view returns (uint256)"
    ],
    "0x6c3ea9036406852006290770BEdFcAbA0e23A0e8": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() view returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() view returns (address)",
      "constructor(address _implementation)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address implementation)"
    ],
    "0x6Ee3aaCcf9f2321E49063C4F8da775DdBd407268": [
      "constructor(address _owner, address _vault, address _accountant, address _weth, address _lzEndPoint, address _delegate, address _lzToken)",
      "error CrossChainTellerWithGenericBridge__UnsafeCastToUint96()",
      "error InboundRateLimitExceeded()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error InvalidOptionType(uint16 optionType)",
      "error LayerZeroTeller__BadFeeToken()",
      "error LayerZeroTeller__FeeExceedsMax(uint256 chainSelector, uint256 fee, uint256 maxFee)",
      "error LayerZeroTeller__MessagesNotAllowedFrom(uint256 chainSelector)",
      "error LayerZeroTeller__MessagesNotAllowedFromSender(uint256 chainSelector, address sender)",
      "error LayerZeroTeller__MessagesNotAllowedTo(uint256 chainSelector)",
      "error LayerZeroTeller__ZeroMessageGasLimit()",
      "error LzTokenUnavailable()",
      "error MessageLib__ShareAmountOverflow()",
      "error NoPeer(uint32 eid)",
      "error NotEnoughNative(uint256 msgValue)",
      "error OnlyEndpoint(address addr)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "error OutboundRateLimitExceeded()",
      "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
      "error TellerWithMultiAssetSupport__AssetNotSupported()",
      "error TellerWithMultiAssetSupport__BadDepositHash()",
      "error TellerWithMultiAssetSupport__CannotDepositNative()",
      "error TellerWithMultiAssetSupport__DualDeposit()",
      "error TellerWithMultiAssetSupport__MinimumAssetsNotMet()",
      "error TellerWithMultiAssetSupport__MinimumMintNotMet()",
      "error TellerWithMultiAssetSupport__Paused()",
      "error TellerWithMultiAssetSupport__PermitFailedAndAllowanceTooLow()",
      "error TellerWithMultiAssetSupport__ShareLockPeriodTooLong()",
      "error TellerWithMultiAssetSupport__SharePremiumTooLarge()",
      "error TellerWithMultiAssetSupport__SharesAreLocked()",
      "error TellerWithMultiAssetSupport__SharesAreUnLocked()",
      "error TellerWithMultiAssetSupport__TransferDenied(address from, address to, address operator)",
      "error TellerWithMultiAssetSupport__ZeroAssets()",
      "error TellerWithMultiAssetSupport__ZeroShares()",
      "event AllowFrom(address indexed user)",
      "event AllowOperator(address indexed user)",
      "event AllowTo(address indexed user)",
      "event AssetDataUpdated(address indexed asset, bool allowDeposits, bool allowWithdraws, uint16 sharePremium)",
      "event AuthorityUpdated(address indexed user, address indexed newAuthority)",
      "event BulkDeposit(address indexed asset, uint256 depositAmount)",
      "event BulkWithdraw(address indexed asset, uint256 shareAmount)",
      "event ChainAdded(uint256 chainId, bool allowMessagesFrom, bool allowMessagesTo, address targetTeller)",
      "event ChainAllowMessagesFrom(uint256 chainId, address targetTeller)",
      "event ChainAllowMessagesTo(uint256 chainId, address targetTeller)",
      "event ChainRemoved(uint256 chainId)",
      "event ChainSetGasLimit(uint256 chainId, uint128 messageGasLimit)",
      "event ChainStopMessagesFrom(uint256 chainId)",
      "event ChainStopMessagesTo(uint256 chainId)",
      "event DenyFrom(address indexed user)",
      "event DenyOperator(address indexed user)",
      "event DenyTo(address indexed user)",
      "event Deposit(uint256 indexed nonce, address indexed receiver, address indexed depositAsset, uint256 depositAmount, uint256 shareAmount, uint256 depositTimestamp, uint256 shareLockPeriodAtTimeOfDeposit)",
      "event DepositRefunded(uint256 indexed nonce, bytes32 depositHash, address indexed user)",
      "event InboundRateLimitsChanged(tuple(uint32 peerEid, uint256 limit, uint256 window)[] rateLimitConfigs)",
      "event MessageReceived(bytes32 indexed messageId, uint256 shareAmount, address indexed to)",
      "event MessageSent(bytes32 indexed messageId, uint256 shareAmount, address indexed to)",
      "event OutboundRateLimitsChanged(tuple(uint32 peerEid, uint256 limit, uint256 window)[] rateLimitConfigs)",
      "event OwnershipTransferred(address indexed user, address indexed newOwner)",
      "event Paused()",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "event Unpaused()",
      "function accountant() view returns (address)",
      "function addChain(uint32 chainId, bool allowMessagesFrom, bool allowMessagesTo, address targetTeller, uint128 messageGasLimit)",
      "function allowAll(address user)",
      "function allowFrom(address user)",
      "function allowInitializePath(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin) view returns (bool)",
      "function allowMessagesFromChain(uint32 chainId, address targetTeller)",
      "function allowMessagesToChain(uint32 chainId, address targetTeller, uint128 messageGasLimit)",
      "function allowOperator(address user)",
      "function allowTo(address user)",
      "function assetData(address) view returns (bool allowDeposits, bool allowWithdraws, uint16 sharePremium)",
      "function authority() view returns (address)",
      "function beforeTransfer(address from, address to, address operator) view",
      "function bridge(uint96 shareAmount, address to, bytes bridgeWildCard, address feeToken, uint256 maxFee) payable",
      "function bulkDeposit(address depositAsset, uint256 depositAmount, uint256 minimumMint, address to) returns (uint256 shares)",
      "function bulkWithdraw(address withdrawAsset, uint256 shareAmount, uint256 minimumAssets, address to) returns (uint256 assetsOut)",
      "function composeMsgSender() view returns (address sender)",
      "function denyAll(address user)",
      "function denyFrom(address user)",
      "function denyOperator(address user)",
      "function denyTo(address user)",
      "function deposit(address depositAsset, uint256 depositAmount, uint256 minimumMint) payable returns (uint256 shares)",
      "function depositAndBridge(address depositAsset, uint256 depositAmount, uint256 minimumMint, address to, bytes bridgeWildCard, address feeToken, uint256 maxFee) payable returns (uint256 sharesBridged)",
      "function depositAndBridgeWithPermit(address depositAsset, uint256 depositAmount, uint256 minimumMint, uint256 deadline, uint8 v, bytes32 r, bytes32 s, address to, bytes bridgeWildCard, address feeToken, uint256 maxFee) payable returns (uint256 sharesBridged)",
      "function depositNonce() view returns (uint96)",
      "function depositWithPermit(address depositAsset, uint256 depositAmount, uint256 minimumMint, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns (uint256 shares)",
      "function endpoint() view returns (address)",
      "function fromDenyList(address) view returns (bool)",
      "function getAmountCanBeReceived(uint32 _srcEid) view returns (uint256 inboundAmountInFlight, uint256 amountCanBeReceived)",
      "function getAmountCanBeSent(uint32 _dstEid) view returns (uint256 outboundAmountInFlight, uint256 amountCanBeSent)",
      "function idToChains(uint32) view returns (bool allowMessagesFrom, bool allowMessagesTo, uint128 messageGasLimit)",
      "function inboundRateLimits(uint32 srcEid) view returns (uint256 amountInFlight, uint256 lastUpdated, uint256 limit, uint256 window)",
      "function isPaused() view returns (bool)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function nativeWrapper() view returns (address)",
      "function nextNonce(uint32, bytes32) view returns (uint64 nonce)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function operatorDenyList(address) view returns (bool)",
      "function outboundRateLimits(uint32 dstEid) view returns (uint256 amountInFlight, uint256 lastUpdated, uint256 limit, uint256 window)",
      "function owner() view returns (address)",
      "function pause()",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function previewFee(uint96 shareAmount, address to, bytes bridgeWildCard, address feeToken) view returns (uint256 fee)",
      "function publicDepositHistory(uint256) view returns (bytes32)",
      "function refundDeposit(uint256 nonce, address receiver, address depositAsset, uint256 depositAmount, uint256 shareAmount, uint256 depositTimestamp, uint256 shareLockUpPeriodAtTimeOfDeposit)",
      "function removeChain(uint32 chainId)",
      "function setAuthority(address newAuthority)",
      "function setChainGasLimit(uint32 chainId, uint128 messageGasLimit)",
      "function setDelegate(address _delegate)",
      "function setInboundRateLimits(tuple(uint32 peerEid, uint256 limit, uint256 window)[] _rateLimitConfigs)",
      "function setOutboundRateLimits(tuple(uint32 peerEid, uint256 limit, uint256 window)[] _rateLimitConfigs)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function setShareLockPeriod(uint64 _shareLockPeriod)",
      "function shareLockPeriod() view returns (uint64)",
      "function shareUnlockTime(address) view returns (uint256)",
      "function stopMessagesFromChain(uint32 chainId)",
      "function stopMessagesToChain(uint32 chainId)",
      "function toDenyList(address) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function updateAssetData(address asset, bool allowDeposits, bool allowWithdraws, uint16 sharePremium)",
      "function vault() view returns (address)"
    ],
    "0x6eEB68B2C7A918f36B78E2DB80dcF279236DDFb8": [
      "constructor()",
      "event LogDeny(address indexed usr)",
      "event LogRely(address indexed usr)",
      "event LogSetRoot(address indexed newRoot)",
      "function canCall(address src, address, bytes4 sig) view returns (bool)",
      "function deny(address usr)",
      "function rely(address usr)",
      "function root() view returns (address)",
      "function setRoot(address usr)",
      "function wards(address) view returns (uint256)"
    ],
    "0x708dD9B344dDc7842f44C7b90492CF0e1E3eb868": [
      "constructor(address _SY, address _PT, string _name, string _symbol, uint8 __decimals, uint256 _expiry, bool _doCacheIndexSameBlock)",
      "error ArrayEmpty()",
      "error ArrayLengthMismatch()",
      "error YCExpired()",
      "error YCNoFloatingSy()",
      "error YCNotExpired()",
      "error YCNothingToRedeem()",
      "error YCPostExpiryDataNotSet()",
      "error YieldContractInsufficientSy(uint256 actualSy, uint256 requiredSy)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Burn(address indexed caller, address indexed receiver, uint256 amountPYToRedeem, uint256 amountSyOut)",
      "event CollectInterestFee(uint256 amountInterestFee)",
      "event CollectRewardFee(address indexed rewardToken, uint256 amountRewardFee)",
      "event Mint(address indexed caller, address indexed receiverPT, address indexed receiverYT, uint256 amountSyToMint, uint256 amountPYOut)",
      "event NewInterestIndex(uint256 indexed newIndex)",
      "event RedeemInterest(address indexed user, uint256 interestOut)",
      "event RedeemRewards(address indexed user, uint256[] amountRewardsOut)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function PT() view returns (address)",
      "function SY() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function doCacheIndexSameBlock() view returns (bool)",
      "function expiry() view returns (uint256)",
      "function factory() view returns (address)",
      "function getPostExpiryData() view returns (uint256 firstPYIndex, uint256 totalSyInterestForTreasury, uint256[] firstRewardIndexes, uint256[] userRewardOwed)",
      "function getRewardTokens() view returns (address[])",
      "function isExpired() view returns (bool)",
      "function mintPY(address receiverPT, address receiverYT) returns (uint256 amountPYOut)",
      "function mintPYMulti(address[] receiverPTs, address[] receiverYTs, uint256[] amountSyToMints) returns (uint256[] amountPYOuts)",
      "function name() view returns (string)",
      "function postExpiry() view returns (uint128 firstPYIndex, uint128 totalSyInterestForTreasury)",
      "function pyIndexCurrent() returns (uint256 currentIndex)",
      "function pyIndexLastUpdatedBlock() view returns (uint128)",
      "function pyIndexStored() view returns (uint256)",
      "function redeemDueInterestAndRewards(address user, bool redeemInterest, bool redeemRewards) returns (uint256 interestOut, uint256[] rewardsOut)",
      "function redeemInterestAndRewardsPostExpiryForTreasury() returns (uint256 interestOut, uint256[] rewardsOut)",
      "function redeemPY(address receiver) returns (uint256 amountSyOut)",
      "function redeemPYMulti(address[] receivers, uint256[] amountPYToRedeems) returns (uint256[] amountSyOuts)",
      "function rewardIndexesCurrent() returns (uint256[])",
      "function setPostExpiryData()",
      "function syReserve() view returns (uint256)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function userInterest(address) view returns (uint128 index, uint128 accrued)",
      "function userReward(address, address) view returns (uint128 index, uint128 accrued)"
    ],
    "0x72E95b8931767C79bA4EeE721354d6E99a61D004": [
      "constructor(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function implementation() returns (address)",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x7302eA4E51B041b691D1F3458fA7D36560f90708": [
      "error AccessControlUnauthorizedAccount(address account, bytes32 role)",
      "error AddressFrozen()",
      "error AddressNotFrozen()",
      "error AlreadyPaused()",
      "error AlreadyUnPaused()",
      "error ArgumentLengthMismatch()",
      "error AuthorizationExpired()",
      "error AuthorizationInvalid()",
      "error BlockedAccountAuthorizer()",
      "error CallerMustBePayee()",
      "error ContractPaused()",
      "error InsufficientAllowance()",
      "error InsufficientFunds()",
      "error InvalidECRecoverSignature()",
      "error InvalidPermission()",
      "error InvalidSignature()",
      "error InvalidValueS()",
      "error OnlySupplyController()",
      "error OnlySupplyControllerOrOwner()",
      "error PermitExpired()",
      "error SupplyControllerUnchanged()",
      "error ZeroAddress()",
      "error ZeroValue()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AuthorizationAlreadyUsed(address indexed authorizer, bytes32 indexed nonce)",
      "event AuthorizationCanceled(address indexed authorizer, bytes32 indexed nonce)",
      "event AuthorizationUsed(address indexed authorizer, bytes32 indexed nonce)",
      "event DefaultAdminDelayChangeCanceled()",
      "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
      "event DefaultAdminTransferCanceled()",
      "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
      "event FreezeAddress(address indexed addr)",
      "event FrozenAddressWiped(address indexed addr)",
      "event Initialized(uint8 version)",
      "event Pause()",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SanctionedAddressListUpdate(address newSanctionedAddress)",
      "event SupplyControlSet(address supplyControlAddress)",
      "event SupplyDecreased(address indexed from, uint256 value)",
      "event SupplyIncreased(address indexed to, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UnfreezeAddress(address indexed addr)",
      "event Unpause()",
      "function ASSET_PROTECTION_ROLE() view returns (bytes32)",
      "function CANCEL_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function EIP712_DOMAIN_HASH_DEPRECATED() view returns (bytes32)",
      "function PAUSE_ROLE() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function RECEIVE_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function TRANSFER_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function acceptDefaultAdminTransfer()",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function assetProtectionRoleDeprecated() view returns (address)",
      "function authorizationState(address authorizer, bytes32 nonce) view returns (bool)",
      "function balanceOf(address addr) view returns (uint256)",
      "function beginDefaultAdminTransfer(address newAdmin)",
      "function betaDelegateWhitelisterDeprecated() view returns (address)",
      "function burn(uint256 amount)",
      "function cancelAuthorization(address authorizer, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function cancelDefaultAdminTransfer()",
      "function changeDefaultAdminDelay(uint48 newDelay)",
      "function decimals() view returns (uint8)",
      "function decreaseApproval(address spender, uint256 subtractedValue) returns (bool)",
      "function decreaseSupply(uint256 value) returns (bool success)",
      "function decreaseSupplyFromAddress(uint256 value, address burnFromAddress) returns (bool success)",
      "function defaultAdmin() view returns (address)",
      "function defaultAdminDelay() view returns (uint48)",
      "function defaultAdminDelayIncreaseWait() view returns (uint48)",
      "function freeze(address addr)",
      "function freezeBatch(address[] addresses)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseApproval(address spender, uint256 addedValue) returns (bool)",
      "function increaseSupply(uint256 value) returns (bool success)",
      "function increaseSupplyToAddress(uint256 value, address mintToAddress) returns (bool success)",
      "function initialize(uint48 initialDelay, address initialOwner, address pauser, address assetProtector)",
      "function isFrozen(address addr) view returns (bool)",
      "function mint(address account, uint256 amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function ownerDeprecated() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
      "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function proposedOwnerDeprecated() view returns (address)",
      "function receiveWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function reclaimToken()",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function rollbackDefaultAdminDelay()",
      "function setSupplyControl(address supplyControlAddress)",
      "function supplyControl() view returns (address)",
      "function supplyControllerDeprecated() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferFromBatch(address[] from, address[] to, uint256[] value) returns (bool)",
      "function transferWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function transferWithAuthorizationBatch(address[] from, address[] to, uint256[] value, uint256[] validAfter, uint256[] validBefore, bytes32[] nonce, uint8[] v, bytes32[] r, bytes32[] s)",
      "function unfreeze(address addr)",
      "function unfreezeBatch(address[] addresses)",
      "function unpause()",
      "function wipeFrozenAddress(address addr)"
    ],
    "0x733Ee9Ba88f16023146EbC965b7A1Da18a322464": [
      "constructor(address _SY, address _PT, string _name, string _symbol, uint8 __decimals, uint256 _expiry, bool _doCacheIndexSameBlock)",
      "error ArrayEmpty()",
      "error ArrayLengthMismatch()",
      "error YCExpired()",
      "error YCNoFloatingSy()",
      "error YCNotExpired()",
      "error YCNothingToRedeem()",
      "error YCPostExpiryDataNotSet()",
      "error YieldContractInsufficientSy(uint256 actualSy, uint256 requiredSy)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Burn(address indexed caller, address indexed receiver, uint256 amountPYToRedeem, uint256 amountSyOut)",
      "event CollectInterestFee(uint256 amountInterestFee)",
      "event CollectRewardFee(address indexed rewardToken, uint256 amountRewardFee)",
      "event Mint(address indexed caller, address indexed receiverPT, address indexed receiverYT, uint256 amountSyToMint, uint256 amountPYOut)",
      "event NewInterestIndex(uint256 indexed newIndex)",
      "event RedeemInterest(address indexed user, uint256 interestOut)",
      "event RedeemRewards(address indexed user, uint256[] amountRewardsOut)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function PT() view returns (address)",
      "function SY() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function doCacheIndexSameBlock() view returns (bool)",
      "function expiry() view returns (uint256)",
      "function factory() view returns (address)",
      "function getPostExpiryData() view returns (uint256 firstPYIndex, uint256 totalSyInterestForTreasury, uint256[] firstRewardIndexes, uint256[] userRewardOwed)",
      "function getRewardTokens() view returns (address[])",
      "function isExpired() view returns (bool)",
      "function mintPY(address receiverPT, address receiverYT) returns (uint256 amountPYOut)",
      "function mintPYMulti(address[] receiverPTs, address[] receiverYTs, uint256[] amountSyToMints) returns (uint256[] amountPYOuts)",
      "function name() view returns (string)",
      "function postExpiry() view returns (uint128 firstPYIndex, uint128 totalSyInterestForTreasury)",
      "function pyIndexCurrent() returns (uint256 currentIndex)",
      "function pyIndexLastUpdatedBlock() view returns (uint128)",
      "function pyIndexStored() view returns (uint256)",
      "function redeemDueInterestAndRewards(address user, bool redeemInterest, bool redeemRewards) returns (uint256 interestOut, uint256[] rewardsOut)",
      "function redeemInterestAndRewardsPostExpiryForTreasury() returns (uint256 interestOut, uint256[] rewardsOut)",
      "function redeemPY(address receiver) returns (uint256 amountSyOut)",
      "function redeemPYMulti(address[] receivers, uint256[] amountPYToRedeems) returns (uint256[] amountSyOuts)",
      "function rewardIndexesCurrent() returns (uint256[])",
      "function setPostExpiryData()",
      "function syReserve() view returns (uint256)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function userInterest(address) view returns (uint128 index, uint128 accrued)",
      "function userReward(address, address) view returns (uint128 index, uint128 accrued)"
    ],
    "0x7458bfDC30034EB860B265E6068121D18Fa5Aa72": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AuthorizationCanceled(address indexed authorizer, bytes32 indexed nonce)",
      "event AuthorizationUsed(address indexed authorizer, bytes32 indexed nonce)",
      "event Blacklisted(address indexed _account)",
      "event BlacklisterChanged(address indexed newBlacklister)",
      "event Burn(address indexed burner, uint256 amount)",
      "event MasterMinterChanged(address indexed newMasterMinter)",
      "event Mint(address indexed minter, address indexed to, uint256 amount)",
      "event MinterConfigured(address indexed minter, uint256 minterAllowedAmount)",
      "event MinterRemoved(address indexed oldMinter)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RescuerChanged(address indexed newRescuer)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UnBlacklisted(address indexed _account)",
      "event Unpause()",
      "function CANCEL_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function RECEIVE_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function TRANSFER_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function authorizationState(address authorizer, bytes32 nonce) view returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function blacklist(address _account)",
      "function blacklister() view returns (address)",
      "function burn(uint256 _amount)",
      "function cancelAuthorization(address authorizer, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function configureMinter(address minter, uint256 minterAllowedAmount) returns (bool)",
      "function currency() view returns (string)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 decrement) returns (bool)",
      "function increaseAllowance(address spender, uint256 increment) returns (bool)",
      "function initialize(string tokenName, string tokenSymbol, string tokenCurrency, uint8 tokenDecimals, address newMasterMinter, address newPauser, address newBlacklister, address newOwner)",
      "function initializeV2(string newName)",
      "function initializeV2_1(address lostAndFound)",
      "function isBlacklisted(address _account) view returns (bool)",
      "function isMinter(address account) view returns (bool)",
      "function masterMinter() view returns (address)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function minterAllowance(address minter) view returns (uint256)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function receiveWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function removeMinter(address minter) returns (bool)",
      "function rescueERC20(address tokenContract, address to, uint256 amount)",
      "function rescuer() view returns (address)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function transferWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function unBlacklist(address _account)",
      "function unpause()",
      "function updateBlacklister(address _newBlacklister)",
      "function updateMasterMinter(address _newMasterMinter)",
      "function updatePauser(address _newPauser)",
      "function updateRescuer(address newRescuer)",
      "function version() view returns (string)"
    ],
    "0x7ac8ca87959b1d5EDfe2df5325A37c304DCea4D0": [
      "constructor(string _name, string _symbol, address _erc4626)",
      "error InvalidShortString()",
      "error SYInsufficientSharesOut(uint256 actualSharesOut, uint256 requiredSharesOut)",
      "error SYInsufficientTokenOut(uint256 actualTokenOut, uint256 requiredTokenOut)",
      "error SYInvalidTokenIn(address token)",
      "error SYInvalidTokenOut(address token)",
      "error SYZeroDeposit()",
      "error SYZeroRedeem()",
      "error StringTooLong(string str)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ClaimRewards(address indexed user, address[] rewardTokens, uint256[] rewardAmounts)",
      "event Deposit(address indexed caller, address indexed receiver, address indexed tokenIn, uint256 amountDeposited, uint256 amountSyOut)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Redeem(address indexed caller, address indexed receiver, address indexed tokenOut, uint256 amountSyToRedeem, uint256 amountTokenOut)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function accruedRewards(address) view returns (uint256[] rewardAmounts)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function asset() view returns (address)",
      "function assetInfo() view returns (uint8 assetType, address assetAddress, uint8 assetDecimals)",
      "function balanceOf(address account) view returns (uint256)",
      "function claimOwnership()",
      "function claimRewards(address) returns (uint256[] rewardAmounts)",
      "function decimals() view returns (uint8)",
      "function deposit(address receiver, address tokenIn, uint256 amountTokenToDeposit, uint256 minSharesOut) payable returns (uint256 amountSharesOut)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function exchangeRate() view returns (uint256)",
      "function getRewardTokens() view returns (address[] rewardTokens)",
      "function getTokensIn() view returns (address[] res)",
      "function getTokensOut() view returns (address[] res)",
      "function isValidTokenIn(address token) view returns (bool)",
      "function isValidTokenOut(address token) view returns (bool)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function previewDeposit(address tokenIn, uint256 amountTokenToDeposit) view returns (uint256 amountSharesOut)",
      "function previewRedeem(address tokenOut, uint256 amountSharesToRedeem) view returns (uint256 amountTokenOut)",
      "function redeem(address receiver, uint256 amountSharesToRedeem, address tokenOut, uint256 minTokenOut, bool burnFromInternalBalance) returns (uint256 amountTokenOut)",
      "function rewardIndexesCurrent() returns (uint256[] indexes)",
      "function rewardIndexesStored() view returns (uint256[] indexes)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner, bool direct, bool renounce)",
      "function unpause()",
      "function yieldToken() view returns (address)"
    ],
    "0x7d4d05B1a1E5775a9C6ca248ABBE629B52C1D9D9": [
      "constructor(address admin, uint256 delay, uint256 gracePeriod, uint256 minimumDelay, uint256 maximumDelay, uint256 minVoteDuration, uint256 maxVotingOptions, uint256 voteDifferential, uint256 minimumQuorum)",
      "event CancelledAction(bytes32 actionHash, address indexed target, uint256 value, string signature, bytes data, uint256 executionTime, bool withDelegatecall)",
      "event ExecutedAction(bytes32 actionHash, address indexed target, uint256 value, string signature, bytes data, uint256 executionTime, bool withDelegatecall, bytes resultData)",
      "event NewAdmin(address newAdmin)",
      "event NewDelay(uint256 delay)",
      "event NewPendingAdmin(address newPendingAdmin)",
      "event QueuedAction(bytes32 actionHash, address indexed target, uint256 value, string signature, bytes data, uint256 executionTime, bool withDelegatecall)",
      "function BPS() view returns (uint256)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MAX_VOTING_OPTIONS() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_QUORUM() view returns (uint256)",
      "function MIN_VOTING_DURATION() view returns (uint256)",
      "function NO_INDEX() view returns (uint256)",
      "function VOTE_DIFFERENTIAL() view returns (uint256)",
      "function YES_INDEX() view returns (uint256)",
      "function acceptAdmin()",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 executionTime, bool withDelegatecall) returns (bytes32)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 executionTime, bool withDelegatecall) payable returns (bytes)",
      "function getAdmin() view returns (address)",
      "function getDelay() view returns (uint256)",
      "function getPendingAdmin() view returns (address)",
      "function isActionQueued(bytes32 actionHash) view returns (bool)",
      "function isBinaryProposalPassed(address governance, uint256 proposalId) view returns (bool)",
      "function isProposalOverGracePeriod(address governance, uint256 proposalId) view returns (bool)",
      "function isQuorumValid(address governance, uint256 proposalId) view returns (bool)",
      "function isVoteDifferentialValid(address governance, uint256 proposalId) view returns (bool)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 executionTime, bool withDelegatecall) returns (bytes32)",
      "function setDelay(uint256 delay)",
      "function setPendingAdmin(address newPendingAdmin)",
      "function validateBinaryProposalCreation(address strategy, address creator, uint256 startTime, uint256 endTime, address daoOperator) view returns (bool)",
      "function validateGenericProposalCreation(address strategy, address creator, uint256 startTime, uint256 endTime, string[] options, address daoOperator) view returns (bool)",
      "function validateProposalCancellation(address governance, uint256 proposalId, address user) pure returns (bool)"
    ],
    "0x7EfFD7b47Bfd17e52fB7559d3f924201b9DbfF3d": [
      "constructor(address pool)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BalanceTransfer(address indexed from, address indexed to, uint256 value, uint256 index)",
      "event Burn(address indexed from, address indexed target, uint256 value, uint256 balanceIncrease, uint256 index)",
      "event Initialized(address indexed underlyingAsset, address indexed pool, address treasury, address incentivesController, uint8 aTokenDecimals, string aTokenName, string aTokenSymbol, bytes params)",
      "event Mint(address indexed caller, address indexed onBehalfOf, uint256 value, uint256 balanceIncrease, uint256 index)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function ATOKEN_REVISION() view returns (uint256)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function EIP712_REVISION() view returns (bytes)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function POOL() view returns (address)",
      "function RESERVE_TREASURY_ADDRESS() view returns (address)",
      "function UNDERLYING_ASSET_ADDRESS() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address user) view returns (uint256)",
      "function burn(address from, address receiverOfUnderlying, uint256 amount, uint256 index)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function getIncentivesController() view returns (address)",
      "function getPreviousIndex(address user) view returns (uint256)",
      "function getScaledUserBalanceAndSupply(address user) view returns (uint256, uint256)",
      "function handleRepayment(address user, address onBehalfOf, uint256 amount)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address initializingPool, address treasury, address underlyingAsset, address incentivesController, uint8 aTokenDecimals, string aTokenName, string aTokenSymbol, bytes params)",
      "function mint(address caller, address onBehalfOf, uint256 amount, uint256 index) returns (bool)",
      "function mintToTreasury(uint256 amount, uint256 index)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function rescueTokens(address token, address to, uint256 amount)",
      "function scaledBalanceOf(address user) view returns (uint256)",
      "function scaledTotalSupply() view returns (uint256)",
      "function setIncentivesController(address controller)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function transferOnLiquidation(address from, address to, uint256 value)",
      "function transferUnderlyingTo(address target, uint256 amount)"
    ],
    "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0": [
      "constructor(address _stETH)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function getStETHByWstETH(uint256 _wstETHAmount) view returns (uint256)",
      "function getWstETHByStETH(uint256 _stETHAmount) view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function stETH() view returns (address)",
      "function stEthPerToken() view returns (uint256)",
      "function symbol() view returns (string)",
      "function tokensPerStEth() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function unwrap(uint256 _wstETHAmount) returns (uint256)",
      "function wrap(uint256 _stETHAmount) returns (uint256)"
    ],
    "0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9": [
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address)",
      "function initialize(address _logic, address _admin, bytes _data) payable",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x7FC7c91D556B400AFa565013E3F32055a0713425": [
      "constructor(address stakingVault, address usde)",
      "error OnlyStakingVault()",
      "function withdraw(address to, uint256 amount)"
    ],
    "0x808e8783Ba7e315517952d195E20bC8eDBa7da23": [
      "constructor()",
      "error IndenticalValue()",
      "error InvalidLimits()",
      "error InvalidMaxDepositValue()",
      "error InvalidMaxWithdrawValue()",
      "error InvalidMinDepositValue()",
      "error InvalidMinWithdrawValue()",
      "error ZeroAddress()",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SetAccount(bytes32 key, address newAddress)",
      "event SetConstant(bytes32 key, uint256 amount)",
      "event SetContract(bytes32 key, address newAddress)",
      "event SetToken(bytes32 key, address newAddress)",
      "event SetVariable(bytes32 key, uint256 amount)",
      "function ADMIN() view returns (bytes32)",
      "function AUCTION_CONTRACT() view returns (bytes32)",
      "function DECIMALS() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function ETHX_SUPPLY_POR_FEED() view returns (bytes32)",
      "function ETH_BALANCE_POR_FEED() view returns (bytes32)",
      "function ETH_DEPOSIT_CONTRACT() view returns (bytes32)",
      "function ETH_PER_NODE() view returns (bytes32)",
      "function ETHx() view returns (bytes32)",
      "function FULL_DEPOSIT_SIZE() view returns (bytes32)",
      "function MANAGER() view returns (bytes32)",
      "function MAX_DEPOSIT_AMOUNT() view returns (bytes32)",
      "function MAX_WITHDRAW_AMOUNT() view returns (bytes32)",
      "function MIN_BLOCK_DELAY_TO_FINALIZE_WITHDRAW_REQUEST() view returns (bytes32)",
      "function MIN_DEPOSIT_AMOUNT() view returns (bytes32)",
      "function MIN_WITHDRAW_AMOUNT() view returns (bytes32)",
      "function NODE_EL_REWARD_VAULT_IMPLEMENTATION() view returns (bytes32)",
      "function OPERATOR() view returns (bytes32)",
      "function OPERATOR_MAX_NAME_LENGTH() view returns (bytes32)",
      "function OPERATOR_REWARD_COLLECTOR() view returns (bytes32)",
      "function PENALTY_CONTRACT() view returns (bytes32)",
      "function PERMISSIONED_NODE_REGISTRY() view returns (bytes32)",
      "function PERMISSIONED_POOL() view returns (bytes32)",
      "function PERMISSIONED_SOCIALIZING_POOL() view returns (bytes32)",
      "function PERMISSIONLESS_NODE_REGISTRY() view returns (bytes32)",
      "function PERMISSIONLESS_POOL() view returns (bytes32)",
      "function PERMISSIONLESS_SOCIALIZING_POOL() view returns (bytes32)",
      "function POOL_SELECTOR() view returns (bytes32)",
      "function POOL_UTILS() view returns (bytes32)",
      "function PRE_DEPOSIT_SIZE() view returns (bytes32)",
      "function REWARD_THRESHOLD() view returns (bytes32)",
      "function ROLE_SD_REWARD_APPROVER() view returns (bytes32)",
      "function ROLE_SD_REWARD_ENTRY() view returns (bytes32)",
      "function SD() view returns (bytes32)",
      "function SD_COLLATERAL() view returns (bytes32)",
      "function SD_INCENTIVE_CONTROLLER() view returns (bytes32)",
      "function SD_UTILITY_POOL() view returns (bytes32)",
      "function SOCIALIZING_POOL_CYCLE_DURATION() view returns (bytes32)",
      "function SOCIALIZING_POOL_OPT_IN_COOLING_PERIOD() view returns (bytes32)",
      "function STADER_INSURANCE_FUND() view returns (bytes32)",
      "function STADER_ORACLE() view returns (bytes32)",
      "function STADER_TREASURY() view returns (bytes32)",
      "function STAKE_POOL_MANAGER() view returns (bytes32)",
      "function TOTAL_FEE() view returns (bytes32)",
      "function USER_WITHDRAW_MANAGER() view returns (bytes32)",
      "function VALIDATOR_WITHDRAWAL_VAULT_IMPLEMENTATION() view returns (bytes32)",
      "function VAULT_FACTORY() view returns (bytes32)",
      "function WITHDRAWN_KEYS_BATCH_SIZE() view returns (bytes32)",
      "function getAdmin() view returns (address)",
      "function getAuctionContract() view returns (address)",
      "function getDecimals() view returns (uint256)",
      "function getETHBalancePORFeedProxy() view returns (address)",
      "function getETHDepositContract() view returns (address)",
      "function getETHXSupplyPORFeedProxy() view returns (address)",
      "function getETHxToken() view returns (address)",
      "function getFullDepositSize() view returns (uint256)",
      "function getMaxDepositAmount() view returns (uint256)",
      "function getMaxWithdrawAmount() view returns (uint256)",
      "function getMinBlockDelayToFinalizeWithdrawRequest() view returns (uint256)",
      "function getMinDepositAmount() view returns (uint256)",
      "function getMinWithdrawAmount() view returns (uint256)",
      "function getNodeELRewardVaultImplementation() view returns (address)",
      "function getOperatorMaxNameLength() view returns (uint256)",
      "function getOperatorRewardsCollector() view returns (address)",
      "function getPenaltyContract() view returns (address)",
      "function getPermissionedNodeRegistry() view returns (address)",
      "function getPermissionedPool() view returns (address)",
      "function getPermissionedSocializingPool() view returns (address)",
      "function getPermissionlessNodeRegistry() view returns (address)",
      "function getPermissionlessPool() view returns (address)",
      "function getPermissionlessSocializingPool() view returns (address)",
      "function getPoolSelector() view returns (address)",
      "function getPoolUtils() view returns (address)",
      "function getPreDepositSize() view returns (uint256)",
      "function getRewardsThreshold() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getSDCollateral() view returns (address)",
      "function getSDIncentiveController() view returns (address)",
      "function getSDUtilityPool() view returns (address)",
      "function getSocializingPoolCycleDuration() view returns (uint256)",
      "function getSocializingPoolOptInCoolingPeriod() view returns (uint256)",
      "function getStaderInsuranceFund() view returns (address)",
      "function getStaderOracle() view returns (address)",
      "function getStaderToken() view returns (address)",
      "function getStaderTreasury() view returns (address)",
      "function getStakePoolManager() view returns (address)",
      "function getStakedEthPerNode() view returns (uint256)",
      "function getTotalFee() view returns (uint256)",
      "function getUserWithdrawManager() view returns (address)",
      "function getValidatorWithdrawalVaultImplementation() view returns (address)",
      "function getVaultFactory() view returns (address)",
      "function getWithdrawnKeyBatchSize() view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address _admin, address _ethDepositContract)",
      "function onlyManagerRole(address account) view returns (bool)",
      "function onlyOperatorRole(address account) view returns (bool)",
      "function onlySDRewardApproverRole(address account) view returns (bool)",
      "function onlySDRewardEntryRole(address account) view returns (bool)",
      "function onlyStaderContract(address _addr, bytes32 _contractName) view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateAdmin(address _admin)",
      "function updateAuctionContract(address _auctionContract)",
      "function updateETHBalancePORFeedProxy(address _ethBalanceProxy)",
      "function updateETHXSupplyPORFeedProxy(address _ethXSupplyProxy)",
      "function updateETHxToken(address _ethX)",
      "function updateMaxDepositAmount(uint256 _maxDepositAmount)",
      "function updateMaxWithdrawAmount(uint256 _maxWithdrawAmount)",
      "function updateMinBlockDelayToFinalizeWithdrawRequest(uint256 _minBlockDelay)",
      "function updateMinDepositAmount(uint256 _minDepositAmount)",
      "function updateMinWithdrawAmount(uint256 _minWithdrawAmount)",
      "function updateNodeELRewardImplementation(address _nodeELRewardVaultImpl)",
      "function updateOperatorRewardsCollector(address _operatorRewardsCollector)",
      "function updatePenaltyContract(address _penaltyContract)",
      "function updatePermissionedNodeRegistry(address _permissionedNodeRegistry)",
      "function updatePermissionedPool(address _permissionedPool)",
      "function updatePermissionedSocializingPool(address _permissionedSocializePool)",
      "function updatePermissionlessNodeRegistry(address _permissionlessNodeRegistry)",
      "function updatePermissionlessPool(address _permissionlessPool)",
      "function updatePermissionlessSocializingPool(address _permissionlessSocializePool)",
      "function updatePoolSelector(address _poolSelector)",
      "function updatePoolUtils(address _poolUtils)",
      "function updateRewardsThreshold(uint256 _rewardsThreshold)",
      "function updateSDCollateral(address _sdCollateral)",
      "function updateSDIncentiveController(address _sdIncentiveController)",
      "function updateSDUtilityPool(address _utilityPool)",
      "function updateSocializingPoolCycleDuration(uint256 _socializingPoolCycleDuration)",
      "function updateSocializingPoolOptInCoolingPeriod(uint256 _SocializePoolOptInCoolingPeriod)",
      "function updateStaderInsuranceFund(address _staderInsuranceFund)",
      "function updateStaderOracle(address _staderOracle)",
      "function updateStaderToken(address _staderToken)",
      "function updateStaderTreasury(address _staderTreasury)",
      "function updateStakePoolManager(address _stakePoolManager)",
      "function updateUserWithdrawManager(address _userWithdrawManager)",
      "function updateValidatorWithdrawalVaultImplementation(address _validatorWithdrawalVaultImpl)",
      "function updateVaultFactory(address _vaultFactory)",
      "function updateWithdrawnKeysBatchSize(uint256 _withdrawnKeysBatchSize)"
    ],
    "0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb": [
      "constructor(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function implementation() returns (address)",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8236a87084f8B84306f72007F36F2618A5634494": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x8292Bb45bf1Ee4d140127049757C2E0fF06317eD": [
      "constructor(address _delegate, bytes _data)",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "event Upgraded(address indexed implementation)",
      "function getImplementation() view returns (address)"
    ],
    "0x83b7Ce402A0E756E901C4A9d1cAfa27cA9572afC": [
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error BalanceExceeded()",
      "error DepositNotMultipleTimeDelta()",
      "error DepositSmallerTimeDelta()",
      "error FailedCall()",
      "error InsufficientBalance(uint256 balance, uint256 needed)",
      "error InvalidInitialization()",
      "error InvalidRecipient()",
      "error InvalidStartTime()",
      "error InvalidStopTime()",
      "error InvalidZeroAddress()",
      "error InvalidZeroAmount()",
      "error NotInitializing()",
      "error OnlyFundsAdmin()",
      "error OnlyFundsAdminOrRceipient()",
      "error ReentrancyGuardReentrantCall()",
      "error SafeERC20FailedOperation(address token)",
      "error StreamDoesNotExist()",
      "event CancelStream(uint256 indexed streamId, address indexed sender, address indexed recipient, uint256 senderBalance, uint256 recipientBalance)",
      "event CreateStream(uint256 indexed streamId, address indexed sender, address indexed recipient, uint256 deposit, address tokenAddress, uint256 startTime, uint256 stopTime)",
      "event Initialized(uint64 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event WithdrawFromStream(uint256 indexed streamId, address indexed recipient, uint256 amount)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function ETH_MOCK_ADDRESS() view returns (address)",
      "function FUNDS_ADMIN_ROLE() view returns (bytes32)",
      "function approve(address token, address recipient, uint256 amount)",
      "function balanceOf(uint256 streamId, address who) view returns (uint256 balance)",
      "function cancelStream(uint256 streamId) returns (bool)",
      "function createStream(address recipient, uint256 deposit, address tokenAddress, uint256 startTime, uint256 stopTime) returns (uint256)",
      "function deltaOf(uint256 streamId) view returns (uint256 delta)",
      "function getNextStreamId() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getStream(uint256 streamId) view returns (address sender, address recipient, uint256 deposit, address tokenAddress, uint256 startTime, uint256 stopTime, uint256 remainingBalance, uint256 ratePerSecond)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(uint256, address admin)",
      "function isFundsAdmin(address admin) view returns (bool)",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transfer(address token, address recipient, uint256 amount)",
      "function withdrawFromStream(uint256 streamId, uint256 amount) returns (bool)"
    ],
    "0x83B7fd3d92EF0340C7F940fd2FF5e762CB0878a9": [
      "constructor()",
      "error AssetAlreadySupported()",
      "error AssetNotSupported()",
      "error CallerNotLRTConfigAdmin()",
      "error CallerNotLRTConfigAllowedRole(string role)",
      "error CallerNotLRTConfigManager()",
      "error CallerNotLRTConfigOperator()",
      "error CannotRemoveAssetWithDeposits(address asset)",
      "error CannotUpdateStrategyAsItHasFundsNDCFunds(address ndc, uint256 amount)",
      "error InvalidDepositLimit()",
      "error InvalidMaxRewardAmount()",
      "error ProtocolFeeExceedsLimit()",
      "error TokenNotFoundError()",
      "error ValueAlreadyInUse()",
      "error ZeroAddressNotAllowed()",
      "event AddedNewSupportedAsset(address indexed asset, uint256 depositLimit)",
      "event AssetDepositLimitUpdate(address indexed asset, uint256 depositLimit)",
      "event AssetStrategyUpdate(address indexed asset, address indexed strategy)",
      "event Initialized(uint8 version)",
      "event MaxNegligibleAmountUpdated(uint256 maxNegligibleAmount)",
      "event RemovedSupportedAsset(address indexed asset)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SetContract(bytes32 key, address indexed contractAddr)",
      "event SetEigenLayerRewardReceiver(address indexed eigenLayerRewardReceiver)",
      "event SetRSETH(address indexed rsETH)",
      "event SetToken(bytes32 key, address indexed tokenAddr)",
      "event UpdateFee(uint256 newFee)",
      "event UpdateMaxRewardAmount(uint256 maxRewardAmount)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function addNewSupportedAsset(address asset, uint256 depositLimit)",
      "function assetStrategy(address token) view returns (address strategy)",
      "function contractMap(bytes32 contractKey) view returns (address contractAddress)",
      "function depositLimitByAsset(address token) view returns (uint256 amount)",
      "function eigenLayerRewardReceiver() view returns (address)",
      "function getContract(bytes32 contractKey) view returns (address)",
      "function getLSTToken(bytes32 tokenKey) view returns (address)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getSupportedAssetList() view returns (address[])",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin, address stETH, address ethX, address rsETH_)",
      "function isSupportedAsset(address token) view returns (bool isSupported)",
      "function maxNegligibleAmount() view returns (uint256)",
      "function protocolFeeInBPS() view returns (uint256)",
      "function removeSupportedAsset(address asset, uint256 tokenIndex)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function rsETH() view returns (address)",
      "function setContract(bytes32 contractKey, address contractAddress)",
      "function setEigenLayerRewardReceiver(address _eigenLayerRewardReceiver)",
      "function setMaxNegligibleAmount(uint256 maxNegligibleAmount_)",
      "function setProtocolFeeBps(uint256 _protocolFeeInBPS)",
      "function setRSETH(address rsETH_)",
      "function setToken(bytes32 tokenKey, address assetAddress)",
      "function supportedAssetList(uint256) view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function tokenMap(bytes32 tokenKey) view returns (address tokenAddress)",
      "function updateAssetDepositLimit(address asset, uint256 depositLimit)",
      "function updateAssetStrategy(address asset, address strategy)"
    ],
    "0x83F20F44975D03b1b09e64809B757c47f942BEeA": [
      "constructor(address _daiJoin, address _pot)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function asset() view returns (address)",
      "function balanceOf(address) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function dai() view returns (address)",
      "function daiJoin() view returns (address)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function deploymentChainId() view returns (uint256)",
      "function deposit(uint256 assets, address receiver) returns (uint256 shares)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function maxDeposit(address) pure returns (uint256)",
      "function maxMint(address) pure returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256 assets)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, bytes signature)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function pot() view returns (address)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner) returns (uint256 assets)",
      "function symbol() view returns (string)",
      "function totalAssets() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function vat() view returns (address)",
      "function version() view returns (string)",
      "function withdraw(uint256 assets, address receiver, address owner) returns (uint256 shares)"
    ],
    "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA": [
      "constructor(address admin_, uint256 delay_)",
      "event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event NewAdmin(address indexed newAdmin)",
      "event NewDelay(uint256 indexed newDelay)",
      "event NewPendingAdmin(address indexed newPendingAdmin)",
      "event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function acceptAdmin()",
      "function admin() view returns (address)",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta)",
      "function delay() view returns (uint256)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable returns (bytes)",
      "function pendingAdmin() view returns (address)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) returns (bytes32)",
      "function queuedTransactions(bytes32) view returns (bool)",
      "function setDelay(uint256 delay_)",
      "function setPendingAdmin(address pendingAdmin_)"
    ],
    "0x853d955aCEf822Db058eb8505911ED77F175b99e": [
      "constructor(string _name, string _symbol, address _creator_address, address _timelock_address)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event FRAXBurned(address indexed from, address indexed to, uint256 amount)",
      "event FRAXMinted(address indexed from, address indexed to, uint256 amount)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function COLLATERAL_RATIO_PAUSER() view returns (bytes32)",
      "function DEFAULT_ADMIN_ADDRESS() view returns (address)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function addPool(address pool_address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function collateral_ratio_paused() view returns (bool)",
      "function controller_address() view returns (address)",
      "function creator_address() view returns (address)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function eth_usd_consumer_address() view returns (address)",
      "function eth_usd_price() view returns (uint256)",
      "function frax_eth_oracle_address() view returns (address)",
      "function frax_info() view returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256)",
      "function frax_pools(address) view returns (bool)",
      "function frax_pools_array(uint256) view returns (address)",
      "function frax_price() view returns (uint256)",
      "function frax_step() view returns (uint256)",
      "function fxs_address() view returns (address)",
      "function fxs_eth_oracle_address() view returns (address)",
      "function fxs_price() view returns (uint256)",
      "function genesis_supply() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function globalCollateralValue() view returns (uint256)",
      "function global_collateral_ratio() view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function last_call_time() view returns (uint256)",
      "function minting_fee() view returns (uint256)",
      "function name() view returns (string)",
      "function owner_address() view returns (address)",
      "function pool_burn_from(address b_address, uint256 b_amount)",
      "function pool_mint(address m_address, uint256 m_amount)",
      "function price_band() view returns (uint256)",
      "function price_target() view returns (uint256)",
      "function redemption_fee() view returns (uint256)",
      "function refreshCollateralRatio()",
      "function refresh_cooldown() view returns (uint256)",
      "function removePool(address pool_address)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setController(address _controller_address)",
      "function setETHUSDOracle(address _eth_usd_consumer_address)",
      "function setFRAXEthOracle(address _frax_oracle_addr, address _weth_address)",
      "function setFXSAddress(address _fxs_address)",
      "function setFXSEthOracle(address _fxs_oracle_addr, address _weth_address)",
      "function setFraxStep(uint256 _new_step)",
      "function setMintingFee(uint256 min_fee)",
      "function setOwner(address _owner_address)",
      "function setPriceBand(uint256 _price_band)",
      "function setPriceTarget(uint256 _new_price_target)",
      "function setRedemptionFee(uint256 red_fee)",
      "function setRefreshCooldown(uint256 _new_cooldown)",
      "function setTimelock(address new_timelock)",
      "function symbol() view returns (string)",
      "function timelock_address() view returns (address)",
      "function toggleCollateralRatio()",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function weth_address() view returns (address)"
    ],
    "0x86C3FfeE349A7cFf7cA88C449717B1b133bfb517": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2": [
      "constructor(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function implementation() returns (address)",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x909d05F384D0663eD4BE59863815aB43b4f347Ec": [
      "function createCloneToken(address _parentToken, uint256 _snapshotBlock, string _tokenName, uint8 _decimalUnits, string _tokenSymbol, bool _transfersEnabled) returns (address)"
    ],
    "0x90D2af7d622ca3141efA4d8f1F24d86E5974Cc8F": [
      "constructor(address initialOwner_, address asset_, string name_, string symbol_)",
      "error DepositsDisabled()",
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error ERC4626ExceededMaxDeposit(address receiver, uint256 assets, uint256 max)",
      "error ERC4626ExceededMaxMint(address receiver, uint256 shares, uint256 max)",
      "error ERC4626ExceededMaxRedeem(address owner, uint256 shares, uint256 max)",
      "error ERC4626ExceededMaxWithdraw(address owner, uint256 assets, uint256 max)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error SafeERC20FailedOperation(address token)",
      "error WithdrawalsDisabled()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)",
      "event DepositsEnabled(bool enabled)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "event WithdrawalsEnabled(bool enabled)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function asset() view returns (address)",
      "function balanceOf(address account) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function deposit(uint256 assets, address receiver) returns (uint256)",
      "function depositsEnabled() view returns (bool)",
      "function maxDeposit(address) view returns (uint256)",
      "function maxMint(address) view returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256)",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner) returns (uint256)",
      "function renounceOwnership()",
      "function setDepositsEnabled(bool depositsEnabled_)",
      "function setWithdrawalsEnabled(bool withdrawalsEnabled_)",
      "function symbol() view returns (string)",
      "function totalAssets() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function withdraw(uint256 assets, address receiver, address owner) returns (uint256)",
      "function withdrawalsEnabled() view returns (bool)"
    ],
    "0x917459337CaAC939D41d7493B3999f571D20D667": [
      "constructor(address _SY, string _name, string _symbol, uint8 __decimals, uint256 _expiry)",
      "error OnlyYCFactory()",
      "error OnlyYT()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint8 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function SY() view returns (address)",
      "function YT() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burnByYT(address user, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function expiry() view returns (uint256)",
      "function factory() view returns (address)",
      "function initialize(address _YT)",
      "function isExpired() view returns (bool)",
      "function mintByYT(address user, uint256 amount)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x947Cb49334e6571ccBFEF1f1f1178d8469D65ec7": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x9759A6Ac90977b93B58547b4A71c78317f391A28": [
      "constructor(address vat_, address dai_)",
      "event LogNote(bytes4 indexed sig, address indexed usr, bytes32 indexed arg1, bytes32 indexed arg2, bytes data) anonymous",
      "function cage()",
      "function dai() view returns (address)",
      "function deny(address usr)",
      "function exit(address usr, uint256 wad)",
      "function join(address usr, uint256 wad)",
      "function live() view returns (uint256)",
      "function rely(address usr)",
      "function vat() view returns (address)",
      "function wards(address) view returns (uint256)"
    ],
    "0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c": [
      "constructor(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function implementation() returns (address)",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x9aEb8aAA1cA38634Aa8C0c8933E7fB4D61091327": [
      "constructor(address provider)",
      "event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee)",
      "event Borrow(address indexed reserve, address user, address indexed onBehalfOf, uint256 amount, uint8 interestRateMode, uint256 borrowRate, uint16 indexed referralCode)",
      "event DeficitCovered(address indexed reserve, address caller, uint256 amountCovered)",
      "event DeficitCreated(address indexed user, address indexed debtAsset, uint256 amountCreated)",
      "event FlashLoan(address indexed target, address initiator, address indexed asset, uint256 amount, uint8 interestRateMode, uint256 premium, uint16 indexed referralCode)",
      "event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt)",
      "event LiquidationCall(address indexed collateralAsset, address indexed debtAsset, address indexed user, uint256 debtToCover, uint256 liquidatedCollateralAmount, address liquidator, bool receiveAToken)",
      "event MintUnbacked(address indexed reserve, address user, address indexed onBehalfOf, uint256 amount, uint16 indexed referralCode)",
      "event MintedToTreasury(address indexed reserve, uint256 amountMinted)",
      "event Repay(address indexed reserve, address indexed user, address indexed repayer, uint256 amount, bool useATokens)",
      "event ReserveDataUpdated(address indexed reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)",
      "event ReserveDataUpdated(address indexed reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)",
      "event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user)",
      "event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user)",
      "event Supply(address indexed reserve, address user, address indexed onBehalfOf, uint256 amount, uint16 indexed referralCode)",
      "event UserEModeSet(address indexed user, uint8 categoryId)",
      "event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount)",
      "function ADDRESSES_PROVIDER() view returns (address)",
      "function BRIDGE_PROTOCOL_FEE() view returns (uint256)",
      "function FLASHLOAN_PREMIUM_TOTAL() view returns (uint128)",
      "function FLASHLOAN_PREMIUM_TO_PROTOCOL() view returns (uint128)",
      "function MAX_NUMBER_RESERVES() view returns (uint16)",
      "function POOL_REVISION() view returns (uint256)",
      "function UMBRELLA() view returns (bytes32)",
      "function backUnbacked(address asset, uint256 amount, uint256 fee) returns (uint256)",
      "function borrow(address asset, uint256 amount, uint256 interestRateMode, uint16 referralCode, address onBehalfOf)",
      "function configureEModeCategory(uint8 id, tuple(uint16 ltv, uint16 liquidationThreshold, uint16 liquidationBonus, string label) category)",
      "function configureEModeCategoryBorrowableBitmap(uint8 id, uint128 borrowableBitmap)",
      "function configureEModeCategoryCollateralBitmap(uint8 id, uint128 collateralBitmap)",
      "function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode)",
      "function dropReserve(address asset)",
      "function eliminateReserveDeficit(address asset, uint256 amount)",
      "function finalizeTransfer(address asset, address from, address to, uint256 amount, uint256 balanceFromBefore, uint256 balanceToBefore)",
      "function flashLoan(address receiverAddress, address[] assets, uint256[] amounts, uint256[] interestRateModes, address onBehalfOf, bytes params, uint16 referralCode)",
      "function flashLoanSimple(address receiverAddress, address asset, uint256 amount, bytes params, uint16 referralCode)",
      "function getBorrowLogic() pure returns (address)",
      "function getBridgeLogic() pure returns (address)",
      "function getConfiguration(address asset) view returns (tuple(uint256 data))",
      "function getEModeCategoryBorrowableBitmap(uint8 id) view returns (uint128)",
      "function getEModeCategoryCollateralBitmap(uint8 id) view returns (uint128)",
      "function getEModeCategoryCollateralConfig(uint8 id) view returns (tuple(uint16 ltv, uint16 liquidationThreshold, uint16 liquidationBonus))",
      "function getEModeCategoryData(uint8 id) view returns (tuple(uint16 ltv, uint16 liquidationThreshold, uint16 liquidationBonus, address priceSource, string label))",
      "function getEModeCategoryLabel(uint8 id) view returns (string)",
      "function getEModeLogic() pure returns (address)",
      "function getFlashLoanLogic() pure returns (address)",
      "function getLiquidationGracePeriod(address asset) view returns (uint40)",
      "function getLiquidationLogic() pure returns (address)",
      "function getPoolLogic() pure returns (address)",
      "function getReserveAToken(address asset) view returns (address)",
      "function getReserveAddressById(uint16 id) view returns (address)",
      "function getReserveData(address asset) view returns (tuple(tuple(uint256 data) configuration, uint128 liquidityIndex, uint128 currentLiquidityRate, uint128 variableBorrowIndex, uint128 currentVariableBorrowRate, uint128 currentStableBorrowRate, uint40 lastUpdateTimestamp, uint16 id, address aTokenAddress, address stableDebtTokenAddress, address variableDebtTokenAddress, address interestRateStrategyAddress, uint128 accruedToTreasury, uint128 unbacked, uint128 isolationModeTotalDebt))",
      "function getReserveDeficit(address asset) view returns (uint256)",
      "function getReserveNormalizedIncome(address asset) view returns (uint256)",
      "function getReserveNormalizedVariableDebt(address asset) view returns (uint256)",
      "function getReserveVariableDebtToken(address asset) view returns (address)",
      "function getReservesCount() view returns (uint256)",
      "function getReservesList() view returns (address[])",
      "function getSupplyLogic() pure returns (address)",
      "function getUserAccountData(address user) view returns (uint256 totalCollateralBase, uint256 totalDebtBase, uint256 availableBorrowsBase, uint256 currentLiquidationThreshold, uint256 ltv, uint256 healthFactor)",
      "function getUserConfiguration(address user) view returns (tuple(uint256 data))",
      "function getUserEMode(address user) view returns (uint256)",
      "function getVirtualUnderlyingBalance(address asset) view returns (uint128)",
      "function initReserve(address asset, address aTokenAddress, address variableDebtAddress, address interestRateStrategyAddress)",
      "function initialize(address provider)",
      "function liquidationCall(address collateralAsset, address debtAsset, address user, uint256 debtToCover, bool receiveAToken)",
      "function mintToTreasury(address[] assets)",
      "function mintUnbacked(address asset, uint256 amount, address onBehalfOf, uint16 referralCode)",
      "function repay(address asset, uint256 amount, uint256 interestRateMode, address onBehalfOf) returns (uint256)",
      "function repayWithATokens(address asset, uint256 amount, uint256 interestRateMode) returns (uint256)",
      "function repayWithPermit(address asset, uint256 amount, uint256 interestRateMode, address onBehalfOf, uint256 deadline, uint8 permitV, bytes32 permitR, bytes32 permitS) returns (uint256)",
      "function rescueTokens(address token, address to, uint256 amount)",
      "function resetIsolationModeTotalDebt(address asset)",
      "function setConfiguration(address asset, tuple(uint256 data) configuration)",
      "function setLiquidationGracePeriod(address asset, uint40 until)",
      "function setReserveInterestRateStrategyAddress(address asset, address rateStrategyAddress)",
      "function setUserEMode(uint8 categoryId)",
      "function setUserUseReserveAsCollateral(address asset, bool useAsCollateral)",
      "function supply(address asset, uint256 amount, address onBehalfOf, uint16 referralCode)",
      "function supplyWithPermit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode, uint256 deadline, uint8 permitV, bytes32 permitR, bytes32 permitS)",
      "function syncIndexesState(address asset)",
      "function syncRatesState(address asset)",
      "function updateBridgeProtocolFee(uint256 protocolFee)",
      "function updateFlashloanPremiums(uint128 flashLoanPremiumTotal, uint128 flashLoanPremiumToProtocol)",
      "function withdraw(address asset, uint256 amount, address to) returns (uint256)"
    ],
    "0x9b37180d847B27ADC13C2277299045C1237Ae281": [
      "event AllowanceReplenished(address indexed caller, uint256 allowance, uint256 amountReplenished)",
      "event CallerConfigured(address indexed caller, uint256 amount, uint256 interval)",
      "event CallerRemoved(address indexed caller)",
      "event ExchangeRateUpdated(address indexed caller, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function allowances(address) view returns (uint256)",
      "function allowancesLastSet(address) view returns (uint256)",
      "function callers(address) view returns (bool)",
      "function configureCaller(address caller, uint256 amount, uint256 interval)",
      "function currentAllowance(address caller) returns (uint256)",
      "function estimatedAllowance(address caller) view returns (uint256)",
      "function initialize(address newOwner, address newTokenContract)",
      "function intervals(address) view returns (uint256)",
      "function maxAllowances(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function removeCaller(address caller)",
      "function renounceOwnership()",
      "function tokenContract() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateExchangeRate(uint256 _newExchangeRate)"
    ],
    "0x9C070027cdC9dc8F82416B2e5314E11DFb4FE3CD": [
      "constructor(address _bank, address _tbtcToken, address _bridge)",
      "event GuardianAdded(address indexed guardian)",
      "event GuardianRemoved(address indexed guardian)",
      "event Minted(address indexed to, uint256 amount)",
      "event MinterAdded(address indexed minter)",
      "event MinterRemoved(address indexed minter)",
      "event OptimisticMintingCancelled(address indexed guardian, uint256 indexed depositKey)",
      "event OptimisticMintingDebtRepaid(address indexed depositor, uint256 optimisticMintingDebt)",
      "event OptimisticMintingDelayUpdateStarted(uint32 newOptimisticMintingDelay)",
      "event OptimisticMintingDelayUpdated(uint32 newOptimisticMintingDelay)",
      "event OptimisticMintingFeeUpdateStarted(uint32 newOptimisticMintingFeeDivisor)",
      "event OptimisticMintingFeeUpdated(uint32 newOptimisticMintingFeeDivisor)",
      "event OptimisticMintingFinalized(address indexed minter, uint256 indexed depositKey, address indexed depositor, uint256 optimisticMintingDebt)",
      "event OptimisticMintingPaused()",
      "event OptimisticMintingRequested(address indexed minter, uint256 indexed depositKey, address indexed depositor, uint256 amount, bytes32 fundingTxHash, uint32 fundingOutputIndex)",
      "event OptimisticMintingUnpaused()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Unminted(address indexed from, uint256 amount)",
      "event UpgradeFinalized(address newVault)",
      "event UpgradeInitiated(address newVault, uint256 timestamp)",
      "function GOVERNANCE_DELAY() view returns (uint256)",
      "function SATOSHI_MULTIPLIER() view returns (uint256)",
      "function addGuardian(address guardian)",
      "function addMinter(address minter)",
      "function amountToSatoshis(uint256 amount) view returns (uint256 convertibleAmount, uint256 remainder, uint256 satoshis)",
      "function bank() view returns (address)",
      "function beginOptimisticMintingDelayUpdate(uint32 _newOptimisticMintingDelay)",
      "function beginOptimisticMintingFeeUpdate(uint32 _newOptimisticMintingFeeDivisor)",
      "function bridge() view returns (address)",
      "function calculateDepositKey(bytes32 fundingTxHash, uint32 fundingOutputIndex) pure returns (uint256)",
      "function cancelOptimisticMint(bytes32 fundingTxHash, uint32 fundingOutputIndex)",
      "function finalizeOptimisticMint(bytes32 fundingTxHash, uint32 fundingOutputIndex)",
      "function finalizeOptimisticMintingDelayUpdate()",
      "function finalizeOptimisticMintingFeeUpdate()",
      "function finalizeUpgrade()",
      "function getMinters() view returns (address[])",
      "function initiateUpgrade(address _newVault)",
      "function isGuardian(address) view returns (bool)",
      "function isMinter(address) view returns (bool)",
      "function isOptimisticMintingPaused() view returns (bool)",
      "function mint(uint256 amount)",
      "function minters(uint256) view returns (address)",
      "function newOptimisticMintingDelay() view returns (uint32)",
      "function newOptimisticMintingFeeDivisor() view returns (uint32)",
      "function newVault() view returns (address)",
      "function optimisticMintingDebt(address) view returns (uint256)",
      "function optimisticMintingDelay() view returns (uint32)",
      "function optimisticMintingDelayUpdateInitiatedTimestamp() view returns (uint256)",
      "function optimisticMintingFeeDivisor() view returns (uint32)",
      "function optimisticMintingFeeUpdateInitiatedTimestamp() view returns (uint256)",
      "function optimisticMintingRequests(uint256) view returns (uint64 requestedAt, uint64 finalizedAt)",
      "function owner() view returns (address)",
      "function pauseOptimisticMinting()",
      "function receiveApproval(address from, uint256 amount, address token, bytes extraData)",
      "function receiveBalanceApproval(address owner, uint256 satoshis, bytes)",
      "function receiveBalanceIncrease(address[] depositors, uint256[] depositedSatoshiAmounts)",
      "function recoverERC20(address token, address recipient, uint256 amount)",
      "function recoverERC20FromToken(address token, address recipient, uint256 amount)",
      "function recoverERC721(address token, address recipient, uint256 tokenId, bytes data)",
      "function recoverERC721FromToken(address token, address recipient, uint256 tokenId, bytes data)",
      "function removeGuardian(address guardian)",
      "function removeMinter(address minter)",
      "function renounceOwnership()",
      "function requestOptimisticMint(bytes32 fundingTxHash, uint32 fundingOutputIndex)",
      "function tbtcToken() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unmint(uint256 amount)",
      "function unmintAndRedeem(uint256 amount, bytes redemptionData)",
      "function unpauseOptimisticMinting()",
      "function upgradeInitiatedTimestamp() view returns (uint256)"
    ],
    "0x9D39A5DE30e57443BfF2A8307A4256c8797A3497": [
      "constructor(address _asset, address initialRewarder, address _owner)",
      "error CantBlacklistOwner()",
      "error ExcessiveRedeemAmount()",
      "error ExcessiveWithdrawAmount()",
      "error InvalidAdminChange()",
      "error InvalidAmount()",
      "error InvalidCooldown()",
      "error InvalidShortString()",
      "error InvalidToken()",
      "error InvalidZeroAddress()",
      "error MinSharesViolation()",
      "error NotPendingAdmin()",
      "error OperationNotAllowed()",
      "error StillVesting()",
      "error StringTooLong(string str)",
      "event AdminTransferRequested(address indexed oldAdmin, address indexed newAdmin)",
      "event AdminTransferred(address indexed oldAdmin, address indexed newAdmin)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event CooldownDurationUpdated(uint24 previousDuration, uint24 newDuration)",
      "event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)",
      "event EIP712DomainChanged()",
      "event LockedAmountRedistributed(address indexed from, address indexed to, uint256 amount)",
      "event RewardsReceived(uint256 amount)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function MAX_COOLDOWN_DURATION() view returns (uint24)",
      "function acceptAdmin()",
      "function addToBlacklist(address target, bool isFullBlacklisting)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function asset() view returns (address)",
      "function balanceOf(address account) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function cooldownAssets(uint256 assets) returns (uint256 shares)",
      "function cooldownDuration() view returns (uint24)",
      "function cooldownShares(uint256 shares) returns (uint256 assets)",
      "function cooldowns(address) view returns (uint104 cooldownEnd, uint152 underlyingAmount)",
      "function decimals() pure returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function deposit(uint256 assets, address receiver) returns (uint256)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getUnvestedAmount() view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function lastDistributionTimestamp() view returns (uint256)",
      "function maxDeposit(address) view returns (uint256)",
      "function maxMint(address) view returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function redeem(uint256 shares, address receiver, address _owner) returns (uint256)",
      "function redistributeLockedAmount(address from, address to)",
      "function removeFromBlacklist(address target, bool isFullBlacklisting)",
      "function renounceRole(bytes32, address)",
      "function rescueTokens(address token, uint256 amount, address to)",
      "function revokeRole(bytes32 role, address account)",
      "function setCooldownDuration(uint24 duration)",
      "function silo() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalAssets() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferAdmin(address newAdmin)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferInRewards(uint256 amount)",
      "function unstake(address receiver)",
      "function vestingAmount() view returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address _owner) returns (uint256)"
    ],
    "0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB": [
      "constructor(address provider)",
      "event RateDataUpdate(address indexed reserve, uint256 optimalUsageRatio, uint256 baseVariableBorrowRate, uint256 variableRateSlope1, uint256 variableRateSlope2)",
      "function ADDRESSES_PROVIDER() view returns (address)",
      "function MAX_BORROW_RATE() view returns (uint256)",
      "function MAX_OPTIMAL_POINT() view returns (uint256)",
      "function MIN_OPTIMAL_POINT() view returns (uint256)",
      "function calculateInterestRates(tuple(uint256 unbacked, uint256 liquidityAdded, uint256 liquidityTaken, uint256 totalDebt, uint256 reserveFactor, address reserve, bool usingVirtualBalance, uint256 virtualUnderlyingBalance) params) view returns (uint256, uint256)",
      "function getBaseVariableBorrowRate(address reserve) view returns (uint256)",
      "function getInterestRateData(address reserve) view returns (tuple(uint256 optimalUsageRatio, uint256 baseVariableBorrowRate, uint256 variableRateSlope1, uint256 variableRateSlope2))",
      "function getInterestRateDataBps(address reserve) view returns (tuple(uint16 optimalUsageRatio, uint32 baseVariableBorrowRate, uint32 variableRateSlope1, uint32 variableRateSlope2))",
      "function getMaxVariableBorrowRate(address reserve) view returns (uint256)",
      "function getOptimalUsageRatio(address reserve) view returns (uint256)",
      "function getVariableRateSlope1(address reserve) view returns (uint256)",
      "function getVariableRateSlope2(address reserve) view returns (uint256)",
      "function setInterestRateParams(address reserve, bytes rateData)",
      "function setInterestRateParams(address reserve, tuple(uint16 optimalUsageRatio, uint32 baseVariableBorrowRate, uint32 variableRateSlope1, uint32 variableRateSlope2) rateData)"
    ],
    "0x9f26d4C958fD811A1F59B01B86Be7dFFc9d20761": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256 duration)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256 timestamp)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function isOperation(bytes32 id) view returns (bool registered)",
      "function isOperationDone(bytes32 id) view returns (bool done)",
      "function isOperationPending(bytes32 id) view returns (bool pending)",
      "function isOperationReady(bytes32 id) view returns (bool ready)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x9F8048C81d00DA5e757E20Ad5Fc89f8a32c5478e": [
      "constructor()",
      "error InvalidEpoch()",
      "error InvalidInitialization()",
      "error InvalidPublicKey(bytes pubKey)",
      "error InvalidThreshold()",
      "error InvalidValidatorSetSize()",
      "error LengthMismatch()",
      "error LengthMismatch()",
      "error NoValidatorSet()",
      "error NotEnoughSignatures()",
      "error NotInitializing()",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error PayloadAlreadyUsed()",
      "error PayloadTooLarge()",
      "error UnexpectedAction(bytes4 action)",
      "error ValSetAlreadySet()",
      "error ZeroWeight()",
      "event Initialized(uint64 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ValidatorSetUpdated(uint256 indexed epoch, address[] validators, uint256[] weights, uint256 threshold)",
      "function acceptOwnership()",
      "function checkProof(bytes32 _payloadHash, bytes _proof) view",
      "function curEpoch() view returns (uint256)",
      "function getValidatorSet(uint256 epoch) view returns (tuple(address[] validators, uint256[] weights, uint256 weightThreshold))",
      "function initialize(address _owner)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setInitialValidatorSet(bytes _initialValSet)",
      "function setNextValidatorSet(bytes payload, bytes proof)",
      "function transferOwnership(address newOwner)"
    ],
    "0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2": [
      "function name() view returns (bytes32)",
      "function stop()",
      "function approve(address guy, uint256 wad) returns (bool)",
      "function setOwner(address owner_)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address src, address dst, uint256 wad) returns (bool)",
      "function decimals() view returns (uint256)",
      "function mint(address guy, uint256 wad)",
      "function burn(uint256 wad)",
      "function setName(bytes32 name_)",
      "function balanceOf(address src) view returns (uint256)",
      "function stopped() view returns (bool)",
      "function setAuthority(address authority_)",
      "function owner() view returns (address)",
      "function symbol() view returns (bytes32)",
      "function burn(address guy, uint256 wad)",
      "function mint(uint256 wad)",
      "function transfer(address dst, uint256 wad) returns (bool)",
      "function push(address dst, uint256 wad)",
      "function move(address src, address dst, uint256 wad)",
      "function start()",
      "function authority() view returns (address)",
      "function approve(address guy) returns (bool)",
      "function allowance(address src, address guy) view returns (uint256)",
      "function pull(address src, uint256 wad)",
      "constructor(bytes32 symbol_)",
      "event Mint(address indexed guy, uint256 wad)",
      "event Burn(address indexed guy, uint256 wad)",
      "event LogSetAuthority(address indexed authority)",
      "event LogSetOwner(address indexed owner)",
      "event LogNote(bytes4 indexed sig, address indexed guy, bytes32 indexed foo, bytes32 indexed bar, uint256 wad, bytes fax) anonymous",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)"
    ],
    "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() view returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() view returns (address)",
      "constructor(address _implementation)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address implementation)"
    ],
    "0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xA1Bc65eCf8BC7B2FAA22c53bcC49b0376Da3845A": [
      "constructor()",
      "error Actions_ZeroAddress()",
      "error AmountBelowDustLimit(uint256 dustLimit)",
      "error AmountLessThanCommission(uint256 fee)",
      "error ECDSAInvalidSignature()",
      "error ECDSAInvalidSignatureLength(uint256 length)",
      "error ECDSAInvalidSignatureS(bytes32 s)",
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error ERC2612ExpiredSignature(uint256 deadline)",
      "error ERC2612InvalidSigner(address signer, address owner)",
      "error EnforcedPause()",
      "error ExpectedPause()",
      "error FeeGreaterThanAmount()",
      "error InvalidAccountNonce(address account, uint256 currentNonce)",
      "error InvalidDustFeeRate()",
      "error InvalidInitialization()",
      "error InvalidInputLength()",
      "error InvalidMintAmount()",
      "error InvalidUserSignature()",
      "error KnownDestination()",
      "error NotInitializing()",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error PayloadAlreadyUsed()",
      "error PayloadTooLarge()",
      "error ReentrancyGuardReentrantCall()",
      "error ScriptPubkeyUnsupported()",
      "error UnauthorizedAccount(address account)",
      "error UnexpectedAction(bytes4 action)",
      "error UnknownDestination()",
      "error UserSignatureExpired(uint256 expiry)",
      "error WithdrawalsDisabled()",
      "error WrongChainId()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "error ZeroChainId()",
      "error ZeroContractHash()",
      "error ZeroFee()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BasculeChanged(address indexed prevVal, address indexed newVal)",
      "event BatchMintSkipped(bytes32 indexed payloadHash, bytes payload)",
      "event BridgeChanged(address indexed prevVal, address indexed newVal)",
      "event BurnCommissionChanged(uint64 indexed prevValue, uint64 indexed newValue)",
      "event ClaimerUpdated(address indexed claimer, bool isClaimer)",
      "event ConsortiumChanged(address indexed prevVal, address indexed newVal)",
      "event DustFeeRateChanged(uint256 indexed oldRate, uint256 indexed newRate)",
      "event EIP712DomainChanged()",
      "event FeeChanged(uint256 indexed oldFee, uint256 indexed newFee)",
      "event FeeCharged(uint256 indexed fee, bytes userSignature)",
      "event Initialized(uint64 version)",
      "event MintProofConsumed(address indexed recipient, bytes32 indexed payloadHash, bytes payload)",
      "event MinterUpdated(address indexed minter, bool isMinter)",
      "event NameAndSymbolChanged(string name, string symbol)",
      "event OperatorRoleTransferred(address indexed previousOperator, address indexed newOperator)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event PauserRoleTransferred(address indexed previousPauser, address indexed newPauser)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event TreasuryAddressChanged(address indexed prevValue, address indexed newValue)",
      "event Unpaused(address account)",
      "event UnstakeRequest(address indexed fromAddress, bytes scriptPubKey, uint256 amount)",
      "event WithdrawalsEnabled(bool)",
      "function Bascule() view returns (address)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function acceptOwnership()",
      "function addClaimer(address newClaimer)",
      "function addMinter(address newMinter)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function batchMint(address[] to, uint256[] amount)",
      "function batchMint(bytes[] payload, bytes[] proof)",
      "function batchMintWithFee(bytes[] mintPayload, bytes[] proof, bytes[] feePayload, bytes[] userSignature)",
      "function burn(uint256 amount)",
      "function burn(address from, uint256 amount)",
      "function calcUnstakeRequestAmount(bytes scriptPubkey, uint256 amount) view returns (uint256 amountAfterFee, bool isAboveDust)",
      "function changeBascule(address newVal)",
      "function changeBurnCommission(uint64 newValue)",
      "function changeConsortium(address newVal)",
      "function changeDustFeeRate(uint256 newRate)",
      "function changeNameAndSymbol(string name_, string symbol_)",
      "function changeTreasuryAddress(address newValue)",
      "function consortium() view returns (address)",
      "function decimals() view returns (uint8)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function getBurnCommission() view returns (uint64)",
      "function getDustFeeRate() view returns (uint256)",
      "function getMintFee() view returns (uint256)",
      "function getTreasury() view returns (address)",
      "function initialize(address consortium_, uint64 burnCommission_, address treasury, address owner_)",
      "function isClaimer(address claimer) view returns (bool)",
      "function isMinter(address minter) view returns (bool)",
      "function mint(address to, uint256 amount)",
      "function mint(bytes payload, bytes proof)",
      "function mintWithFee(bytes mintPayload, bytes proof, bytes feePayload, bytes userSignature)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function operator() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function redeem(bytes scriptPubkey, uint256 amount)",
      "function reinitialize()",
      "function removeClaimer(address oldClaimer)",
      "function removeMinter(address oldMinter)",
      "function renounceOwnership()",
      "function setMintFee(uint256 fee)",
      "function symbol() view returns (string)",
      "function toggleWithdrawals()",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOperatorRole(address newOperator)",
      "function transferOwnership(address newOwner)",
      "function transferPauserRole(address newPauser)",
      "function unpause()"
    ],
    "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2": [
      "event ActivePoolAddressChanged(address _activePoolAddress)",
      "event BaseRateUpdated(uint256 _baseRate)",
      "event BorrowerOperationsAddressChanged(address _newBorrowerOperationsAddress)",
      "event CollSurplusPoolAddressChanged(address _collSurplusPoolAddress)",
      "event DefaultPoolAddressChanged(address _defaultPoolAddress)",
      "event GasPoolAddressChanged(address _gasPoolAddress)",
      "event LQTYStakingAddressChanged(address _lqtyStakingAddress)",
      "event LQTYTokenAddressChanged(address _lqtyTokenAddress)",
      "event LTermsUpdated(uint256 _L_ETH, uint256 _L_LUSDDebt)",
      "event LUSDTokenAddressChanged(address _newLUSDTokenAddress)",
      "event LastFeeOpTimeUpdated(uint256 _lastFeeOpTime)",
      "event Liquidation(uint256 _liquidatedDebt, uint256 _liquidatedColl, uint256 _collGasCompensation, uint256 _LUSDGasCompensation)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PriceFeedAddressChanged(address _newPriceFeedAddress)",
      "event Redemption(uint256 _attemptedLUSDAmount, uint256 _actualLUSDAmount, uint256 _ETHSent, uint256 _ETHFee)",
      "event SortedTrovesAddressChanged(address _sortedTrovesAddress)",
      "event StabilityPoolAddressChanged(address _stabilityPoolAddress)",
      "event SystemSnapshotsUpdated(uint256 _totalStakesSnapshot, uint256 _totalCollateralSnapshot)",
      "event TotalStakesUpdated(uint256 _newTotalStakes)",
      "event TroveIndexUpdated(address _borrower, uint256 _newIndex)",
      "event TroveLiquidated(address indexed _borrower, uint256 _debt, uint256 _coll, uint8 _operation)",
      "event TroveSnapshotsUpdated(uint256 _L_ETH, uint256 _L_LUSDDebt)",
      "event TroveUpdated(address indexed _borrower, uint256 _debt, uint256 _coll, uint256 _stake, uint8 _operation)",
      "function BETA() view returns (uint256)",
      "function BOOTSTRAP_PERIOD() view returns (uint256)",
      "function BORROWING_FEE_FLOOR() view returns (uint256)",
      "function CCR() view returns (uint256)",
      "function DECIMAL_PRECISION() view returns (uint256)",
      "function LUSD_GAS_COMPENSATION() view returns (uint256)",
      "function L_ETH() view returns (uint256)",
      "function L_LUSDDebt() view returns (uint256)",
      "function MAX_BORROWING_FEE() view returns (uint256)",
      "function MCR() view returns (uint256)",
      "function MINUTE_DECAY_FACTOR() view returns (uint256)",
      "function MIN_NET_DEBT() view returns (uint256)",
      "function NAME() view returns (string)",
      "function PERCENT_DIVISOR() view returns (uint256)",
      "function REDEMPTION_FEE_FLOOR() view returns (uint256)",
      "function SECONDS_IN_ONE_MINUTE() view returns (uint256)",
      "function TroveOwners(uint256) view returns (address)",
      "function Troves(address) view returns (uint256 debt, uint256 coll, uint256 stake, uint8 status, uint128 arrayIndex)",
      "function _100pct() view returns (uint256)",
      "function activePool() view returns (address)",
      "function addTroveOwnerToArray(address _borrower) returns (uint256 index)",
      "function applyPendingRewards(address _borrower)",
      "function baseRate() view returns (uint256)",
      "function batchLiquidateTroves(address[] _troveArray)",
      "function borrowerOperationsAddress() view returns (address)",
      "function checkRecoveryMode(uint256 _price) view returns (bool)",
      "function closeTrove(address _borrower)",
      "function decayBaseRateFromBorrowing()",
      "function decreaseTroveColl(address _borrower, uint256 _collDecrease) returns (uint256)",
      "function decreaseTroveDebt(address _borrower, uint256 _debtDecrease) returns (uint256)",
      "function defaultPool() view returns (address)",
      "function getBorrowingFee(uint256 _LUSDDebt) view returns (uint256)",
      "function getBorrowingFeeWithDecay(uint256 _LUSDDebt) view returns (uint256)",
      "function getBorrowingRate() view returns (uint256)",
      "function getBorrowingRateWithDecay() view returns (uint256)",
      "function getCurrentICR(address _borrower, uint256 _price) view returns (uint256)",
      "function getEntireDebtAndColl(address _borrower) view returns (uint256 debt, uint256 coll, uint256 pendingLUSDDebtReward, uint256 pendingETHReward)",
      "function getEntireSystemColl() view returns (uint256 entireSystemColl)",
      "function getEntireSystemDebt() view returns (uint256 entireSystemDebt)",
      "function getNominalICR(address _borrower) view returns (uint256)",
      "function getPendingETHReward(address _borrower) view returns (uint256)",
      "function getPendingLUSDDebtReward(address _borrower) view returns (uint256)",
      "function getRedemptionFeeWithDecay(uint256 _ETHDrawn) view returns (uint256)",
      "function getRedemptionRate() view returns (uint256)",
      "function getRedemptionRateWithDecay() view returns (uint256)",
      "function getTCR(uint256 _price) view returns (uint256)",
      "function getTroveColl(address _borrower) view returns (uint256)",
      "function getTroveDebt(address _borrower) view returns (uint256)",
      "function getTroveFromTroveOwnersArray(uint256 _index) view returns (address)",
      "function getTroveOwnersCount() view returns (uint256)",
      "function getTroveStake(address _borrower) view returns (uint256)",
      "function getTroveStatus(address _borrower) view returns (uint256)",
      "function hasPendingRewards(address _borrower) view returns (bool)",
      "function increaseTroveColl(address _borrower, uint256 _collIncrease) returns (uint256)",
      "function increaseTroveDebt(address _borrower, uint256 _debtIncrease) returns (uint256)",
      "function isOwner() view returns (bool)",
      "function lastETHError_Redistribution() view returns (uint256)",
      "function lastFeeOperationTime() view returns (uint256)",
      "function lastLUSDDebtError_Redistribution() view returns (uint256)",
      "function liquidate(address _borrower)",
      "function liquidateTroves(uint256 _n)",
      "function lqtyStaking() view returns (address)",
      "function lqtyToken() view returns (address)",
      "function lusdToken() view returns (address)",
      "function owner() view returns (address)",
      "function priceFeed() view returns (address)",
      "function redeemCollateral(uint256 _LUSDamount, address _firstRedemptionHint, address _upperPartialRedemptionHint, address _lowerPartialRedemptionHint, uint256 _partialRedemptionHintNICR, uint256 _maxIterations, uint256 _maxFeePercentage)",
      "function removeStake(address _borrower)",
      "function rewardSnapshots(address) view returns (uint256 ETH, uint256 LUSDDebt)",
      "function setAddresses(address _borrowerOperationsAddress, address _activePoolAddress, address _defaultPoolAddress, address _stabilityPoolAddress, address _gasPoolAddress, address _collSurplusPoolAddress, address _priceFeedAddress, address _lusdTokenAddress, address _sortedTrovesAddress, address _lqtyTokenAddress, address _lqtyStakingAddress)",
      "function setTroveStatus(address _borrower, uint256 _num)",
      "function sortedTroves() view returns (address)",
      "function stabilityPool() view returns (address)",
      "function totalCollateralSnapshot() view returns (uint256)",
      "function totalStakes() view returns (uint256)",
      "function totalStakesSnapshot() view returns (uint256)",
      "function updateStakeAndTotalStakes(address _borrower) returns (uint256)",
      "function updateTroveRewardSnapshots(address _borrower)"
    ],
    "0xA6099d83A67a2c653feB5e4e48ec24C5aeE1C515": [
      "constructor()",
      "error DataNotSet()",
      "error IncorrectCaller()",
      "error IncorrectRole()",
      "error InsufficientLiquidity()",
      "error InvalidAmount()",
      "error SendFail()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event BnftHolderDeregistered(address user, uint256 index)",
      "event BnftHolderRegistered(address user, uint256 index)",
      "event Deposit(address indexed sender, uint256 amount, uint8 source, address referral)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event ProtocolFeePaid(uint128 protocolFees)",
      "event Rebase(uint256 totalEthLocked, uint256 totalEEthShares)",
      "event Unpaused(address account)",
      "event UpdatedFeeRecipient(address newFeeRecipient)",
      "event UpdatedTreasury(address newTreasury)",
      "event UpdatedWhitelist(address userAddress, bool value)",
      "event Upgraded(address indexed implementation)",
      "event ValidatorApproved(uint256 indexed validatorId)",
      "event ValidatorRegistered(uint256 indexed validatorId, bytes signature, bytes pubKey, bytes32 depositRoot)",
      "event ValidatorRegistrationCanceled(uint256 indexed validatorId)",
      "event ValidatorSpawnerRegistered(address user)",
      "event ValidatorSpawnerUnregistered(address user)",
      "event WhitelistStatusUpdated(bool value)",
      "event Withdraw(address indexed sender, address recipient, uint256 amount, uint8 source)",
      "function DEPRECATED_admins(address) view returns (bool)",
      "function DEPRECATED_bNftTreasury() view returns (address)",
      "function DEPRECATED_bnftHolders(uint256) view returns (address holder)",
      "function DEPRECATED_eEthliquidStakingOpened() view returns (bool)",
      "function DEPRECATED_fundStatistics(uint8) view returns (uint32 numberOfValidators, uint32 targetWeight)",
      "function DEPRECATED_holdersUpdate() view returns (uint32 timestamp, uint32 startOfSlotNumOwners)",
      "function DEPRECATED_maxValidatorsPerOwner() view returns (uint128)",
      "function DEPRECATED_regulationsManager() view returns (address)",
      "function DEPRECATED_schedulingPeriodInSeconds() view returns (uint128)",
      "function DEPRECATED_whitelistEnabled() view returns (bool)",
      "function DEPRECATED_whitelisted(address) view returns (bool)",
      "function LIQUIDITY_POOL_ADMIN_ROLE() view returns (bytes32)",
      "function addEthAmountLockedForWithdrawal(uint128 _amount)",
      "function amountForShare(uint256 _share) view returns (uint256)",
      "function auctionManager() view returns (address)",
      "function batchApproveRegistration(uint256[] _validatorIds, bytes[] _pubKey, bytes[] _signature)",
      "function batchCancelDeposit(uint256[] _validatorIds)",
      "function batchDeposit(uint256[] _candidateBidIds, uint256 _numberOfValidators, uint256 _validatorIdToShareSafeWith) returns (uint256[])",
      "function batchDeposit(uint256[] _candidateBidIds, uint256 _numberOfValidators) returns (uint256[])",
      "function batchRegister(bytes32 _depositRoot, uint256[] _validatorIds, tuple(bytes publicKey, bytes signature, bytes32 depositDataRoot, string ipfsHashForEncryptedValidatorKey)[] _registerValidatorDepositData, bytes32[] _depositDataRootApproval, bytes[] _signaturesForApprovalDeposit)",
      "function burnEEthShares(uint256 shares)",
      "function deposit() payable returns (uint256)",
      "function deposit(address _referral) payable returns (uint256)",
      "function deposit(address _user, address _referral) payable returns (uint256)",
      "function depositDataRootForApprovalDeposits(uint256) view returns (bytes32)",
      "function depositToRecipient(address _recipient, uint256 _amount, address _referral) returns (uint256)",
      "function eETH() view returns (address)",
      "function ethAmountLockedForWithdrawal() view returns (uint128)",
      "function etherFiAdminContract() view returns (address)",
      "function etherFiRedemptionManager() view returns (address)",
      "function feeRecipient() view returns (address)",
      "function getImplementation() view returns (address)",
      "function getTotalEtherClaimOf(address _user) view returns (uint256)",
      "function getTotalPooledEther() view returns (uint256)",
      "function initialize(address _eEthAddress, address _stakingManagerAddress, address _nodesManagerAddress, address _membershipManagerAddress, address _tNftAddress, address _etherFiAdminContract, address _withdrawRequestNFT)",
      "function initializeOnUpgrade(address _auctionManager, address _liquifier)",
      "function initializeVTwoDotFourNine(address _roleRegistry, address _etherFiRedemptionManager)",
      "function liquifier() view returns (address)",
      "function membershipManager() view returns (address)",
      "function nodesManager() view returns (address)",
      "function numPendingDeposits() view returns (uint32)",
      "function owner() view returns (address)",
      "function pauseContract()",
      "function paused() view returns (bool)",
      "function payProtocolFees(uint128 _protocolFees)",
      "function proxiableUUID() view returns (bytes32)",
      "function rebase(int128 _accruedRewards)",
      "function registerValidatorSpawner(address _user)",
      "function renounceOwnership()",
      "function requestMembershipNFTWithdraw(address recipient, uint256 amount, uint256 fee) returns (uint256)",
      "function requestWithdraw(address recipient, uint256 amount) returns (uint256)",
      "function requestWithdrawWithPermit(address _owner, uint256 _amount, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) _permit) returns (uint256)",
      "function restakeBnftDeposits() view returns (bool)",
      "function roleRegistry() view returns (address)",
      "function sendExitRequests(uint256[] _validatorIds)",
      "function setFeeRecipient(address _feeRecipient)",
      "function setRestakeBnftDeposits(bool _restake)",
      "function setStakingTargetWeights(uint32 _eEthWeight, uint32 _etherFanWeight)",
      "function sharesForAmount(uint256 _amount) view returns (uint256)",
      "function sharesForWithdrawalAmount(uint256 _amount) view returns (uint256)",
      "function stakingManager() view returns (address)",
      "function tNft() view returns (address)",
      "function totalValueInLp() view returns (uint128)",
      "function totalValueOutOfLp() view returns (uint128)",
      "function transferOwnership(address newOwner)",
      "function unPauseContract()",
      "function unregisterValidatorSpawner(address _user)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function validatorSpawner(address) view returns (bool registered)",
      "function withdraw(address _recipient, uint256 _amount) returns (uint256)",
      "function withdrawRequestNFT() view returns (address)"
    ],
    "0xaC725CB59D16C81061BDeA61041a8A5e73DA9EC6": [
      "constructor(address pool)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BorrowAllowanceDelegated(address indexed fromUser, address indexed toUser, address indexed asset, uint256 amount)",
      "event Burn(address indexed from, address indexed target, uint256 value, uint256 balanceIncrease, uint256 index)",
      "event Initialized(address indexed underlyingAsset, address indexed pool, address incentivesController, uint8 debtTokenDecimals, string debtTokenName, string debtTokenSymbol, bytes params)",
      "event Mint(address indexed caller, address indexed onBehalfOf, uint256 value, uint256 balanceIncrease, uint256 index)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DEBT_TOKEN_REVISION() view returns (uint256)",
      "function DELEGATION_WITH_SIG_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function EIP712_REVISION() view returns (bytes)",
      "function POOL() view returns (address)",
      "function UNDERLYING_ASSET_ADDRESS() view returns (address)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address, uint256) returns (bool)",
      "function approveDelegation(address delegatee, uint256 amount)",
      "function balanceOf(address user) view returns (uint256)",
      "function borrowAllowance(address fromUser, address toUser) view returns (uint256)",
      "function burn(address from, uint256 amount, uint256 index) returns (uint256)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address, uint256) returns (bool)",
      "function delegationWithSig(address delegator, address delegatee, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function getIncentivesController() view returns (address)",
      "function getPreviousIndex(address user) view returns (uint256)",
      "function getScaledUserBalanceAndSupply(address user) view returns (uint256, uint256)",
      "function increaseAllowance(address, uint256) returns (bool)",
      "function initialize(address initializingPool, address underlyingAsset, address incentivesController, uint8 debtTokenDecimals, string debtTokenName, string debtTokenSymbol, bytes params)",
      "function mint(address user, address onBehalfOf, uint256 amount, uint256 index) returns (bool, uint256)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function scaledBalanceOf(address user) view returns (uint256)",
      "function scaledTotalSupply() view returns (uint256)",
      "function setIncentivesController(address controller)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address, uint256) returns (bool)",
      "function transferFrom(address, address, uint256) returns (bool)"
    ],
    "0xae78736Cd615f374D3085123A210448E74Fc6393": [
      "constructor(address _rocketStorageAddress)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event EtherDeposited(address indexed from, uint256 amount, uint256 time)",
      "event TokensBurned(address indexed from, uint256 amount, uint256 ethAmount, uint256 time)",
      "event TokensMinted(address indexed to, uint256 amount, uint256 ethAmount, uint256 time)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 _rethAmount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function depositExcess() payable",
      "function depositExcessCollateral()",
      "function getCollateralRate() view returns (uint256)",
      "function getEthValue(uint256 _rethAmount) view returns (uint256)",
      "function getExchangeRate() view returns (uint256)",
      "function getRethValue(uint256 _ethAmount) view returns (uint256)",
      "function getTotalCollateral() view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function mint(uint256 _ethAmount, address _to)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function version() view returns (uint8)"
    ],
    "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6": [
      "constructor(string _name, string _symbol, address _endpoint, uint16 _mainEndpointId, uint256 _initialSupplyOnMainEndpoint)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(bool isPaused)",
      "event ReceiveFromChain(uint16 srcChainId, uint64 nonce, uint256 qty)",
      "event SendToChain(uint16 dstChainId, bytes to, uint256 qty)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function chainId() view returns (uint16)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function dstContractLookup(uint16) view returns (bytes)",
      "function endpoint() view returns (address)",
      "function estimateSendTokensFee(uint16 _dstChainId, bool _useZro, bytes txParameters) view returns (uint256 nativeFee, uint256 zroFee)",
      "function forceResumeReceive(uint16 _srcChainId, bytes _srcAddress)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function isMain() view returns (bool)",
      "function lzReceive(uint16 _srcChainId, bytes _fromAddress, uint64 nonce, bytes _payload)",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function pauseSendTokens(bool _pause)",
      "function paused() view returns (bool)",
      "function renounceOwnership()",
      "function sendTokens(uint16 _dstChainId, bytes _to, uint256 _qty, address zroPaymentAddress, bytes adapterParam) payable",
      "function setConfig(uint16 _version, uint16 _chainId, uint256 _configType, bytes _config)",
      "function setDestination(uint16 _dstChainId, bytes _destinationContractAddress)",
      "function setReceiveVersion(uint16 version)",
      "function setSendVersion(uint16 version)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27": [
      "constructor(address _singleton)"
    ],
    "0xb47CBF6697A6518222c7Af4098A43AEFe2739c8c": [
      "constructor(address _usde, uint256 _initialSupplyCap)",
      "error InvalidShortString()",
      "error SYInsufficientSharesOut(uint256 actualSharesOut, uint256 requiredSharesOut)",
      "error SYInsufficientTokenOut(uint256 actualTokenOut, uint256 requiredTokenOut)",
      "error SYInvalidTokenIn(address token)",
      "error SYInvalidTokenOut(address token)",
      "error SYZeroDeposit()",
      "error SYZeroRedeem()",
      "error StringTooLong(string str)",
      "error SupplyCapExceeded(uint256 totalSupply, uint256 supplyCap)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ClaimRewards(address indexed user, address[] rewardTokens, uint256[] rewardAmounts)",
      "event Deposit(address indexed caller, address indexed receiver, address indexed tokenIn, uint256 amountDeposited, uint256 amountSyOut)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Redeem(address indexed caller, address indexed receiver, address indexed tokenOut, uint256 amountSyToRedeem, uint256 amountTokenOut)",
      "event SupplyCapUpdated(uint256 newSupplyCap)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function accruedRewards(address) view returns (uint256[] rewardAmounts)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function assetInfo() view returns (uint8 assetType, address assetAddress, uint8 assetDecimals)",
      "function balanceOf(address account) view returns (uint256)",
      "function claimOwnership()",
      "function claimRewards(address) returns (uint256[] rewardAmounts)",
      "function decimals() view returns (uint8)",
      "function deposit(address receiver, address tokenIn, uint256 amountTokenToDeposit, uint256 minSharesOut) payable returns (uint256 amountSharesOut)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function exchangeRate() view returns (uint256 res)",
      "function getAbsoluteSupplyCap() view returns (uint256)",
      "function getAbsoluteTotalSupply() view returns (uint256)",
      "function getRewardTokens() view returns (address[] rewardTokens)",
      "function getTokensIn() view returns (address[] res)",
      "function getTokensOut() view returns (address[] res)",
      "function isValidTokenIn(address token) view returns (bool)",
      "function isValidTokenOut(address token) view returns (bool)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function previewDeposit(address tokenIn, uint256 amountTokenToDeposit) view returns (uint256 amountSharesOut)",
      "function previewRedeem(address tokenOut, uint256 amountSharesToRedeem) view returns (uint256 amountTokenOut)",
      "function redeem(address receiver, uint256 amountSharesToRedeem, address tokenOut, uint256 minTokenOut, bool burnFromInternalBalance) returns (uint256 amountTokenOut)",
      "function rewardIndexesCurrent() returns (uint256[] indexes)",
      "function rewardIndexesStored() view returns (uint256[] indexes)",
      "function supplyCap() view returns (uint256)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner, bool direct, bool renounce)",
      "function unpause()",
      "function updateSupplyCap(uint256 newSupplyCap)",
      "function yieldToken() view returns (address)"
    ],
    "0xb61e0E39b6d4030C36A176f576aaBE44BF59Dc78": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xb639D208Bcf0589D54FaC24E655C79EC529762B8": [
      "constructor(address ghoToken, address ghoTreasury, uint256 fee, address addressesProvider)",
      "event FeeUpdated(uint256 oldFee, uint256 newFee)",
      "event FeesDistributedToTreasury(address indexed ghoTreasury, address indexed asset, uint256 amount)",
      "event FlashMint(address indexed receiver, address indexed initiator, address asset, uint256 indexed amount, uint256 fee)",
      "event GhoTreasuryUpdated(address indexed oldGhoTreasury, address indexed newGhoTreasury)",
      "function ADDRESSES_PROVIDER() view returns (address)",
      "function CALLBACK_SUCCESS() view returns (bytes32)",
      "function GHO_TOKEN() view returns (address)",
      "function MAX_FEE() view returns (uint256)",
      "function distributeFeesToTreasury()",
      "function flashFee(address token, uint256 amount) view returns (uint256)",
      "function flashLoan(address receiver, address token, uint256 amount, bytes data) returns (bool)",
      "function getFee() view returns (uint256)",
      "function getGhoTreasury() view returns (address)",
      "function maxFlashLoan(address token) view returns (uint256)",
      "function updateFee(uint256 newFee)",
      "function updateGhoTreasury(address newGhoTreasury)"
    ],
    "0xb7E51D15161C49C823f3951D579DEd61cD27272B": [
      "constructor(address _SY, address _PT, string _name, string _symbol, uint8 __decimals, uint256 _expiry, bool _doCacheIndexSameBlock)",
      "error ArrayEmpty()",
      "error ArrayLengthMismatch()",
      "error YCExpired()",
      "error YCNoFloatingSy()",
      "error YCNotExpired()",
      "error YCNothingToRedeem()",
      "error YCPostExpiryDataNotSet()",
      "error YieldContractInsufficientSy(uint256 actualSy, uint256 requiredSy)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Burn(address indexed caller, address indexed receiver, uint256 amountPYToRedeem, uint256 amountSyOut)",
      "event CollectInterestFee(uint256 amountInterestFee)",
      "event CollectRewardFee(address indexed rewardToken, uint256 amountRewardFee)",
      "event Mint(address indexed caller, address indexed receiverPT, address indexed receiverYT, uint256 amountSyToMint, uint256 amountPYOut)",
      "event NewInterestIndex(uint256 indexed newIndex)",
      "event RedeemInterest(address indexed user, uint256 interestOut)",
      "event RedeemRewards(address indexed user, uint256[] amountRewardsOut)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function PT() view returns (address)",
      "function SY() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function doCacheIndexSameBlock() view returns (bool)",
      "function expiry() view returns (uint256)",
      "function factory() view returns (address)",
      "function getPostExpiryData() view returns (uint256 firstPYIndex, uint256 totalSyInterestForTreasury, uint256[] firstRewardIndexes, uint256[] userRewardOwed)",
      "function getRewardTokens() view returns (address[])",
      "function isExpired() view returns (bool)",
      "function mintPY(address receiverPT, address receiverYT) returns (uint256 amountPYOut)",
      "function mintPYMulti(address[] receiverPTs, address[] receiverYTs, uint256[] amountSyToMints) returns (uint256[] amountPYOuts)",
      "function name() view returns (string)",
      "function postExpiry() view returns (uint128 firstPYIndex, uint128 totalSyInterestForTreasury)",
      "function pyIndexCurrent() returns (uint256 currentIndex)",
      "function pyIndexLastUpdatedBlock() view returns (uint128)",
      "function pyIndexStored() view returns (uint256)",
      "function redeemDueInterestAndRewards(address user, bool redeemInterest, bool redeemRewards) returns (uint256 interestOut, uint256[] rewardsOut)",
      "function redeemInterestAndRewardsPostExpiryForTreasury() returns (uint256 interestOut, uint256[] rewardsOut)",
      "function redeemPY(address receiver) returns (uint256 amountSyOut)",
      "function redeemPYMulti(address[] receivers, uint256[] amountPYToRedeems) returns (uint256[] amountSyOuts)",
      "function rewardIndexesCurrent() returns (uint256[])",
      "function setPostExpiryData()",
      "function syReserve() view returns (uint256)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function userInterest(address) view returns (uint128 index, uint128 accrued)",
      "function userReward(address, address) view returns (uint128 index, uint128 accrued)"
    ],
    "0xba100000625a3754423978a60c9317c58a424e3D": [
      "constructor(string name, string symbol)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Snapshot(uint256 id)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function MINTER_ROLE() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function SNAPSHOT_ROLE() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function balanceOfAt(address account, uint256 snapshotId) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function snapshot()",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function totalSupplyAt(uint256 snapshotId) view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function version() view returns (string)"
    ],
    "0xBa6C6EaC41a24F9D39032513f66D738B3559f15a": [
      "constructor()",
      "function getDecimals() view returns (uint8)",
      "function getLatestPrice() view returns (int256)"
    ],
    "0xbae061C73876952aa2C5e483B74DfA785425f879": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704": [
      "constructor(address implementationContract)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address implementation)",
      "function admin() view returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() view returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xbee335BB44e75C4794a0b9B54E8027b111395943": [
      "constructor(address implementation, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "event Upgraded(address indexed implementation)"
    ],
    "0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F": [
      "function name() view returns (string)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function nominateNewOwner(address _owner)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function decimals() view returns (uint8)",
      "function nominatedOwner() view returns (address)",
      "function balanceOf(address owner) view returns (uint256)",
      "function setTarget(address _target)",
      "function acceptOwnership()",
      "function owner() view returns (address)",
      "function _emit(bytes callData, uint256 numTopics, bytes32 topic1, bytes32 topic2, bytes32 topic3, bytes32 topic4)",
      "function useDELEGATECALL() view returns (bool)",
      "function symbol() view returns (string)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function setUseDELEGATECALL(bool value)",
      "function target() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "constructor(address _owner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event TargetUpdated(address newTarget)",
      "event OwnerNominated(address newOwner)",
      "event OwnerChanged(address oldOwner, address newOwner)"
    ],
    "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2": [
      "function name() view returns (string)",
      "function approve(address guy, uint256 wad) returns (bool)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address src, address dst, uint256 wad) returns (bool)",
      "function withdraw(uint256 wad)",
      "function decimals() view returns (uint8)",
      "function balanceOf(address) view returns (uint256)",
      "function symbol() view returns (string)",
      "function transfer(address dst, uint256 wad) returns (bool)",
      "function deposit() payable",
      "function allowance(address, address) view returns (uint256)",
      "event Approval(address indexed src, address indexed guy, uint256 wad)",
      "event Transfer(address indexed src, address indexed dst, uint256 wad)",
      "event Deposit(address indexed dst, uint256 wad)",
      "event Withdrawal(address indexed src, uint256 wad)"
    ],
    "0xC139190F447e929f090Edeb554D95AbB8b18aC1C": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72": [
      "constructor(uint256 freeSupply, uint256 airdropSupply, uint256 _claimPeriodEnds)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Claim(address indexed claimant, uint256 amount)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event MerkleRootChanged(bytes32 merkleRoot)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function checkpoints(address account, uint32 pos) view returns (tuple(uint32 fromBlock, uint224 votes))",
      "function claimPeriodEnds() view returns (uint256)",
      "function claimTokens(uint256 amount, address delegate, bytes32[] merkleProof)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address account) view returns (address)",
      "function getPastTotalSupply(uint256 blockNumber) view returns (uint256)",
      "function getPastVotes(address account, uint256 blockNumber) view returns (uint256)",
      "function getVotes(address account) view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function isClaimed(uint256 index) view returns (bool)",
      "function merkleRoot() view returns (bytes32)",
      "function minimumMintInterval() view returns (uint256)",
      "function mint(address dest, uint256 amount)",
      "function mintCap() view returns (uint256)",
      "function name() view returns (string)",
      "function nextMint() view returns (uint256)",
      "function nonces(address owner) view returns (uint256)",
      "function numCheckpoints(address account) view returns (uint32)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceOwnership()",
      "function setMerkleRoot(bytes32 _merkleRoot)",
      "function sweep(address dest)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0xc2aaCf6553D20d1e9d78E365AAba8032af9c85b0": [
      "constructor(address provider)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function ADDRESSES_PROVIDER() view returns (address)",
      "function ASSET_LISTING_ADMIN_ROLE() view returns (bytes32)",
      "function BRIDGE_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EMERGENCY_ADMIN_ROLE() view returns (bytes32)",
      "function FLASH_BORROWER_ROLE() view returns (bytes32)",
      "function POOL_ADMIN_ROLE() view returns (bytes32)",
      "function RISK_ADMIN_ROLE() view returns (bytes32)",
      "function addAssetListingAdmin(address admin)",
      "function addBridge(address bridge)",
      "function addEmergencyAdmin(address admin)",
      "function addFlashBorrower(address borrower)",
      "function addPoolAdmin(address admin)",
      "function addRiskAdmin(address admin)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function isAssetListingAdmin(address admin) view returns (bool)",
      "function isBridge(address bridge) view returns (bool)",
      "function isEmergencyAdmin(address admin) view returns (bool)",
      "function isFlashBorrower(address borrower) view returns (bool)",
      "function isPoolAdmin(address admin) view returns (bool)",
      "function isRiskAdmin(address admin) view returns (bool)",
      "function removeAssetListingAdmin(address admin)",
      "function removeBridge(address bridge)",
      "function removeEmergencyAdmin(address admin)",
      "function removeFlashBorrower(address borrower)",
      "function removePoolAdmin(address admin)",
      "function removeRiskAdmin(address admin)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setRoleAdmin(bytes32 role, bytes32 adminRole)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0xC31d2362fAeD85dF79d0bec99693D0EB0Abd3f74": [
      "event UserEModeSet(address indexed user, uint8 categoryId)"
    ],
    "0xc4922d64a24675E16e1586e3e3Aa56C06fABe907": [
      "constructor(address _tokenController)",
      "event LocalTokenMessengerAdded(address localTokenMessenger)",
      "event LocalTokenMessengerRemoved(address localTokenMessenger)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RescuerChanged(address indexed newRescuer)",
      "event SetBurnLimitPerMessage(address indexed token, uint256 burnLimitPerMessage)",
      "event SetTokenController(address tokenController)",
      "event TokenPairLinked(address localToken, uint32 remoteDomain, bytes32 remoteToken)",
      "event TokenPairUnlinked(address localToken, uint32 remoteDomain, bytes32 remoteToken)",
      "event Unpause()",
      "function acceptOwnership()",
      "function addLocalTokenMessenger(address newLocalTokenMessenger)",
      "function burn(address burnToken, uint256 burnAmount)",
      "function burnLimitsPerMessage(address) view returns (uint256)",
      "function getLocalToken(uint32 remoteDomain, bytes32 remoteToken) view returns (address)",
      "function linkTokenPair(address localToken, uint32 remoteDomain, bytes32 remoteToken)",
      "function localTokenMessenger() view returns (address)",
      "function mint(uint32 sourceDomain, bytes32 burnToken, address to, uint256 amount) returns (address mintToken)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function remoteTokensToLocalTokens(bytes32) view returns (address)",
      "function removeLocalTokenMessenger()",
      "function rescueERC20(address tokenContract, address to, uint256 amount)",
      "function rescuer() view returns (address)",
      "function setMaxBurnAmountPerMessage(address localToken, uint256 burnLimitPerMessage)",
      "function setTokenController(address newTokenController)",
      "function tokenController() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unlinkTokenPair(address localToken, uint32 remoteDomain, bytes32 remoteToken)",
      "function unpause()",
      "function updatePauser(address _newPauser)",
      "function updateRescuer(address newRescuer)"
    ],
    "0xC5E2f85CB57350d3aE918d8B038f891f8ED6f6E5": [
      "constructor(address _owner, bytes32 _mainChain)",
      "error AddressEmptyCode(address target)",
      "error AddressInsufficientBalance(address account)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error EnforcedPause()",
      "error ExpectedPause()",
      "error FailedInnerCall()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error SafeERC20FailedOperation(address token)",
      "error UUPSUnauthorizedCallContext()",
      "error UUPSUnsupportedProxiableUUID(bytes32 slot)",
      "event DepositTxBlocked(bytes32 indexed _depositTxid, uint256 indexed _outputIndex)",
      "event DstChainAdded(bytes32 indexed _dstChain)",
      "event DstChainRemoved(bytes32 indexed _dstChain)",
      "event FeeModelSet(address indexed _feeModel)",
      "event FeePaid(address indexed _feeRecipient, uint256 indexed _feeAmount)",
      "event FeeRecipientSet(address indexed _feeRecipient)",
      "event Initialized(uint64 version)",
      "event MinterSet(address indexed _minter)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event QualifiedUserAdded(address indexed _user, string _depositAddress, string _withdrawalAddress)",
      "event QualifiedUserEdited(address indexed _user, string _depositAddress, string _withdrawalAddress)",
      "event QualifiedUserLocked(address indexed _user)",
      "event QualifiedUserRemoved(address indexed _user)",
      "event QualifiedUserUnlocked(address indexed _user)",
      "event RequestAdded(bytes32 indexed _hash, uint8 indexed op, tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra) _r)",
      "event RequestConfirmed(bytes32 indexed _hash)",
      "event TokenSet(address indexed _token)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function MAIN_CHAIN() view returns (bytes32)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function acceptOwnership()",
      "function addBurnRequest(uint256 _amount) returns (bytes32 _hash, tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra) _r)",
      "function addCrosschainRequest(bytes32 _targetChain, bytes _targetAddress, uint256 _amount) returns (bytes32 _hash, tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra) _r)",
      "function addDstChains(bytes32[] _dstChains)",
      "function addEVMCrosschainRequest(uint256 _targetChainId, address _targetAddress, uint256 _amount) returns (bytes32 _hash, tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra) _r)",
      "function addMintRequest(uint256 _amount, bytes32 _depositTxid, uint256 _outputIndex) returns (bytes32 _hash, tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra) _r)",
      "function addQualifiedUser(address _user, string _depositAddress, string _withdrawalAddress)",
      "function blockDepositTx(bytes32 _depositTxid, uint256 _outputIndex)",
      "function calculateRequestHash(tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra) _r) pure returns (bytes32 _hash)",
      "function chain() view returns (bytes32)",
      "function confirmBurnRequest(bytes32 _hash, bytes32 _withdrawalTxid, uint256 _outputIndex)",
      "function confirmCrosschainRequest(tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra) r)",
      "function confirmMintRequest(bytes32 _hash)",
      "function crosschainRequestConfirmation(bytes32 srcHash) view returns (bytes32 dstHash)",
      "function depositAddressToUser(string depositAddress) view returns (address qualifiedUser)",
      "function editQualifiedUser(address _user, string _depositAddress, string _withdrawalAddress)",
      "function fbtc() view returns (address)",
      "function feeModel() view returns (address)",
      "function feeRecipient() view returns (address)",
      "function getActiveUsers() view returns (address[] _users)",
      "function getQualifiedUserInfo(address _user) view returns (tuple(bool locked, string depositAddress, string withdrawalAddress) info)",
      "function getQualifiedUsers() view returns (address[])",
      "function getRequestByHash(bytes32 _hash) view returns (tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra) r)",
      "function getRequestById(uint256 _id) view returns (tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra) r)",
      "function getRequestsByHashes(bytes32[] _hashes) view returns (tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra)[] rs)",
      "function getRequestsByIdRange(uint256 _start, uint256 _end) view returns (tuple(uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra)[] rs)",
      "function getValidDstChains() view returns (bytes32[])",
      "function initialize(address _owner)",
      "function isActiveUser(address _user) view returns (bool)",
      "function isQualifiedUser(address _user) view returns (bool)",
      "function lockQualifiedUser(address _qualifiedUser)",
      "function minter() view returns (address)",
      "function nonce() view returns (uint128)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function removeDstChains(bytes32[] _dstChains)",
      "function removeQualifiedUser(address _qualifiedUser)",
      "function renounceOwnership()",
      "function requestHashes(uint256) view returns (bytes32)",
      "function requests(bytes32 _hash) view returns (uint8 op, uint8 status, uint128 nonce, bytes32 srcChain, bytes srcAddress, bytes32 dstChain, bytes dstAddress, uint256 amount, uint256 fee, bytes extra)",
      "function rescue(address token, address to)",
      "function setFeeModel(address _feeModel)",
      "function setFeeRecipient(address _feeRecipient)",
      "function setMinter(address _minter)",
      "function setToken(address _token)",
      "function transferOwnership(address newOwner)",
      "function unlockQualifiedUser(address _qualifiedUser)",
      "function unpause()",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function usedDepositTxs(bytes32 bytesHash) view returns (bytes32 requestHash)",
      "function usedWithdrawalTxs(bytes32 bytesHash) view returns (bytes32 requestHash)",
      "function userInfo(address qualifiedUser) view returns (bool locked, string depositAddress, string withdrawalAddress)"
    ],
    "0xc5f0b4194455e0C175ab68C501400e46C7203504": [
      "constructor(address _proxy, address _tokenState, address _owner, uint256 _totalSupply, address _resolver)",
      "event AccountLiquidated(address indexed account, uint256 snxRedeemed, uint256 amountLiquidated, address liquidator)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AtomicSynthExchange(address indexed account, bytes32 fromCurrencyKey, uint256 fromAmount, bytes32 toCurrencyKey, uint256 toAmount, address toAddress)",
      "event CacheUpdated(bytes32 name, address destination)",
      "event ExchangeRebate(address indexed account, bytes32 currencyKey, uint256 amount)",
      "event ExchangeReclaim(address indexed account, bytes32 currencyKey, uint256 amount)",
      "event ExchangeTracking(bytes32 indexed trackingCode, bytes32 toCurrencyKey, uint256 toAmount, uint256 fee)",
      "event OwnerChanged(address oldOwner, address newOwner)",
      "event OwnerNominated(address newOwner)",
      "event ProxyUpdated(address proxyAddress)",
      "event SynthExchange(address indexed account, bytes32 fromCurrencyKey, uint256 fromAmount, bytes32 toCurrencyKey, uint256 toAmount, address toAddress)",
      "event TokenStateUpdated(address newTokenState)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function CONTRACT_NAME() view returns (bytes32)",
      "function DECIMALS() view returns (uint8)",
      "function TOKEN_NAME() view returns (string)",
      "function TOKEN_SYMBOL() view returns (string)",
      "function acceptOwnership()",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function anySynthOrSNXRateIsInvalid() view returns (bool anyRateInvalid)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function availableCurrencyKeys() view returns (bytes32[])",
      "function availableSynthCount() view returns (uint256)",
      "function availableSynths(uint256 index) view returns (address)",
      "function balanceOf(address account) view returns (uint256)",
      "function burnSecondary(address, uint256)",
      "function burnSynths(uint256 amount)",
      "function burnSynthsOnBehalf(address burnForAddress, uint256 amount)",
      "function burnSynthsToTarget()",
      "function burnSynthsToTargetOnBehalf(address burnForAddress)",
      "function collateral(address account) view returns (uint256)",
      "function collateralisationRatio(address _issuer) view returns (uint256)",
      "function debtBalanceOf(address account, bytes32 currencyKey) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function emitAtomicSynthExchange(address account, bytes32 fromCurrencyKey, uint256 fromAmount, bytes32 toCurrencyKey, uint256 toAmount, address toAddress)",
      "function emitExchangeRebate(address account, bytes32 currencyKey, uint256 amount)",
      "function emitExchangeReclaim(address account, bytes32 currencyKey, uint256 amount)",
      "function emitExchangeTracking(bytes32 trackingCode, bytes32 toCurrencyKey, uint256 toAmount, uint256 fee)",
      "function emitSynthExchange(address account, bytes32 fromCurrencyKey, uint256 fromAmount, bytes32 toCurrencyKey, uint256 toAmount, address toAddress)",
      "function exchange(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey) returns (uint256 amountReceived)",
      "function exchangeAtomically(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, bytes32 trackingCode, uint256 minAmount) returns (uint256 amountReceived)",
      "function exchangeOnBehalf(address exchangeForAddress, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey) returns (uint256 amountReceived)",
      "function exchangeOnBehalfWithTracking(address exchangeForAddress, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, address rewardAddress, bytes32 trackingCode) returns (uint256 amountReceived)",
      "function exchangeWithTracking(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, address rewardAddress, bytes32 trackingCode) returns (uint256 amountReceived)",
      "function exchangeWithTrackingForInitiator(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, address rewardAddress, bytes32 trackingCode) returns (uint256 amountReceived)",
      "function exchangeWithVirtual(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, bytes32 trackingCode) returns (uint256 amountReceived, address vSynth)",
      "function getFirstNonZeroEscrowIndex(address account) view returns (uint256)",
      "function isResolverCached() view returns (bool)",
      "function isWaitingPeriod(bytes32 currencyKey) view returns (bool)",
      "function issueMaxSynths()",
      "function issueMaxSynthsOnBehalf(address issueForAddress)",
      "function issueSynths(uint256 amount)",
      "function issueSynthsOnBehalf(address issueForAddress, uint256 amount)",
      "function liquidateDelinquentAccount(address account) returns (bool)",
      "function liquidateDelinquentAccountEscrowIndex(address account, uint256 escrowStartIndex) returns (bool)",
      "function liquidateSelf() returns (bool)",
      "function maxIssuableSynths(address account) view returns (uint256 maxIssuable)",
      "function messageSender() view returns (address)",
      "function migrateAccountBalances(address account) returns (uint256 totalEscrowRevoked, uint256 totalLiquidBalance)",
      "function migrateEscrowBalanceToRewardEscrowV2()",
      "function migrateEscrowContractBalance()",
      "function mint() returns (bool)",
      "function mintSecondary(address, uint256)",
      "function mintSecondaryRewards(uint256)",
      "function name() view returns (string)",
      "function nominateNewOwner(address _owner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function proxy() view returns (address)",
      "function rebuildCache()",
      "function remainingIssuableSynths(address account) view returns (uint256 maxIssuable, uint256 alreadyIssued, uint256 totalSystemDebt)",
      "function resolver() view returns (address)",
      "function resolverAddressesRequired() view returns (bytes32[] addresses)",
      "function sUSD() view returns (bytes32)",
      "function setMessageSender(address sender)",
      "function setProxy(address _proxy)",
      "function setTokenState(address _tokenState)",
      "function settle(bytes32 currencyKey) returns (uint256 reclaimed, uint256 refunded, uint256 numEntriesSettled)",
      "function symbol() view returns (string)",
      "function synths(bytes32 currencyKey) view returns (address)",
      "function synthsByAddress(address synthAddress) view returns (bytes32)",
      "function tokenState() view returns (address)",
      "function totalIssuedSynths(bytes32 currencyKey) view returns (uint256)",
      "function totalIssuedSynthsExcludeOtherCollateral(bytes32 currencyKey) view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferableSynthetix(address account) view returns (uint256 transferable)"
    ],
    "0xC6CDE7C39eB2f0F0095F41570af89eFC2C1Ea828": [
      "function owners(uint256) view returns (address)",
      "function removeOwner(address owner)",
      "function revokeConfirmation(uint256 transactionId)",
      "function isOwner(address) view returns (bool)",
      "function confirmations(uint256, address) view returns (bool)",
      "function getTransactionCount(bool pending, bool executed) view returns (uint256 count)",
      "function addOwner(address owner)",
      "function isConfirmed(uint256 transactionId) view returns (bool)",
      "function getConfirmationCount(uint256 transactionId) view returns (uint256 count)",
      "function transactions(uint256) view returns (address destination, uint256 value, bytes data, bool executed)",
      "function getOwners() view returns (address[])",
      "function getTransactionIds(uint256 from, uint256 to, bool pending, bool executed) view returns (uint256[] _transactionIds)",
      "function getConfirmations(uint256 transactionId) view returns (address[] _confirmations)",
      "function transactionCount() view returns (uint256)",
      "function changeRequirement(uint256 _required)",
      "function confirmTransaction(uint256 transactionId)",
      "function submitTransaction(address destination, uint256 value, bytes data) returns (uint256 transactionId)",
      "function MAX_OWNER_COUNT() view returns (uint256)",
      "function required() view returns (uint256)",
      "function replaceOwner(address owner, address newOwner)",
      "function executeTransaction(uint256 transactionId)",
      "constructor(address[] _owners, uint256 _required)",
      "event Confirmation(address indexed sender, uint256 indexed transactionId)",
      "event Revocation(address indexed sender, uint256 indexed transactionId)",
      "event Submission(uint256 indexed transactionId)",
      "event Execution(uint256 indexed transactionId)",
      "event ExecutionFailure(uint256 indexed transactionId)",
      "event Deposit(address indexed sender, uint256 value)",
      "event OwnerAddition(address indexed owner)",
      "event OwnerRemoval(address indexed owner)",
      "event RequirementChange(uint256 required)"
    ],
    "0xc718786A7E45353835De634897385b3371A749f0": [
      "constructor(address poolAddressesProvider, address collector, address gho)",
      "error InvalidAToken()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error OnlyGuardianInvalidCaller(address account)",
      "error OnlyGuardianOrOwnerInvalidCaller(address account)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error SafeERC20FailedOperation(address token)",
      "event GuardianUpdated(address oldGuardian, address newGuardian)",
      "event Initialized(uint64 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function COLLECTOR() view returns (address)",
      "function GHO() view returns (address)",
      "function GHO_A_TOKEN() view returns (address)",
      "function POOL() view returns (address)",
      "function POOL_CONFIGURATOR() view returns (address)",
      "function guardian() view returns (address)",
      "function initialize(address owner, address council)",
      "function mintAndSupply(uint256 amount)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferExcessToTreasury()",
      "function transferOwnership(address newOwner)",
      "function updateGuardian(address newGuardian)",
      "function withdrawAndBurn(uint256 amount)"
    ],
    "0xc750eCAC7250E0D18ecE2C7a5F130E3A765dc260": [
      "constructor(address aDefaultAdmin, address aPauser, address aDepositReporter, address aWithdrawalValidator, uint256 aMaxDeposits)",
      "error AccessControlBadConfirmation()",
      "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
      "error AccessControlEnforcedDefaultAdminRules()",
      "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error AlreadyReported(bytes32 depositID)",
      "error AlreadyWithdrawn(bytes32 depositID, uint256 withdrawalAmount)",
      "error BadDepositReport()",
      "error EnforcedPause()",
      "error ExpectedPause()",
      "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
      "error SameValidationThreshold()",
      "error WithdrawalFailedValidation(bytes32 depositID, uint256 withdrawalAmount)",
      "event DefaultAdminDelayChangeCanceled()",
      "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
      "event DefaultAdminTransferCanceled()",
      "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
      "event DepositsReported(bytes32 indexed reportId, uint256 numDeposits)",
      "event MaxDepositsUpdated(uint256 numDeposits)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Unpaused(address account)",
      "event UpdateValidateThreshold(uint256 oldThreshold, uint256 newThreshold)",
      "event WithdrawalNotValidated(bytes32 depositID, uint256 withdrawalAmount)",
      "event WithdrawalValidated(bytes32 depositID, uint256 withdrawalAmount)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSIT_REPORTER_ROLE() view returns (bytes32)",
      "function PAUSER_ROLE() view returns (bytes32)",
      "function VALIDATION_GUARDIAN_ROLE() view returns (bytes32)",
      "function WITHDRAWAL_VALIDATOR_ROLE() view returns (bytes32)",
      "function acceptDefaultAdminTransfer()",
      "function beginDefaultAdminTransfer(address newAdmin)",
      "function cancelDefaultAdminTransfer()",
      "function changeDefaultAdminDelay(uint48 newDelay)",
      "function defaultAdmin() view returns (address)",
      "function defaultAdminDelay() view returns (uint48)",
      "function defaultAdminDelayIncreaseWait() view returns (uint48)",
      "function depositHistory(bytes32 depositID) view returns (uint8 status)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function maxDeposits() view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
      "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
      "function renounceRole(bytes32 role, address account)",
      "function reportDeposits(bytes32 reportId, bytes32[] depositIDs)",
      "function revokeRole(bytes32 role, address account)",
      "function rollbackDefaultAdminDelay()",
      "function setMaxDeposits(uint256 aMaxDeposits)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unpause()",
      "function updateValidateThreshold(uint256 newThreshold)",
      "function validateThreshold() view returns (uint256)",
      "function validateWithdrawal(bytes32 depositID, uint256 withdrawalAmount)"
    ],
    "0xC9332fdCB1C491Dcc683bAe86Fe3cb70360738BC": [
      "event AddMarket(address indexed collateral, address controller, address amm, address monetary_policy, uint256 ix)",
      "event SetDebtCeiling(address indexed addr, uint256 debt_ceiling)",
      "event MintForMarket(address indexed addr, uint256 amount)",
      "event RemoveFromMarket(address indexed addr, uint256 amount)",
      "event SetImplementations(address amm, address controller)",
      "event SetAdmin(address admin)",
      "event SetFeeReceiver(address fee_receiver)",
      "constructor(address stablecoin, address admin, address fee_receiver, address weth)",
      "function stablecoin() view returns (address)",
      "function add_market(address token, uint256 A, uint256 fee, uint256 admin_fee, address _price_oracle_contract, address monetary_policy, uint256 loan_discount, uint256 liquidation_discount, uint256 debt_ceiling) returns (address[2])",
      "function total_debt() view returns (uint256)",
      "function get_controller(address collateral) view returns (address)",
      "function get_controller(address collateral, uint256 i) view returns (address)",
      "function get_amm(address collateral) view returns (address)",
      "function get_amm(address collateral, uint256 i) view returns (address)",
      "function set_implementations(address controller, address amm)",
      "function set_admin(address admin)",
      "function set_fee_receiver(address fee_receiver)",
      "function set_debt_ceiling(address _to, uint256 debt_ceiling)",
      "function rug_debt_ceiling(address _to)",
      "function collect_fees_above_ceiling(address _to)",
      "function controllers(uint256 arg0) view returns (address)",
      "function amms(uint256 arg0) view returns (address)",
      "function admin() view returns (address)",
      "function fee_receiver() view returns (address)",
      "function controller_implementation() view returns (address)",
      "function amm_implementation() view returns (address)",
      "function n_collaterals() view returns (uint256)",
      "function collaterals(uint256 arg0) view returns (address)",
      "function collaterals_index(address arg0, uint256 arg1) view returns (uint256)",
      "function debt_ceiling(address arg0) view returns (uint256)",
      "function debt_ceiling_residual(address arg0) view returns (uint256)",
      "function WETH() view returns (address)"
    ],
    "0xC96dE26018A54D51c097160568752c4E3BD6C364": [
      "constructor(address _owner, address _bridge)",
      "error AddressEmptyCode(address target)",
      "error AddressInsufficientBalance(address account)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error EnforcedPause()",
      "error ExpectedPause()",
      "error FailedInnerCall()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error SafeERC20FailedOperation(address token)",
      "error UUPSUnauthorizedCallContext()",
      "error UUPSUnsupportedProxiableUUID(bytes32 slot)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BridgeUpdated(address indexed newBridge, address indexed oldBridge)",
      "event Initialized(uint64 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "event UserLocked(address indexed user)",
      "event UserUnlocked(address indexed user)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function acceptOwnership()",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function bridge() view returns (address)",
      "function burn(address from, uint256 amount)",
      "function decimals() pure returns (uint8)",
      "function initialize(address _owner, address _bridge)",
      "function lockUser(address _user)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function payFee(address payer, address feeRecipient, uint256 amount)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function rescue(address token, address to)",
      "function setBridge(address _bridge)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unlockUser(address _user)",
      "function unpause()",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function userBlocked(address user) view returns (bool blocked)"
    ],
    "0xCA06411bd7a7296d7dbdd0050DFc846E95fEBEB7": [
      "function reclaimToken(address _token)",
      "function isMerchant(address addr) view returns (bool)",
      "function callClaimOwnership(address contractToOwn) returns (bool)",
      "function isCustodian(address addr) view returns (bool)",
      "function unpause() returns (bool)",
      "function mint(address to, uint256 amount) returns (bool)",
      "function burn(uint256 value) returns (bool)",
      "function callReclaimToken(address ownedContract, address _token) returns (bool)",
      "function claimOwnership()",
      "function setFactory(address _factory) returns (bool)",
      "function getWBTC() view returns (address)",
      "function renounceOwnership()",
      "function pause() returns (bool)",
      "function owner() view returns (address)",
      "function members() view returns (address)",
      "function factory() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function callTransferOwnership(address ownedContract, address newOwner) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function setMembers(address _members) returns (bool)",
      "function token() view returns (address)",
      "constructor(address _token)",
      "event MembersSet(address indexed members)",
      "event FactorySet(address indexed factory)",
      "event Paused()",
      "event Unpaused()",
      "event CalledTransferOwnership(address ownedContract, address newOwner)",
      "event CalledClaimOwnership(address contractToOwn)",
      "event CalledReclaimToken(address ownedContract, address _token)",
      "event OwnershipRenounced(address indexed previousOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)"
    ],
    "0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf": [
      "constructor(address implementationContract)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address implementation)",
      "function admin() view returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() view returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee": [
      "constructor(address _implementation, bytes _data)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xCfd748B9De538c9f5b1805e8db9e1d4671f7F2ec": [
      "constructor()",
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error AccountIsNotPaused(address account)",
      "error AccountIsPaused(address account)",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error EnforcedPause()",
      "error ExpectedPause()",
      "error FailedInnerCall()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error UUPSUnauthorizedCallContext()",
      "error UUPSUnsupportedProxiableUUID(bytes32 slot)",
      "event AccountPaused(address account)",
      "event AccountUnpaused(address account)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint64 version)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function BURNER_ROLE() view returns (bytes32)",
      "function CLAWBACKER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function MINTER_ROLE() view returns (bytes32)",
      "function PAUSER_ROLE() view returns (bytes32)",
      "function UPGRADER_ROLE() view returns (bytes32)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function accountPaused(address account) view returns (bool)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 value)",
      "function clawback(address from, uint256 value)",
      "function decimals() view returns (uint8)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(string name_, string symbol_, address minter_, address admin_, address upgrader_, address pauser_, address clawbacker_)",
      "function mint(address to, uint256 value)",
      "function name() view returns (string)",
      "function pause()",
      "function pauseAccounts(address[] accounts)",
      "function paused() view returns (bool)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function unpause()",
      "function unpauseAccount(address account)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd061D61a4d941c39E5453435B6345Dc261C2fcE0": [
      "event Minted(address indexed recipient, address gauge, uint256 minted)",
      "constructor(address _token, address _controller)",
      "function mint(address gauge_addr) @100038",
      "function mint_many(address[8] gauge_addrs) @408502",
      "function mint_for(address gauge_addr, address _for) @101219",
      "function toggle_approve_mint(address minting_user) @36726",
      "function token() view returns (address) @1301",
      "function controller() view returns (address) @1331",
      "function minted(address arg0, address arg1) view returns (uint256) @1669",
      "function allowed_to_mint_for(address arg0, address arg1) view returns (bool) @1699"
    ],
    "0xD33526068D116cE69F19A9ee46F0bd304F21A51f": [
      "constructor(address _rocketStorageAddress, address _rocketTokenRPLFixedSupplyAddress)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event RPLFixedSupplyBurn(address indexed from, uint256 amount, uint256 time)",
      "event RPLInflationLog(address sender, uint256 value, uint256 inflationCalcTime)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function getInflationCalcTime() view returns (uint256)",
      "function getInflationIntervalRate() view returns (uint256)",
      "function getInflationIntervalStartTime() view returns (uint256)",
      "function getInflationIntervalTime() pure returns (uint256)",
      "function getInflationIntervalsPassed() view returns (uint256)",
      "function getInflationRewardsContractAddress() view returns (address)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function inflationCalculate() view returns (uint256)",
      "function inflationMintTokens() returns (uint256)",
      "function name() view returns (string)",
      "function swapTokens(uint256 _amount)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function totalSwappedRPL() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function version() view returns (uint8)"
    ],
    "0xD533a949740bb3306d119CC777fa900bA034cd52": [
      "event Transfer(address indexed _from, address indexed _to, uint256 _value)",
      "event Approval(address indexed _owner, address indexed _spender, uint256 _value)",
      "event UpdateMiningParameters(uint256 time, uint256 rate, uint256 supply)",
      "event SetMinter(address minter)",
      "event SetAdmin(address admin)",
      "constructor(string _name, string _symbol, uint256 _decimals)",
      "function update_mining_parameters() @148748",
      "function start_epoch_time_write() returns (uint256) @149603",
      "function future_epoch_time_write() returns (uint256) @149806",
      "function available_supply() view returns (uint256) @4018",
      "function mintable_in_timeframe(uint256 start, uint256 end) view returns (uint256) @2216141",
      "function set_minter(address _minter) @38698",
      "function set_admin(address _admin) @37837",
      "function totalSupply() view returns (uint256) @1421",
      "function allowance(address _owner, address _spender) view returns (uint256) @1759",
      "function transfer(address _to, uint256 _value) returns (bool) @75139",
      "function transferFrom(address _from, address _to, uint256 _value) returns (bool) @111433",
      "function approve(address _spender, uint256 _value) returns (bool) @39288",
      "function mint(address _to, uint256 _value) returns (bool) @228030",
      "function burn(uint256 _value) returns (bool) @74999",
      "function set_name(string _name, string _symbol) @178270",
      "function name() view returns (string) @8063",
      "function symbol() view returns (string) @7116",
      "function decimals() view returns (uint256) @1721",
      "function balanceOf(address arg0) view returns (uint256) @1905",
      "function minter() view returns (address) @1781",
      "function admin() view returns (address) @1811",
      "function mining_epoch() view returns (int128) @1841",
      "function start_epoch_time() view returns (uint256) @1871",
      "function rate() view returns (uint256) @1901"
    ],
    "0xD5bc4bc0d8c055fCF2Ba97010c9D32FFc7d424d9": [
      "constructor(address _singleton)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdAC17F958D2ee523a2206206994597C13D831ec7": [
      "function name() view returns (string)",
      "function deprecate(address _upgradedAddress)",
      "function approve(address _spender, uint256 _value)",
      "function deprecated() view returns (bool)",
      "function addBlackList(address _evilUser)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address _from, address _to, uint256 _value)",
      "function upgradedAddress() view returns (address)",
      "function balances(address) view returns (uint256)",
      "function decimals() view returns (uint256)",
      "function maximumFee() view returns (uint256)",
      "function _totalSupply() view returns (uint256)",
      "function unpause()",
      "function getBlackListStatus(address _maker) view returns (bool)",
      "function allowed(address, address) view returns (uint256)",
      "function paused() view returns (bool)",
      "function balanceOf(address who) view returns (uint256)",
      "function pause()",
      "function getOwner() view returns (address)",
      "function owner() view returns (address)",
      "function symbol() view returns (string)",
      "function transfer(address _to, uint256 _value)",
      "function setParams(uint256 newBasisPoints, uint256 newMaxFee)",
      "function issue(uint256 amount)",
      "function redeem(uint256 amount)",
      "function allowance(address _owner, address _spender) view returns (uint256 remaining)",
      "function basisPointsRate() view returns (uint256)",
      "function isBlackListed(address) view returns (bool)",
      "function removeBlackList(address _clearedUser)",
      "function MAX_UINT() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function destroyBlackFunds(address _blackListedUser)",
      "constructor(uint256 _initialSupply, string _name, string _symbol, uint256 _decimals)",
      "event Issue(uint256 amount)",
      "event Redeem(uint256 amount)",
      "event Deprecate(address newAddress)",
      "event Params(uint256 feeBasisPoints, uint256 maxFee)",
      "event DestroyedBlackFunds(address _blackListedUser, uint256 _balance)",
      "event AddedBlackList(address _user)",
      "event RemovedBlackList(address _user)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Pause()",
      "event Unpause()"
    ],
    "0xdad58DfA5c1a7a34419AFdBE1f0d610efeea95E4": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xdC035D45d973E3EC169d2276DDab16f1e407384F": [
      "constructor(address implementation, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "event Upgraded(address indexed implementation)"
    ],
    "0xdd974D5C2e2928deA5F71b9825b8b646686BD200": [
      "function name() view returns (string)",
      "function approve(address _spender, uint256 _value) returns (bool)",
      "function totalSupply() view returns (uint256)",
      "function saleStartTime() view returns (uint256)",
      "function transferFrom(address _from, address _to, uint256 _value) returns (bool)",
      "function decimals() view returns (uint256)",
      "function burn(uint256 _value) returns (bool)",
      "function tokenSaleContract() view returns (address)",
      "function balanceOf(address _owner) view returns (uint256 balance)",
      "function burnFrom(address _from, uint256 _value) returns (bool)",
      "function owner() view returns (address)",
      "function symbol() view returns (string)",
      "function transfer(address _to, uint256 _value) returns (bool)",
      "function emergencyERC20Drain(address token, uint256 amount)",
      "function allowance(address _owner, address _spender) view returns (uint256 remaining)",
      "function saleEndTime() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "constructor(uint256 tokenTotalAmount, uint256 startTime, uint256 endTime, address admin)",
      "event Burn(address indexed _burner, uint256 _value)",
      "event Approval(address indexed _owner, address indexed _spender, uint256 _value)",
      "event Transfer(address indexed _from, address indexed _to, uint256 _value)"
    ],
    "0xde3A93028F2283cc28756B3674BD657eaFB992f4": [
      "function hasInitialized() view returns (bool)",
      "function MAX_VESTINGS_PER_ADDRESS() view returns (uint256)",
      "function spendableBalanceOf(address _holder) view returns (uint256)",
      "function assignVested(address _receiver, uint256 _amount, uint64 _start, uint64 _cliff, uint64 _vested, bool _revokable) returns (uint256)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function getVesting(address _recipient, uint256 _vestingId) view returns (uint256 amount, uint64 start, uint64 cliff, uint64 vesting, bool revokable)",
      "function mint(address _receiver, uint256 _amount)",
      "function onTransfer(address _from, address _to, uint256 _amount) returns (bool)",
      "function transferableBalance(address _holder, uint256 _time) view returns (uint256)",
      "function allowRecoverability(address _token) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function ISSUE_ROLE() view returns (bytes32)",
      "function getInitializationBlock() view returns (uint256)",
      "function vestingsLengths(address) view returns (uint256)",
      "function transferToVault(address _token)",
      "function burn(address _holder, uint256 _amount)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function ASSIGN_ROLE() view returns (bytes32)",
      "function BURN_ROLE() view returns (bytes32)",
      "function assign(address _receiver, uint256 _amount)",
      "function canForward(address _sender, bytes) view returns (bool)",
      "function issue(uint256 _amount)",
      "function kernel() view returns (address)",
      "function forward(bytes _evmScript)",
      "function onApprove(address, address, uint256) returns (bool)",
      "function isPetrified() view returns (bool)",
      "function initialize(address _token, bool _transferable, uint256 _maxAccountTokens)",
      "function MINT_ROLE() view returns (bytes32)",
      "function maxAccountTokens() view returns (uint256)",
      "function REVOKE_VESTINGS_ROLE() view returns (bytes32)",
      "function proxyPayment(address) payable returns (bool)",
      "function revokeVesting(address _holder, uint256 _vestingId)",
      "function token() view returns (address)",
      "function isForwarder() pure returns (bool)",
      "event NewVesting(address indexed receiver, uint256 vestingId, uint256 amount)",
      "event RevokeVesting(address indexed receiver, uint256 vestingId, uint256 nonVestedAmount)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)"
    ],
    "0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202": [
      "constructor(address _logic, address _admin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xE25a329d385f77df5D4eD56265babe2b99A5436e": [
      "constructor(uint256 threshold_, address[] owners_, uint256 chainId)",
      "function execute(uint8[] sigV, bytes32[] sigR, bytes32[] sigS, address destination, uint256 value, bytes data, address executor, uint256 gasLimit)",
      "function nonce() view returns (uint256)",
      "function owners() view returns (address[])",
      "function ownersArr(uint256) view returns (address)",
      "function setOwners(uint256 threshold_, address[] owners_)",
      "function threshold() view returns (uint256)"
    ],
    "0xe3490297a08d6fC8Da46Edb7B6142E4F461b62D3": [
      "constructor(address _usde, address _weth, address[] _assets, tuple(uint8 tokenType, bool isActive, uint128 maxMintPerBlock, uint128 maxRedeemPerBlock)[] _tokenConfig, tuple(uint128 globalMaxMintPerBlock, uint128 globalMaxRedeemPerBlock) _globalConfig, address[] _custodians, address _admin)",
      "error BenefactorNotWhitelisted()",
      "error BeneficiaryNotApproved()",
      "error DelegationNotInitiated()",
      "error GlobalMaxMintPerBlockExceeded()",
      "error GlobalMaxRedeemPerBlockExceeded()",
      "error InvalidAddress()",
      "error InvalidAdminChange()",
      "error InvalidAmount()",
      "error InvalidAssetAddress()",
      "error InvalidBenefactorAddress()",
      "error InvalidBeneficiaryAddress()",
      "error InvalidCustodianAddress()",
      "error InvalidEIP1271Signature()",
      "error InvalidEIP712Signature()",
      "error InvalidNonce()",
      "error InvalidOrder()",
      "error InvalidRoute()",
      "error InvalidStablePrice()",
      "error InvalidUSDeAddress()",
      "error InvalidZeroAddress()",
      "error MaxMintPerBlockExceeded()",
      "error MaxRedeemPerBlockExceeded()",
      "error NoAssetsProvided()",
      "error NotPendingAdmin()",
      "error SignatureExpired()",
      "error TransferFailed()",
      "error UnknownSignatureType()",
      "error UnsupportedAsset()",
      "event AdminTransferRequested(address indexed oldAdmin, address indexed newAdmin)",
      "event AdminTransferred(address indexed oldAdmin, address indexed newAdmin)",
      "event AssetAdded(address indexed asset)",
      "event AssetRemoved(address indexed asset)",
      "event BenefactorAdded(address indexed benefactor)",
      "event BenefactorRemoved(address indexed benefactor)",
      "event BeneficiaryAdded(address indexed benefactor, address indexed beneficiary)",
      "event BeneficiaryRemoved(address indexed benefactor, address indexed beneficiary)",
      "event CustodianAddressAdded(address indexed custodian)",
      "event CustodianAddressRemoved(address indexed custodian)",
      "event CustodyTransfer(address indexed wallet, address indexed asset, uint256 amount)",
      "event DelegatedSignerAdded(address indexed signer, address indexed delegator)",
      "event DelegatedSignerInitiated(address indexed signer, address indexed delegator)",
      "event DelegatedSignerRemoved(address indexed signer, address indexed delegator)",
      "event MaxMintPerBlockChanged(uint256 oldMaxMintPerBlock, uint256 newMaxMintPerBlock, address indexed asset)",
      "event MaxRedeemPerBlockChanged(uint256 oldMaxRedeemPerBlock, uint256 newMaxRedeemPerBlock, address indexed asset)",
      "event Mint(string indexed order_id, address indexed benefactor, address indexed beneficiary, address minter, address collateral_asset, uint256 collateral_amount, uint256 usde_amount)",
      "event Received(address, uint256)",
      "event Redeem(string indexed order_id, address indexed benefactor, address indexed beneficiary, address redeemer, address collateral_asset, uint256 collateral_amount, uint256 usde_amount)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event TokenTypeSet(address indexed token, uint256 tokenType)",
      "event USDeSet(address indexed USDe)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function acceptAdmin()",
      "function addCustodianAddress(address custodian)",
      "function addSupportedAsset(address asset, tuple(uint8 tokenType, bool isActive, uint128 maxMintPerBlock, uint128 maxRedeemPerBlock) _tokenConfig)",
      "function addWhitelistedBenefactor(address benefactor)",
      "function confirmDelegatedSigner(address _delegatedBy)",
      "function delegatedSigner(address, address) view returns (uint8)",
      "function disableMintRedeem()",
      "function encodeOrder(tuple(string order_id, uint8 order_type, uint120 expiry, uint128 nonce, address benefactor, address beneficiary, address collateral_asset, uint128 collateral_amount, uint128 usde_amount) order) pure returns (bytes)",
      "function getDomainSeparator() view returns (bytes32)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function globalConfig() view returns (uint128 globalMaxMintPerBlock, uint128 globalMaxRedeemPerBlock)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOrder(tuple(string order_id, uint8 order_type, uint120 expiry, uint128 nonce, address benefactor, address beneficiary, address collateral_asset, uint128 collateral_amount, uint128 usde_amount) order) view returns (bytes32)",
      "function isApprovedBeneficiary(address benefactor, address beneficiary) view returns (bool)",
      "function isCustodianAddress(address custodian) view returns (bool)",
      "function isSupportedAsset(address asset) view returns (bool)",
      "function isWhitelistedBenefactor(address benefactor) view returns (bool)",
      "function mint(tuple(string order_id, uint8 order_type, uint120 expiry, uint128 nonce, address benefactor, address beneficiary, address collateral_asset, uint128 collateral_amount, uint128 usde_amount) order, tuple(address[] addresses, uint128[] ratios) route, tuple(uint8 signature_type, bytes signature_bytes) signature)",
      "function mintWETH(tuple(string order_id, uint8 order_type, uint120 expiry, uint128 nonce, address benefactor, address beneficiary, address collateral_asset, uint128 collateral_amount, uint128 usde_amount) order, tuple(address[] addresses, uint128[] ratios) route, tuple(uint8 signature_type, bytes signature_bytes) signature)",
      "function owner() view returns (address)",
      "function redeem(tuple(string order_id, uint8 order_type, uint120 expiry, uint128 nonce, address benefactor, address beneficiary, address collateral_asset, uint128 collateral_amount, uint128 usde_amount) order, tuple(uint8 signature_type, bytes signature_bytes) signature)",
      "function removeCollateralManagerRole(address collateralManager)",
      "function removeCustodianAddress(address custodian)",
      "function removeDelegatedSigner(address _removedSigner)",
      "function removeMinterRole(address minter)",
      "function removeRedeemerRole(address redeemer)",
      "function removeSupportedAsset(address asset)",
      "function removeWhitelistedBenefactor(address benefactor)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setApprovedBeneficiary(address beneficiary, bool status)",
      "function setDelegatedSigner(address _delegateTo)",
      "function setGlobalMaxMintPerBlock(uint128 _globalMaxMintPerBlock)",
      "function setGlobalMaxRedeemPerBlock(uint128 _globalMaxRedeemPerBlock)",
      "function setMaxMintPerBlock(uint128 _maxMintPerBlock, address asset)",
      "function setMaxRedeemPerBlock(uint128 _maxRedeemPerBlock, address asset)",
      "function setStablesDeltaLimit(uint128 _stablesDeltaLimit)",
      "function setTokenType(address asset, uint8 tokenType)",
      "function stablesDeltaLimit() view returns (uint128)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function tokenConfig(address) view returns (uint8 tokenType, bool isActive, uint128 maxMintPerBlock, uint128 maxRedeemPerBlock)",
      "function totalPerBlock(uint256) view returns (uint128 mintedPerBlock, uint128 redeemedPerBlock)",
      "function totalPerBlockPerAsset(uint256, address) view returns (uint128 mintedPerBlock, uint128 redeemedPerBlock)",
      "function transferAdmin(address newAdmin)",
      "function transferToCustody(address wallet, address asset, uint128 amount)",
      "function usde() view returns (address)",
      "function verifyNonce(address sender, uint128 nonce) view returns (uint128, uint256, uint256)",
      "function verifyOrder(tuple(string order_id, uint8 order_type, uint120 expiry, uint128 nonce, address benefactor, address beneficiary, address collateral_asset, uint128 collateral_amount, uint128 usde_amount) order, tuple(uint8 signature_type, bytes signature_bytes) signature) view returns (bytes32 taker_order_hash)",
      "function verifyRoute(tuple(address[] addresses, uint128[] ratios) route) view returns (bool)",
      "function verifyStablesLimit(uint128 collateralAmount, uint128 usdeAmount, address collateralAsset, uint8 orderType) view returns (bool)"
    ],
    "0xE5e48Ad1F9D1A894188b483DcF91f4FaD6AbA43b": [
      "event ATokenUpgraded(address indexed asset, address indexed proxy, address indexed implementation)",
      "event AssetBorrowableInEModeChanged(address indexed asset, uint8 categoryId, bool borrowable)",
      "event AssetCollateralInEModeChanged(address indexed asset, uint8 categoryId, bool collateral)",
      "event BorrowCapChanged(address indexed asset, uint256 oldBorrowCap, uint256 newBorrowCap)",
      "event BorrowableInIsolationChanged(address asset, bool borrowable)",
      "event BridgeProtocolFeeUpdated(uint256 oldBridgeProtocolFee, uint256 newBridgeProtocolFee)",
      "event CollateralConfigurationChanged(address indexed asset, uint256 ltv, uint256 liquidationThreshold, uint256 liquidationBonus)",
      "event DebtCeilingChanged(address indexed asset, uint256 oldDebtCeiling, uint256 newDebtCeiling)",
      "event EModeCategoryAdded(uint8 indexed categoryId, uint256 ltv, uint256 liquidationThreshold, uint256 liquidationBonus, address oracle, string label)",
      "event FlashloanPremiumToProtocolUpdated(uint128 oldFlashloanPremiumToProtocol, uint128 newFlashloanPremiumToProtocol)",
      "event FlashloanPremiumTotalUpdated(uint128 oldFlashloanPremiumTotal, uint128 newFlashloanPremiumTotal)",
      "event LiquidationGracePeriodChanged(address indexed asset, uint40 gracePeriodUntil)",
      "event LiquidationGracePeriodDisabled(address indexed asset)",
      "event LiquidationProtocolFeeChanged(address indexed asset, uint256 oldFee, uint256 newFee)",
      "event PendingLtvChanged(address indexed asset, uint256 ltv)",
      "event ReserveActive(address indexed asset, bool active)",
      "event ReserveBorrowing(address indexed asset, bool enabled)",
      "event ReserveDropped(address indexed asset)",
      "event ReserveFactorChanged(address indexed asset, uint256 oldReserveFactor, uint256 newReserveFactor)",
      "event ReserveFlashLoaning(address indexed asset, bool enabled)",
      "event ReserveFrozen(address indexed asset, bool frozen)",
      "event ReserveInitialized(address indexed asset, address indexed aToken, address stableDebtToken, address variableDebtToken, address interestRateStrategyAddress)",
      "event ReserveInterestRateDataChanged(address indexed asset, address indexed strategy, bytes data)",
      "event ReserveInterestRateStrategyChanged(address indexed asset, address oldStrategy, address newStrategy)",
      "event ReservePaused(address indexed asset, bool paused)",
      "event SiloedBorrowingChanged(address indexed asset, bool oldState, bool newState)",
      "event SupplyCapChanged(address indexed asset, uint256 oldSupplyCap, uint256 newSupplyCap)",
      "event UnbackedMintCapChanged(address indexed asset, uint256 oldUnbackedMintCap, uint256 newUnbackedMintCap)",
      "event VariableDebtTokenUpgraded(address indexed asset, address indexed proxy, address indexed implementation)",
      "function CONFIGURATOR_REVISION() view returns (uint256)",
      "function MAX_GRACE_PERIOD() view returns (uint40)",
      "function configureReserveAsCollateral(address asset, uint256 ltv, uint256 liquidationThreshold, uint256 liquidationBonus)",
      "function disableLiquidationGracePeriod(address asset)",
      "function dropReserve(address asset)",
      "function getConfiguratorLogic() pure returns (address)",
      "function getPendingLtv(address asset) view returns (uint256)",
      "function initReserves(tuple(address aTokenImpl, address variableDebtTokenImpl, bool useVirtualBalance, address interestRateStrategyAddress, address underlyingAsset, address treasury, address incentivesController, string aTokenName, string aTokenSymbol, string variableDebtTokenName, string variableDebtTokenSymbol, bytes params, bytes interestRateData)[] input)",
      "function initialize(address provider)",
      "function setAssetBorrowableInEMode(address asset, uint8 categoryId, bool borrowable)",
      "function setAssetCollateralInEMode(address asset, uint8 categoryId, bool allowed)",
      "function setBorrowCap(address asset, uint256 newBorrowCap)",
      "function setBorrowableInIsolation(address asset, bool borrowable)",
      "function setDebtCeiling(address asset, uint256 newDebtCeiling)",
      "function setEModeCategory(uint8 categoryId, uint16 ltv, uint16 liquidationThreshold, uint16 liquidationBonus, string label)",
      "function setLiquidationProtocolFee(address asset, uint256 newFee)",
      "function setPoolPause(bool paused, uint40 gracePeriod)",
      "function setPoolPause(bool paused)",
      "function setReserveActive(address asset, bool active)",
      "function setReserveBorrowing(address asset, bool enabled)",
      "function setReserveFactor(address asset, uint256 newReserveFactor)",
      "function setReserveFlashLoaning(address asset, bool enabled)",
      "function setReserveFreeze(address asset, bool freeze)",
      "function setReserveInterestRateData(address asset, bytes rateData)",
      "function setReserveInterestRateStrategyAddress(address asset, address rateStrategyAddress, bytes rateData)",
      "function setReservePause(address asset, bool paused)",
      "function setReservePause(address asset, bool paused, uint40 gracePeriod)",
      "function setSiloedBorrowing(address asset, bool newSiloed)",
      "function setSupplyCap(address asset, uint256 newSupplyCap)",
      "function setUnbackedMintCap(address asset, uint256 newUnbackedMintCap)",
      "function updateAToken(tuple(address asset, address treasury, address incentivesController, string name, string symbol, address implementation, bytes params) input)",
      "function updateBridgeProtocolFee(uint256 newBridgeProtocolFee)",
      "function updateFlashloanPremiumToProtocol(uint128 newFlashloanPremiumToProtocol)",
      "function updateFlashloanPremiumTotal(uint128 newFlashloanPremiumTotal)",
      "function updateVariableDebtToken(tuple(address asset, address incentivesController, string name, string symbol, address implementation, bytes params) input)"
    ],
    "0xe5E8E834086F1a964f9A089eB6Ae11796862e4CE": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Migrated(address indexed account, uint256 indexed amount)",
      "event Minted(address indexed account, uint256 indexed amount, address indexed minter)",
      "event MinterChanged(address indexed oldMinter, address indexed newMinter)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function changeMinter(address newMinter)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function emergencyERC20Drain(address token, uint256 amount)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address _oldKNC, address _minter)",
      "function mint(address account, uint256 amount)",
      "function mintWithOldKnc(uint256 amount)",
      "function minter() view returns (address)",
      "function name() view returns (string)",
      "function oldKNC() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0xE7B67F44eA304DD7f6d215b13686637ff64CD2B2": [
      "constructor(address emissionManager)",
      "event Accrued(address indexed asset, address indexed reward, address indexed user, uint256 assetIndex, uint256 userIndex, uint256 rewardsAccrued)",
      "event AssetConfigUpdated(address indexed asset, address indexed reward, uint256 oldEmission, uint256 newEmission, uint256 oldDistributionEnd, uint256 newDistributionEnd, uint256 assetIndex)",
      "event ClaimerSet(address indexed user, address indexed claimer)",
      "event RewardOracleUpdated(address indexed reward, address indexed rewardOracle)",
      "event RewardsClaimed(address indexed user, address indexed reward, address indexed to, address claimer, uint256 amount)",
      "event TransferStrategyInstalled(address indexed reward, address indexed transferStrategy)",
      "function EMISSION_MANAGER() view returns (address)",
      "function REVISION() view returns (uint256)",
      "function claimAllRewards(address[] assets, address to) returns (address[] rewardsList, uint256[] claimedAmounts)",
      "function claimAllRewardsOnBehalf(address[] assets, address user, address to) returns (address[] rewardsList, uint256[] claimedAmounts)",
      "function claimAllRewardsToSelf(address[] assets) returns (address[] rewardsList, uint256[] claimedAmounts)",
      "function claimRewards(address[] assets, uint256 amount, address to, address reward) returns (uint256)",
      "function claimRewardsOnBehalf(address[] assets, uint256 amount, address user, address to, address reward) returns (uint256)",
      "function claimRewardsToSelf(address[] assets, uint256 amount, address reward) returns (uint256)",
      "function configureAssets(tuple(uint88 emissionPerSecond, uint256 totalSupply, uint32 distributionEnd, address asset, address reward, address transferStrategy, address rewardOracle)[] config)",
      "function getAllUserRewards(address[] assets, address user) view returns (address[] rewardsList, uint256[] unclaimedAmounts)",
      "function getAssetDecimals(address asset) view returns (uint8)",
      "function getAssetIndex(address asset, address reward) view returns (uint256, uint256)",
      "function getClaimer(address user) view returns (address)",
      "function getDistributionEnd(address asset, address reward) view returns (uint256)",
      "function getEmissionManager() view returns (address)",
      "function getRewardOracle(address reward) view returns (address)",
      "function getRewardsByAsset(address asset) view returns (address[])",
      "function getRewardsData(address asset, address reward) view returns (uint256, uint256, uint256, uint256)",
      "function getRewardsList() view returns (address[])",
      "function getTransferStrategy(address reward) view returns (address)",
      "function getUserAccruedRewards(address user, address reward) view returns (uint256)",
      "function getUserAssetIndex(address user, address asset, address reward) view returns (uint256)",
      "function getUserRewards(address[] assets, address user, address reward) view returns (uint256)",
      "function handleAction(address user, uint256 totalSupply, uint256 userBalance)",
      "function initialize(address)",
      "function setClaimer(address user, address caller)",
      "function setDistributionEnd(address asset, address reward, uint32 newDistributionEnd)",
      "function setEmissionPerSecond(address asset, address[] rewards, uint88[] newEmissionsPerSecond)",
      "function setRewardOracle(address reward, address rewardOracle)",
      "function setTransferStrategy(address reward, address transferStrategy)"
    ],
    "0xe897D8620D5EbA2C8ecAAF0aDa191a23230aB8Ec": [
      "constructor(address _singleton)"
    ],
    "0xe8eF806c8aaDc541408dcAd36107c7d26a391712": [
      "constructor(address _SY, address _PT, string _name, string _symbol, uint8 __decimals, uint256 _expiry, bool _doCacheIndexSameBlock)",
      "error ArrayEmpty()",
      "error ArrayLengthMismatch()",
      "error YCExpired()",
      "error YCNoFloatingSy()",
      "error YCNotExpired()",
      "error YCNothingToRedeem()",
      "error YCPostExpiryDataNotSet()",
      "error YieldContractInsufficientSy(uint256 actualSy, uint256 requiredSy)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Burn(address indexed caller, address indexed receiver, uint256 amountPYToRedeem, uint256 amountSyOut)",
      "event CollectInterestFee(uint256 amountInterestFee)",
      "event CollectRewardFee(address indexed rewardToken, uint256 amountRewardFee)",
      "event Mint(address indexed caller, address indexed receiverPT, address indexed receiverYT, uint256 amountSyToMint, uint256 amountPYOut)",
      "event NewInterestIndex(uint256 indexed newIndex)",
      "event RedeemInterest(address indexed user, uint256 interestOut)",
      "event RedeemRewards(address indexed user, uint256[] amountRewardsOut)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function PT() view returns (address)",
      "function SY() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function doCacheIndexSameBlock() view returns (bool)",
      "function expiry() view returns (uint256)",
      "function factory() view returns (address)",
      "function getPostExpiryData() view returns (uint256 firstPYIndex, uint256 totalSyInterestForTreasury, uint256[] firstRewardIndexes, uint256[] userRewardOwed)",
      "function getRewardTokens() view returns (address[])",
      "function isExpired() view returns (bool)",
      "function mintPY(address receiverPT, address receiverYT) returns (uint256 amountPYOut)",
      "function mintPYMulti(address[] receiverPTs, address[] receiverYTs, uint256[] amountSyToMints) returns (uint256[] amountPYOuts)",
      "function name() view returns (string)",
      "function postExpiry() view returns (uint128 firstPYIndex, uint128 totalSyInterestForTreasury)",
      "function pyIndexCurrent() returns (uint256 currentIndex)",
      "function pyIndexLastUpdatedBlock() view returns (uint128)",
      "function pyIndexStored() view returns (uint256)",
      "function redeemDueInterestAndRewards(address user, bool redeemInterest, bool redeemRewards) returns (uint256 interestOut, uint256[] rewardsOut)",
      "function redeemInterestAndRewardsPostExpiryForTreasury() returns (uint256 interestOut, uint256[] rewardsOut)",
      "function redeemPY(address receiver) returns (uint256 amountSyOut)",
      "function redeemPYMulti(address[] receivers, uint256[] amountPYToRedeems) returns (uint256[] amountSyOuts)",
      "function rewardIndexesCurrent() returns (uint256[])",
      "function setPostExpiryData()",
      "function syReserve() view returns (uint256)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function userInterest(address) view returns (uint128 index, uint128 accrued)",
      "function userReward(address, address) view returns (uint128 index, uint128 accrued)"
    ],
    "0xE982615d461DD5cD06575BbeA87624fda4e3de17": [
      "function incrementMinterAllowance(uint256 _allowanceIncrement) returns (bool)",
      "function setMinterManager(address _newMinterManager)",
      "function decrementMinterAllowance(uint256 _allowanceDecrement) returns (bool)",
      "function owner() view returns (address)",
      "function getMinterManager() view returns (address)",
      "function getWorker(address _controller) view returns (address)",
      "function configureController(address _controller, address _worker)",
      "function configureMinter(uint256 _newAllowance) returns (bool)",
      "function removeMinter() returns (bool)",
      "function transferOwnership(address newOwner)",
      "function removeController(address _controller)",
      "constructor(address _minterManager)",
      "event MinterManagerSet(address indexed _oldMinterManager, address indexed _newMinterManager)",
      "event MinterConfigured(address indexed _msgSender, address indexed _minter, uint256 _allowance)",
      "event MinterRemoved(address indexed _msgSender, address indexed _minter)",
      "event MinterAllowanceIncremented(address indexed _msgSender, address indexed _minter, uint256 _increment, uint256 _newAllowance)",
      "event MinterAllowanceDecremented(address indexed msgSender, address indexed minter, uint256 decrement, uint256 newAllowance)",
      "event ControllerConfigured(address indexed _controller, address indexed _worker)",
      "event ControllerRemoved(address indexed _controller)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0xeA51d7853EEFb32b6ee06b1C12E6dcCA88Be0fFE": [
      "constructor(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function implementation() returns (address)",
      "function initialize(address _logic, bytes _data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xea8A763b5b1f9c9c7aeA64F33947448D9E39e475": [
      "constructor()",
      "error CantRenounceOwnership()",
      "error InvalidAdminChange()",
      "error NotPendingAdmin()",
      "error OperationNotAllowed()",
      "error ZeroAddressException()",
      "event AdminTransferRequested(address indexed oldAdmin, address indexed newAdmin)",
      "event AdminTransferred(address indexed oldAdmin, address indexed newAdmin)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event LockedAmountRedistributed(address from, address to, uint256 amount)",
      "event MinterAdded(address indexed minterAddress)",
      "event MinterRemoved(address indexed minterAddress)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event TokensRescued(address token, address to, uint256 amount)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event TransferStateUpdated(uint8 prevState, uint8 state)",
      "function BLACKLISTED_ROLE() view returns (bytes32)",
      "function BLACKLIST_MANAGER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function MINTER_CONTRACT() view returns (bytes32)",
      "function WHITELISTED_ROLE() view returns (bytes32)",
      "function WHITELIST_MANAGER_ROLE() view returns (bytes32)",
      "function acceptAdmin()",
      "function addBlacklistAddress(address[] users)",
      "function addMinter(address minterContract)",
      "function addWhitelistAddress(address[] users)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address admin, address minterContract)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function redistributeLockedAmount(address from, address to)",
      "function removeBlacklistAddress(address[] users)",
      "function removeMinter(address minterContract)",
      "function removeWhitelistAddress(address[] users)",
      "function renounceRole(bytes32, address)",
      "function rescueTokens(address token, uint256 amount, address to)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferAdmin(address newAdmin)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferState() view returns (uint8)",
      "function updateTransferState(uint8 code)"
    ],
    "0xEb3107117FEAd7de89Cd14D463D340A2E6917769": [
      "constructor(address _masterCopy)"
    ],
    "0xEE4d2A71cF479e0D3d0c3c2C923dbfEB57E73111": [
      "constructor(address _rocketStorageAddress)",
      "event RewardSnapshot(uint256 indexed rewardIndex, tuple(uint256 rewardIndex, uint256 executionBlock, uint256 consensusBlock, bytes32 merkleRoot, string merkleTreeCID, uint256 intervalsPassed, uint256 treasuryRPL, uint256[] trustedNodeRPL, uint256[] nodeRPL, uint256[] nodeETH, uint256 userETH) submission, uint256 intervalStartTime, uint256 intervalEndTime, uint256 time)",
      "event RewardSnapshotSubmitted(address indexed from, uint256 indexed rewardIndex, tuple(uint256 rewardIndex, uint256 executionBlock, uint256 consensusBlock, bytes32 merkleRoot, string merkleTreeCID, uint256 intervalsPassed, uint256 treasuryRPL, uint256[] trustedNodeRPL, uint256[] nodeRPL, uint256[] nodeETH, uint256 userETH) submission, uint256 time)",
      "function executeRewardSnapshot(tuple(uint256 rewardIndex, uint256 executionBlock, uint256 consensusBlock, bytes32 merkleRoot, string merkleTreeCID, uint256 intervalsPassed, uint256 treasuryRPL, uint256[] trustedNodeRPL, uint256[] nodeRPL, uint256[] nodeETH, uint256 userETH) _submission)",
      "function getClaimIntervalExecutionAddress(uint256 _interval) view returns (address)",
      "function getClaimIntervalExecutionBlock(uint256 _interval) view returns (uint256)",
      "function getClaimIntervalTime() view returns (uint256)",
      "function getClaimIntervalTimeStart() view returns (uint256)",
      "function getClaimIntervalsPassed() view returns (uint256)",
      "function getClaimingContractPerc(string _claimingContract) view returns (uint256)",
      "function getClaimingContractsPerc(string[] _claimingContracts) view returns (uint256[])",
      "function getPendingETHRewards() view returns (uint256)",
      "function getPendingRPLRewards() view returns (uint256)",
      "function getRPLBalance() view returns (uint256)",
      "function getRewardIndex() view returns (uint256)",
      "function getSubmissionCount(tuple(uint256 rewardIndex, uint256 executionBlock, uint256 consensusBlock, bytes32 merkleRoot, string merkleTreeCID, uint256 intervalsPassed, uint256 treasuryRPL, uint256[] trustedNodeRPL, uint256[] nodeRPL, uint256[] nodeETH, uint256 userETH) _submission) view returns (uint256)",
      "function getSubmissionFromNodeExists(address _trustedNodeAddress, tuple(uint256 rewardIndex, uint256 executionBlock, uint256 consensusBlock, bytes32 merkleRoot, string merkleTreeCID, uint256 intervalsPassed, uint256 treasuryRPL, uint256[] trustedNodeRPL, uint256[] nodeRPL, uint256[] nodeETH, uint256 userETH) _submission) view returns (bool)",
      "function getTrustedNodeSubmitted(address _trustedNodeAddress, uint256 _rewardIndex) view returns (bool)",
      "function submitRewardSnapshot(tuple(uint256 rewardIndex, uint256 executionBlock, uint256 consensusBlock, bytes32 merkleRoot, string merkleTreeCID, uint256 intervalsPassed, uint256 treasuryRPL, uint256[] trustedNodeRPL, uint256[] nodeRPL, uint256[] nodeETH, uint256 userETH) _submission)",
      "function version() view returns (uint8)"
    ],
    "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38": [
      "constructor(address _owner, address vaultController, string _name, string _symbol)",
      "error AccessDenied()",
      "error ECDSAInvalidSignature()",
      "error ECDSAInvalidSignatureLength(uint256 length)",
      "error ECDSAInvalidSignatureS(bytes32 s)",
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error ERC2612ExpiredSignature(uint256 deadline)",
      "error ERC2612InvalidSigner(address signer, address owner)",
      "error InvalidAccountNonce(address account, uint256 currentNonce)",
      "error InvalidShortString()",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error StringTooLong(string str)",
      "error ZeroAddress()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ControllerUpdated(address indexed controller, bool registered)",
      "event EIP712DomainChanged()",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function acceptOwnership()",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(address account, uint256 value)",
      "function controllers(address controller) view returns (bool enabled)",
      "function decimals() view returns (uint8)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function mint(address account, uint256 value)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceOwnership()",
      "function setController(address controller, bool enabled)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0xF541AA4d6f29ec2423A0D306dBc677021A02DBC0": [
      "constructor(address _susde, uint256 _initialSupplyCap)",
      "error InvalidShortString()",
      "error SYInsufficientSharesOut(uint256 actualSharesOut, uint256 requiredSharesOut)",
      "error SYInsufficientTokenOut(uint256 actualTokenOut, uint256 requiredTokenOut)",
      "error SYInvalidTokenIn(address token)",
      "error SYInvalidTokenOut(address token)",
      "error SYZeroDeposit()",
      "error SYZeroRedeem()",
      "error StringTooLong(string str)",
      "error SupplyCapExceeded(uint256 totalSupply, uint256 supplyCap)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ClaimRewards(address indexed user, address[] rewardTokens, uint256[] rewardAmounts)",
      "event Deposit(address indexed caller, address indexed receiver, address indexed tokenIn, uint256 amountDeposited, uint256 amountSyOut)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Redeem(address indexed caller, address indexed receiver, address indexed tokenOut, uint256 amountSyToRedeem, uint256 amountTokenOut)",
      "event SupplyCapUpdated(uint256 newSupplyCap)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function accruedRewards(address) view returns (uint256[] rewardAmounts)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function asset() view returns (address)",
      "function assetInfo() view returns (uint8 assetType, address assetAddress, uint8 assetDecimals)",
      "function balanceOf(address account) view returns (uint256)",
      "function claimOwnership()",
      "function claimRewards(address) returns (uint256[] rewardAmounts)",
      "function decimals() view returns (uint8)",
      "function deposit(address receiver, address tokenIn, uint256 amountTokenToDeposit, uint256 minSharesOut) payable returns (uint256 amountSharesOut)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function exchangeRate() view returns (uint256)",
      "function getAbsoluteSupplyCap() view returns (uint256)",
      "function getAbsoluteTotalSupply() view returns (uint256)",
      "function getRewardTokens() view returns (address[] rewardTokens)",
      "function getTokensIn() view returns (address[] res)",
      "function getTokensOut() view returns (address[] res)",
      "function isValidTokenIn(address token) view returns (bool)",
      "function isValidTokenOut(address token) view returns (bool)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function previewDeposit(address tokenIn, uint256 amountTokenToDeposit) view returns (uint256 amountSharesOut)",
      "function previewRedeem(address tokenOut, uint256 amountSharesToRedeem) view returns (uint256 amountTokenOut)",
      "function redeem(address receiver, uint256 amountSharesToRedeem, address tokenOut, uint256 minTokenOut, bool burnFromInternalBalance) returns (uint256 amountTokenOut)",
      "function rewardIndexesCurrent() returns (uint256[] indexes)",
      "function rewardIndexesStored() view returns (uint256[] indexes)",
      "function supplyCap() view returns (uint256)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner, bool direct, bool renounce)",
      "function unpause()",
      "function updateSupplyCap(uint256 newSupplyCap)",
      "function yieldToken() view returns (address)"
    ],
    "0xf73a1260d222f447210581DDf212D915c09a3249": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0xf8C97539934ee66a67C26010e8e027D77E821B0C": [
      "event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt)",
      "event MintedToTreasury(address indexed reserve, uint256 amountMinted)"
    ],
    "0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed sender, address indexed receiver, uint256 value)",
      "event SetMinter(address indexed minter)",
      "constructor(string _name, string _symbol)",
      "function transferFrom(address _from, address _to, uint256 _value) returns (bool)",
      "function transfer(address _to, uint256 _value) returns (bool)",
      "function approve(address _spender, uint256 _value) returns (bool)",
      "function permit(address _owner, address _spender, uint256 _value, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns (bool)",
      "function increaseAllowance(address _spender, uint256 _add_value) returns (bool)",
      "function decreaseAllowance(address _spender, uint256 _sub_value) returns (bool)",
      "function burnFrom(address _from, uint256 _value) returns (bool)",
      "function burn(uint256 _value) returns (bool)",
      "function mint(address _to, uint256 _value) returns (bool)",
      "function set_minter(address _minter)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function decimals() view returns (uint8)",
      "function version() view returns (string)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function salt() view returns (bytes32)",
      "function allowance(address arg0, address arg1) view returns (uint256)",
      "function balanceOf(address arg0) view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function nonces(address arg0) view returns (uint256)",
      "function minter() view returns (address)"
    ],
    "0xFaB5891ED867a1195303251912013b92c4fc3a1D": [
      "constructor()",
      "error AccountAlreadyHasSupplyControllerRole(address account)",
      "error AccountMissingSupplyControllerRole(address account)",
      "error CannotAddDuplicateAddress(address addressToAdd)",
      "error CannotBurnFromAddress(address supplyController, address burnFromAddress)",
      "error CannotMintToAddress(address supplyController, address mintToAddress)",
      "error CannotRemoveNonExistantAddress(address addressToRemove)",
      "error OldTimestamp(uint256 timestamp, uint256 expected)",
      "error RateLimitExceeded()",
      "error ZeroAddress()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event AllowAnyMintAndBurnAddressUpdated(address indexed supplyController, bool newAllowAnyMintAndBurnAddress, bool oldAllowAnyMintAndBurnAddress)",
      "event BeaconUpgraded(address indexed beacon)",
      "event DefaultAdminDelayChangeCanceled()",
      "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
      "event DefaultAdminTransferCanceled()",
      "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
      "event Initialized(uint8 version)",
      "event LimitConfigUpdated(address indexed supplyController, tuple(uint256 limitCapacity, uint256 refillPerSecond) newLimitConfig, tuple(uint256 limitCapacity, uint256 refillPerSecond) oldLimitConfig)",
      "event MintAddressAddedToWhitelist(address indexed supplyController, address indexed mintAddress)",
      "event MintAddressRemovedFromWhitelist(address indexed supplyController, address indexed mintAddress)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SupplyControllerAdded(address indexed newSupplyController, uint256 limitCapacity, uint256 refillPerSecond, address[] mintAddressWhitelist, bool allowAnyMintAndBurnAddress)",
      "event SupplyControllerRemoved(address indexed oldSupplyController)",
      "event Upgraded(address indexed implementation)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function SUPPLY_CONTROLLER_MANAGER_ROLE() view returns (bytes32)",
      "function SUPPLY_CONTROLLER_ROLE() view returns (bytes32)",
      "function TOKEN_CONTRACT_ROLE() view returns (bytes32)",
      "function acceptDefaultAdminTransfer()",
      "function addMintAddressToWhitelist(address supplyController_, address mintAddress)",
      "function addSupplyController(address newSupplyController, uint256 limitCapacity, uint256 refillPerSecond, address[] mintAddressWhitelist, bool allowAnyMintAndBurnAddress)",
      "function beginDefaultAdminTransfer(address newAdmin)",
      "function canBurnFromAddress(address burnFromAddress, address sender) view",
      "function canMintToAddress(address mintToAddress, uint256 amount, address sender)",
      "function cancelDefaultAdminTransfer()",
      "function changeDefaultAdminDelay(uint48 newDelay)",
      "function defaultAdmin() view returns (address)",
      "function defaultAdminDelay() view returns (uint48)",
      "function defaultAdminDelayIncreaseWait() view returns (uint48)",
      "function getAllSupplyControllerAddresses() view returns (address[])",
      "function getRemainingMintAmount(address supplyController_, uint256 timestamp) view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getSupplyControllerConfig(address supplyController_) view returns (tuple(uint256 limitCapacity, uint256 refillPerSecond) limitConfig, address[] mintAddressWhitelist, bool allowAnyMintAndBurnAddress)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address initialOwner, address supplyControllerManager, address tokenAddress, tuple(address newSupplyController, tuple(uint256 limitCapacity, uint256 refillPerSecond) limitConfig, address[] mintAddressWhitelist, bool allowAnyMintAndBurnAddress)[] scInitializationConfig)",
      "function owner() view returns (address)",
      "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
      "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
      "function proxiableUUID() view returns (bytes32)",
      "function removeMintAddressFromWhitelist(address supplyController_, address mintAddress)",
      "function removeSupplyController(address oldSupplyController)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function rollbackDefaultAdminDelay()",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateAllowAnyMintAndBurnAddress(address supplyController_, bool allowAnyMintAndBurnAddress)",
      "function updateLimitConfig(address supplyController_, uint256 limitCapacity, uint256 refillPerSecond)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xfd78EE919681417d192449715b2594ab58f5D002": [
      "constructor(address _tokenController)",
      "event LocalTokenMessengerAdded(address localTokenMessenger)",
      "event LocalTokenMessengerRemoved(address localTokenMessenger)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RescuerChanged(address indexed newRescuer)",
      "event SetBurnLimitPerMessage(address indexed token, uint256 burnLimitPerMessage)",
      "event SetTokenController(address tokenController)",
      "event TokenPairLinked(address localToken, uint32 remoteDomain, bytes32 remoteToken)",
      "event TokenPairUnlinked(address localToken, uint32 remoteDomain, bytes32 remoteToken)",
      "event Unpause()",
      "function acceptOwnership()",
      "function addLocalTokenMessenger(address newLocalTokenMessenger)",
      "function burn(address burnToken, uint256 burnAmount)",
      "function burnLimitsPerMessage(address) view returns (uint256)",
      "function getLocalToken(uint32 remoteDomain, bytes32 remoteToken) view returns (address)",
      "function linkTokenPair(address localToken, uint32 remoteDomain, bytes32 remoteToken)",
      "function localTokenMessenger() view returns (address)",
      "function mint(uint32 sourceDomain, bytes32 burnToken, address recipientOne, address recipientTwo, uint256 amountOne, uint256 amountTwo) returns (address)",
      "function mint(uint32 sourceDomain, bytes32 burnToken, address to, uint256 amount) returns (address mintToken)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function remoteTokensToLocalTokens(bytes32) view returns (address)",
      "function removeLocalTokenMessenger()",
      "function rescueERC20(address tokenContract, address to, uint256 amount)",
      "function rescuer() view returns (address)",
      "function setMaxBurnAmountPerMessage(address localToken, uint256 burnLimitPerMessage)",
      "function setTokenController(address newTokenController)",
      "function tokenController() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unlinkTokenPair(address localToken, uint32 remoteDomain, bytes32 remoteToken)",
      "function unpause()",
      "function updatePauser(address _newPauser)",
      "function updateRescuer(address newRescuer)"
    ],
    "0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] datas, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256 duration)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256 timestamp)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] datas, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function isOperation(bytes32 id) view returns (bool pending)",
      "function isOperationDone(bytes32 id) view returns (bool done)",
      "function isOperationPending(bytes32 id) view returns (bool pending)",
      "function isOperationReady(bytes32 id) view returns (bool ready)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] datas, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0xFeeb6FE430B7523fEF2a38327241eE7153779535": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ]
  },
  "usedTemplates": {
    "fraxtal/Timelock": "0x8079de478ba3ed9fb9c870c9a1a8ea4ae157f9151992200a7087c3d897d46245",
    "global/ProxyAdmin": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "tokens/circle/MasterMinter": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "tokens/circle/TokenMinter": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "tokens/circle/USDC": "0xbe50fad150475d144499aa8bab3cb2d2e1795090cbbf93e2c6c239895a678b97",
    "tokens/Lido/MiniMeToken": "0x4477605aa619c192084296dec31b5dc3ef87585bb125619bf0732705aa9b8500",
    "tokens/Lido/stETH": "0x37a7c6753d191d9570683970648eab69b28b5e19257ea6b82872f52ad9c5f0e1",
    "tokens/Lido/wstETH": "0x9b708a05879c062566a96f737bd9998af0ceda3a51a54456a93cd24fd4c4dfdf"
  },
  "permissionsConfigHash": "0x290445ef85fc6c80db936c5379c91658a587f2831d4c47fc1f1de81c71ad94da"
}
