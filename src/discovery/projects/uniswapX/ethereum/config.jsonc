{
  "$schema": "../../../../../discovery/schemas/config.v2.schema.json",
  "chain": "ethereum",
  "name": "uniswap",
  "import": ["../../ethereumConfig.jsonc"],
  "initialAddresses": [
    "0x6000da47483062A0D734Ba3dc7576Ce6A0B645C4"
  ],
  "names": {
    "0x6000da47483062A0D734Ba3dc7576Ce6A0B645C4": "DutchOrderReactor",
    "0x000000000022D473030F116dDEE9F6B43aC78BA3": "Permit2",
    "0x1a9C8182C09F50C8318d769245beA52c32BE35BC": "Timelock",
    "0x408ED6354d4973f66138C91495F2f2FCbd8724C3": "GovernorBravoDelegator",
    "0x53a328F4086d7C0F1Fa19e594c9b842125263026": "GovernorBravoDelegate"
  },
  "overrides": {
    "0x6000da47483062A0D734Ba3dc7576Ce6A0B645C4": {
      // DutchOrderReactor - Core contract for Dutch auction orders
      "description": "Uniswap V4 Dutch Order Reactor - handles Dutch auction style orders for token swaps with exclusive filler rights",
      "proxyType": "immutable",
      "fields": {
        "owner": {
          "description": "Timelock contract that controls the reactor"
        },
        "permit2": {
          "description": "Permit2 contract for signature-based token approvals"
        },
        "feeController": {
          "description": "Protocol fee controller for collecting fees on orders"
        },
        "feeControllerHistory": {
          "handler": {
            "type": "event",
            "select": "newFeeController",
            "add": {
              "event": "event ProtocolFeeControllerSet(address indexed oldFeeController, address indexed newFeeController)"
            }
          }
        },
        "ownershipHistory": {
          "handler": {
            "type": "event",
            "select": "newOwner",
            "add": {
              "event": "event OwnershipTransferred(address indexed user, address indexed newOwner)"
            }
          }
        }
      }
    },
    "0x000000000022D473030F116dDEE9F6B43aC78BA3": {
      // Permit2 - Signature-based token approval system
      "description": "Permit2 - Unified token approval system for signature-based transfers and allowances",
      "proxyType": "immutable",
      "fields": {
        "DOMAIN_SEPARATOR": {
          "description": "EIP-712 domain separator for signature verification"
        }
      }
    },
    "0x1a9C8182C09F50C8318d769245beA52c32BE35BC": {
      // Timelock - Governance timelock
      "description": "Uniswap Timelock - delays governance actions for security",
      "proxyType": "immutable",
      "fields": {
        "admin": {
          "description": "Governor contract that can propose timelock actions"
        },
        "delay": {
          "description": "Minimum delay before timelock actions can be executed (48 hours)"
        },
        "GRACE_PERIOD": {
          "description": "Time window after delay when action can be executed (14 days)"
        },
        "MAXIMUM_DELAY": {
          "description": "Maximum delay that can be set (30 days)"
        },
        "MINIMUM_DELAY": {
          "description": "Minimum delay that can be set (48 hours)"
        }
      }
    },
    "0x408ED6354d4973f66138C91495F2f2FCbd8724C3": {
      // GovernorBravoDelegator - Governance proxy (stores actual state)
      "description": "Uniswap Governor Bravo Delegator - proxy contract for governance that stores actual governance state",
      "proxyType": "call implementation proxy",
      "fields": {
        "admin": {
          "description": "Timelock contract that controls the governor"
        },
        "implementation": {
          "description": "GovernorBravoDelegate implementation contract"
        },
        "pendingAdmin": {
          "description": "Pending admin change"
        },
        "getActions": {
          "handler": {
            "type": "array",
            "method": "getActions",
            "indices": [9, 10]
          }
        },
        "proposals": {
          "handler": {
            "type": "array",
            "method": "proposals",
            "indices": [0, 1, 2, 3, 4]
          }
        },
        "votingReceipts": {
          "handler": {
            "type": "array",
            "method": "getReceipt",
            "indices": [1, 2, 3, 4]
          }
        }
      }
    },
    "0x53a328F4086d7C0F1Fa19e594c9b842125263026": {
      // GovernorBravoDelegate - Governance implementation (logic only)
      "description": "Uniswap Governor Bravo Delegate - governance implementation with proposal and voting logic (state stored in delegator)",
      "proxyType": "immutable",
      "ignoreInWatchMode": ["getActions", "proposals", "state"],
      "fields": {
        "timelock": {
          "description": "Timelock contract for executing approved proposals (stored in delegator)"
        },
        "uni": {
          "description": "UNI token contract for voting power (stored in delegator)"
        },
        "quorumVotes": {
          "description": "Minimum votes required for proposal to pass (40M UNI) (stored in delegator)"
        },
        "proposalThreshold": {
          "description": "Minimum UNI required to create proposals (stored in delegator)"
        },
        "votingDelay": {
          "description": "Blocks to wait before voting starts (stored in delegator)"
        },
        "votingPeriod": {
          "description": "Blocks that voting is active (stored in delegator)"
        }
      }
    }
  }
} 